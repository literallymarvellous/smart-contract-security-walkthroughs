{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_password",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_password",
          "type": "bytes32"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161013838038061013883398101604081905261002f91610045565b6000805460ff191660019081179091555561005e565b60006020828403121561005757600080fd5b5051919050565b60cc8061006c6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea26469706673582212204f625cd9d39a045d7559a7a90dfe87d78d8295490f520a18d8690141760fbd6b64736f6c634300080f0033",
    "sourceMap": "57:299:15:-:0;;;133:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;174:6;:13;;-1:-1:-1;;174:13:15;183:4;174:13;;;;;;197:20;57:299;;14:184:20;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:20;;14:184;-1:-1:-1;14:184:20:o;:::-;57:299:15;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c8063cf309012146037578063ec9b5b3a146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b60666062366004607e565b6068565b005b8060015403607b576000805460ff191690555b50565b600060208284031215608f57600080fd5b503591905056fea26469706673582212204f625cd9d39a045d7559a7a90dfe87d78d8295490f520a18d8690141760fbd6b64736f6c634300080f0033",
    "sourceMap": "57:299:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:18;;;;;;;;;;;;179:14:20;;172:22;154:41;;142:2;127:18;78::15;;;;;;;230:124;;;;;;:::i;:::-;;:::i;:::-;;;298:9;286:8;;:21;282:66;;332:5;323:14;;-1:-1:-1;;323:14:15;;;282:66;230:124;:::o;206:180:20:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:20;;206:180;-1:-1:-1;206:180:20:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "locked()": "cf309012",
    "unlock(bytes32)": "ec9b5b3a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_password\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_password\",\"type\":\"bytes32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ethernaut/level_8/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/ethernaut/level_8/Vault.sol\":{\"keccak256\":\"0xa9dc29eec754730aa7083f52b45d76f6df613eb6d5bdb15b67d408ef2f3a8527\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0675c9cbade01d0ea4d023fc3fe83eedad8af92a2b138ac36a4629f179d94b3b\",\"dweb:/ipfs/QmbeBCYvLiqRgg9NLJBgYFfT768HVMbNLWBFe8Z2KrFQ1h\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_password",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_password",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlock"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ethernaut/level_8/Vault.sol": "Vault"
      },
      "libraries": {}
    },
    "sources": {
      "src/ethernaut/level_8/Vault.sol": {
        "keccak256": "0xa9dc29eec754730aa7083f52b45d76f6df613eb6d5bdb15b67d408ef2f3a8527",
        "urls": [
          "bzz-raw://0675c9cbade01d0ea4d023fc3fe83eedad8af92a2b138ac36a4629f179d94b3b",
          "dweb:/ipfs/QmbeBCYvLiqRgg9NLJBgYFfT768HVMbNLWBFe8Z2KrFQ1h"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "irOptimized": "/// @use-src 15:\"src/ethernaut/level_8/Vault.sol\"\nobject \"Vault_24050\" {\n    code {\n        {\n            /// @src 15:57:356  \"contract Vault {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Vault_24050\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 15:57:356  \"contract Vault {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 15:57:356  \"contract Vault {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 15:57:356  \"contract Vault {...\"\n            let value := mload(_1)\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 15:57:356  \"contract Vault {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 15:57:356  \"contract Vault {...\" */ not(255)), 1))\n            sstore(1, value)\n            let _2 := mload(64)\n            let _3 := datasize(\"Vault_24050_deployed\")\n            codecopy(_2, dataoffset(\"Vault_24050_deployed\"), _3)\n            return(_2, _3)\n        }\n    }\n    /// @use-src 15:\"src/ethernaut/level_8/Vault.sol\"\n    object \"Vault_24050_deployed\" {\n        code {\n            {\n                /// @src 15:57:356  \"contract Vault {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0xcf309012 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        mstore(_1, iszero(iszero(and(sload(_2), 0xff))))\n                        return(_1, 32)\n                    }\n                    case 0xec9b5b3a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 15:282:348  \"if (password == _password) {...\"\n                        if /** @src 15:286:307  \"password == _password\" */ eq(/** @src 15:57:356  \"contract Vault {...\" */ sload(1), calldataload(4))\n                        /// @src 15:282:348  \"if (password == _password) {...\"\n                        {\n                            /// @src 15:57:356  \"contract Vault {...\"\n                            sstore(_2, and(sload(_2), not(255)))\n                        }\n                        return(mload(64), _2)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a04d5ff1f93c09f56c3a7beaf61187d975db4ca800d758edee9a62aab8a8330364736f6c634300080f0033\"\n    }\n}\n",
  "ast": {
    "absolutePath": "src/ethernaut/level_8/Vault.sol",
    "id": 24051,
    "exportedSymbols": {
      "Vault": [
        24050
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:325:15",
    "nodes": [
      {
        "id": 24016,
        "nodeType": "PragmaDirective",
        "src": "32:23:15",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 24050,
        "nodeType": "ContractDefinition",
        "src": "57:299:15",
        "nodes": [
          {
            "id": 24018,
            "nodeType": "VariableDeclaration",
            "src": "78:18:15",
            "constant": false,
            "functionSelector": "cf309012",
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "90:6:15",
            "scope": 24050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 24017,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "78:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24020,
            "nodeType": "VariableDeclaration",
            "src": "102:24:15",
            "constant": false,
            "mutability": "mutable",
            "name": "password",
            "nameLocation": "118:8:15",
            "scope": 24050,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24019,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "102:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 24034,
            "nodeType": "FunctionDefinition",
            "src": "133:91:15",
            "body": {
              "id": 24033,
              "nodeType": "Block",
              "src": "164:60:15",
              "statements": [
                {
                  "expression": {
                    "id": 24027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24025,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24018,
                      "src": "174:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 24026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "183:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "174:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24028,
                  "nodeType": "ExpressionStatement",
                  "src": "174:13:15"
                },
                {
                  "expression": {
                    "id": 24031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24029,
                      "name": "password",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24020,
                      "src": "197:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24030,
                      "name": "_password",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24022,
                      "src": "208:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "197:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 24032,
                  "nodeType": "ExpressionStatement",
                  "src": "197:20:15"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 24023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24022,
                  "mutability": "mutable",
                  "name": "_password",
                  "nameLocation": "153:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 24034,
                  "src": "145:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24021,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "144:19:15"
            },
            "returnParameters": {
              "id": 24024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:0:15"
            },
            "scope": 24050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24049,
            "nodeType": "FunctionDefinition",
            "src": "230:124:15",
            "body": {
              "id": 24048,
              "nodeType": "Block",
              "src": "272:82:15",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 24041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24039,
                      "name": "password",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24020,
                      "src": "286:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 24040,
                      "name": "_password",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24036,
                      "src": "298:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "286:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24047,
                  "nodeType": "IfStatement",
                  "src": "282:66:15",
                  "trueBody": {
                    "id": 24046,
                    "nodeType": "Block",
                    "src": "309:39:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 24044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24042,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24018,
                            "src": "323:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 24043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "332:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "323:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24045,
                        "nodeType": "ExpressionStatement",
                        "src": "323:14:15"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ec9b5b3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlock",
            "nameLocation": "239:6:15",
            "parameters": {
              "id": 24037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24036,
                  "mutability": "mutable",
                  "name": "_password",
                  "nameLocation": "254:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 24049,
                  "src": "246:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24035,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "245:19:15"
            },
            "returnParameters": {
              "id": 24038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:0:15"
            },
            "scope": 24050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24050
        ],
        "name": "Vault",
        "nameLocation": "66:5:15",
        "scope": 24051,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 15
}
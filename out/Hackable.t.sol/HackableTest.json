{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hackable",
      "outputs": [
        {
          "internalType": "contract Hackable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50610815806100316000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636f2db99c1161005b5780636f2db99c146100d7578063ba414fa6146100df578063f8ccbf47146100f7578063fa7626d41461010a57600080fd5b80630a9254e4146100825780633a7684631461008c57806340111f62146100c4575b600080fd5b61008a610117565b005b6100a7737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6008546100a7906001600160a01b031681565b61008a610171565b6100e76102ea565b60405190151581526020016100bb565b6000546100e79062010000900460ff1681565b6000546100e79060ff1681565b602d60646040516101279061047f565b9182526020820152604001604051809103906000f08015801561014e573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b61019860405180604001604052806005815260200164626c6f636b60d81b81525043610415565b6040516301f7b4f360e41b815260916004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b031663f00d23206040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561024d57600080fd5b505af1158015610261573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b031663ae8421e16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc919061048c565b6102e8576102e86104b5565b565b60008054610100900460ff161561030a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156104105760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610398917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016104ef565b60408051601f19818403018152908290526103b291610520565b6000604051808303816000865af19150503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b509150508080602001905181019061040c919061048c565b9150505b919050565b61045a828260405160240161042b92919061053c565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261045e565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6102688061057883390190565b60006020828403121561049e57600080fd5b815180151581146104ae57600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b60005b838110156104e65781810151838201526020016104ce565b50506000910152565b6001600160e01b03198316815281516000906105128160048501602087016104cb565b919091016004019392505050565b600082516105328184602087016104cb565b9190910192915050565b604081526000835180604084015261055b8160608501602088016104cb565b602083019390935250601f91909101601f19160160600191905056fe608060405234801561001057600080fd5b5060405161026838038061026883398101604081905261002f91610047565b6000919091556001556002805460ff1916905561006b565b6000806040838503121561005a57600080fd5b505080516020909101519092909150565b6101ee8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632986e0541461005c5780632ee726bd14610078578063ae8421e114610081578063dfbf53ae1461009e578063f00d2320146100ce575b600080fd5b61006560015481565b6040519081526020015b60405180910390f35b61006560005481565b60025461008e9060ff1681565b604051901515815260200161006f565b6002546100b69061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161006f565b6100d66100d8565b005b60025460ff161561011f5760405162461bcd60e51b815260206004820152600c60248201526b416c726561647920646f6e6560a01b60448201526064015b60405180910390fd5b60006001544361012f9190610196565b905060005481146101745760405162461bcd60e51b815260206004820152600f60248201526e43616e27742063616c6c206d65202160881b6044820152606401610116565b506002805460ff196101003302166001600160a81b0319909116176001179055565b6000826101b357634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220db75f5f33d42bfdd2c05c5e7d9372d4bf24442c1ccd7d70013f85c1ad48caa1e64736f6c63430008110033a26469706673582212200b8852988106cbd87c182c46b0cfa80e8c54c38e6a8c0c6bc0609e334df9d8ce64736f6c63430008110033",
    "sourceMap": "148:417:85:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:2;;;;;148:417:85;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636f2db99c1161005b5780636f2db99c146100d7578063ba414fa6146100df578063f8ccbf47146100f7578063fa7626d41461010a57600080fd5b80630a9254e4146100825780633a7684631461008c57806340111f62146100c4575b600080fd5b61008a610117565b005b6100a7737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6008546100a7906001600160a01b031681565b61008a610171565b6100e76102ea565b60405190151581526020016100bb565b6000546100e79062010000900460ff1681565b6000546100e79060ff1681565b602d60646040516101279061047f565b9182526020820152604001604051809103906000f08015801561014e573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b61019860405180604001604052806005815260200164626c6f636b60d81b81525043610415565b6040516301f7b4f360e41b815260916004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90631f7b4f3090602401600060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b031663f00d23206040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561024d57600080fd5b505af1158015610261573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b031663ae8421e16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc919061048c565b6102e8576102e86104b5565b565b60008054610100900460ff161561030a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156104105760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610398917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016104ef565b60408051601f19818403018152908290526103b291610520565b6000604051808303816000865af19150503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b509150508080602001905181019061040c919061048c565b9150505b919050565b61045a828260405160240161042b92919061053c565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261045e565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6102688061057883390190565b60006020828403121561049e57600080fd5b815180151581146104ae57600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b60005b838110156104e65781810151838201526020016104ce565b50506000910152565b6001600160e01b03198316815281516000906105128160048501602087016104cb565b919091016004019392505050565b600082516105328184602087016104cb565b9190910192915050565b604081526000835180604084015261055b8160608501602088016104cb565b602083019390935250601f91909101601f19160160600191905056fe608060405234801561001057600080fd5b5060405161026838038061026883398101604081905261002f91610047565b6000919091556001556002805460ff1916905561006b565b6000806040838503121561005a57600080fd5b505080516020909101519092909150565b6101ee8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632986e0541461005c5780632ee726bd14610078578063ae8421e114610081578063dfbf53ae1461009e578063f00d2320146100ce575b600080fd5b61006560015481565b6040519081526020015b60405180910390f35b61006560005481565b60025461008e9060ff1681565b604051901515815260200161006f565b6002546100b69061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161006f565b6100d66100d8565b005b60025460ff161561011f5760405162461bcd60e51b815260206004820152600c60248201526b416c726561647920646f6e6560a01b60448201526064015b60405180910390fd5b60006001544361012f9190610196565b905060005481146101745760405162461bcd60e51b815260206004820152600f60248201526e43616e27742063616c6c206d65202160881b6044820152606401610116565b506002805460ff196101003302166001600160a81b0319909116176001179055565b6000826101b357634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220db75f5f33d42bfdd2c05c5e7d9372d4bf24442c1ccd7d70013f85c1ad48caa1e64736f6c63430008110033a26469706673582212200b8852988106cbd87c182c46b0cfa80e8c54c38e6a8c0c6bc0609e334df9d8ce64736f6c63430008110033",
    "sourceMap": "148:417:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:73;;;:::i;:::-;;321:38:2;;250:64;321:38;;;;;-1:-1:-1;;;;;190:32:94;;;172:51;;160:2;145:18;321:38:2;;;;;;;;184:24:85;;;;;-1:-1:-1;;;;;184:24:85;;;294:269;;;:::i;1819:584:0:-;;;:::i;:::-;;;625:14:94;;618:22;600:41;;588:2;573:18;1819:584:0;460:187:94;170:28:2;;;;;;;;;;;;1572:26:0;;;;;;;;;215:73:85;273:2;277:3;260:21;;;;;:::i;:::-;845:25:94;;;901:2;886:18;;879:34;833:2;818:18;260:21:85;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;249:8:85;:32;;-1:-1:-1;;;;;;249:32:85;-1:-1:-1;;;;;249:32:85;;;;;;;;;;215:73::o;294:269::-;333:35;;;;;;;;;;;;;;-1:-1:-1;;;333:35:85;;;355:12;333;:35::i;:::-;449:12;;-1:-1:-1;;;449:12:85;;457:3;449:12;;;1080:25:94;250:64:2;;449:7:85;;1053:18:94;;449:12:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;472:8;;;;;;;;;-1:-1:-1;;;;;472:8:85;-1:-1:-1;;;;;472:19:85;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:8;;;;;;;;;-1:-1:-1;;;;;540:8:85;-1:-1:-1;;;;;540:13:85;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;533:23;;;;:::i;:::-;294:269::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1704:51:94;;;-1:-1:-1;;;1771:18:94;;;1764:34;2196:43:0;;;;;;;;;1677:18:94;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;7003:145:7:-;7070:71;7133:2;7137;7086:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7086:54:7;;;;;;;;;;;;;;-1:-1:-1;;;;;7086:54:7;-1:-1:-1;;;7086:54:7;;;7070:15;:71::i;:::-;7003:145;;:::o;631:333::-;725:14;;581:42;855:2;842:16;;701:21;;725:14;842:16;581:42;891:5;880:68;871:77;;808:150;;631:333;:::o;-1:-1:-1:-;;;;;;;;:::o;1116:277:94:-;1183:6;1236:2;1224:9;1215:7;1211:23;1207:32;1204:52;;;1252:1;1249;1242:12;1204:52;1284:9;1278:16;1337:5;1330:13;1323:21;1316:5;1313:32;1303:60;;1359:1;1356;1349:12;1303:60;1382:5;1116:277;-1:-1:-1;;;1116:277:94:o;1398:127::-;1459:10;1454:3;1450:20;1447:1;1440:31;1490:4;1487:1;1480:15;1514:4;1511:1;1504:15;1809:250;1894:1;1904:113;1918:6;1915:1;1912:13;1904:113;;;1994:11;;;1988:18;1975:11;;;1968:39;1940:2;1933:10;1904:113;;;-1:-1:-1;;2051:1:94;2033:16;;2026:27;1809:250::o;2064:384::-;-1:-1:-1;;;;;;2249:33:94;;2237:46;;2306:13;;2219:3;;2328:74;2306:13;2391:1;2382:11;;2375:4;2363:17;;2328:74;:::i;:::-;2422:16;;;;2440:1;2418:24;;2064:384;-1:-1:-1;;;2064:384:94:o;2453:287::-;2582:3;2620:6;2614:13;2636:66;2695:6;2690:3;2683:4;2675:6;2671:17;2636:66;:::i;:::-;2718:16;;;;;2453:287;-1:-1:-1;;2453:287:94:o;2745:471::-;2922:2;2911:9;2904:21;2885:4;2954:6;2948:13;2997:6;2992:2;2981:9;2977:18;2970:34;3013:81;3087:6;3082:2;3071:9;3067:18;3060:4;3052:6;3048:17;3013:81;:::i;:::-;3196:4;3181:20;;3174:36;;;;-1:-1:-1;3155:2:94;3134:15;;;;-1:-1:-1;;3130:29:94;3115:45;3162:2;3111:54;;2745:471;-1:-1:-1;2745:471:94:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "hackable()": "40111f62",
    "setUp()": "0a9254e4",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hackable\",\"outputs\":[{\"internalType\":\"contract Hackable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethernautDao/Hackable.t.sol\":\"HackableTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"src/ethernautDao/level6/Hackable.sol\":{\"keccak256\":\"0x02a84a0dab4db42dfb73a4a4b0c51fd5a0af0436ae50f90addeff0e465de68f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5c3d731fb3022d2d0c20451a62521fa308f820314471460684fb18dd036731b\",\"dweb:/ipfs/QmRJ7MN5bHf5SFnMrv8K394P4aAqbpAsb6zNRYWbSAFqnQ\"]},\"test/ethernautDao/Hackable.t.sol\":{\"keccak256\":\"0x67bcd02640b42cb67ef24e596353280703e52942013f88a5645928d621bf1b0d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a960ef31bb65de0385b206ada5e6dc54557721b7f8d34d6c7aa4340c7f08cf69\",\"dweb:/ipfs/QmX5hoT4hQkMoaGkDm7QaRbPJxZJr7WwQv4S5Kh4UFq7nL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hackable",
          "outputs": [
            {
              "internalType": "contract Hackable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAttack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ethernautDao/Hackable.t.sol": "HackableTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "src/ethernautDao/level6/Hackable.sol": {
        "keccak256": "0x02a84a0dab4db42dfb73a4a4b0c51fd5a0af0436ae50f90addeff0e465de68f2",
        "urls": [
          "bzz-raw://e5c3d731fb3022d2d0c20451a62521fa308f820314471460684fb18dd036731b",
          "dweb:/ipfs/QmRJ7MN5bHf5SFnMrv8K394P4aAqbpAsb6zNRYWbSAFqnQ"
        ],
        "license": "MIT"
      },
      "test/ethernautDao/Hackable.t.sol": {
        "keccak256": "0x67bcd02640b42cb67ef24e596353280703e52942013f88a5645928d621bf1b0d",
        "urls": [
          "bzz-raw://a960ef31bb65de0385b206ada5e6dc54557721b7f8d34d6c7aa4340c7f08cf69",
          "dweb:/ipfs/QmX5hoT4hQkMoaGkDm7QaRbPJxZJr7WwQv4S5Kh4UFq7nL"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ethernautDao/Hackable.t.sol",
    "id": 21245,
    "exportedSymbols": {
      "DSTest": [
        44831
      ],
      "Hackable": [
        18726
      ],
      "HackableTest": [
        21244
      ],
      "Script": [
        22576
      ],
      "StdStorage": [
        25244
      ],
      "Test": [
        25146
      ],
      "Vm": [
        45611
      ],
      "console": [
        34980
      ],
      "console2": [
        43044
      ],
      "stdError": [
        25216
      ],
      "stdJson": [
        26916
      ],
      "stdMath": [
        26485
      ],
      "stdStorage": [
        26346
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:527:85",
    "nodes": [
      {
        "id": 21194,
        "nodeType": "PragmaDirective",
        "src": "39:24:85",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21195,
        "nodeType": "ImportDirective",
        "src": "65:28:85",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 26486,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21196,
        "nodeType": "ImportDirective",
        "src": "94:52:85",
        "nodes": [],
        "absolutePath": "src/ethernautDao/level6/Hackable.sol",
        "file": "../../src/ethernautDao/level6/Hackable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 18727,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21244,
        "nodeType": "ContractDefinition",
        "src": "148:417:85",
        "nodes": [
          {
            "id": 21201,
            "nodeType": "VariableDeclaration",
            "src": "184:24:85",
            "nodes": [],
            "constant": false,
            "functionSelector": "40111f62",
            "mutability": "mutable",
            "name": "hackable",
            "nameLocation": "200:8:85",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hackable_$18726",
              "typeString": "contract Hackable"
            },
            "typeName": {
              "id": 21200,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21199,
                "name": "Hackable",
                "nameLocations": [
                  "184:8:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18726,
                "src": "184:8:85"
              },
              "referencedDeclaration": 18726,
              "src": "184:8:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hackable_$18726",
                "typeString": "contract Hackable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21214,
            "nodeType": "FunctionDefinition",
            "src": "215:73:85",
            "nodes": [],
            "body": {
              "id": 21213,
              "nodeType": "Block",
              "src": "239:49:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21204,
                      "name": "hackable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21201,
                      "src": "249:8:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackable_$18726",
                        "typeString": "contract Hackable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3435",
                          "id": 21208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "273:2:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_45_by_1",
                            "typeString": "int_const 45"
                          },
                          "value": "45"
                        },
                        {
                          "hexValue": "313030",
                          "id": 21209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "277:3:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_45_by_1",
                            "typeString": "int_const 45"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 21207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "260:12:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_Hackable_$18726_$",
                          "typeString": "function (uint256,uint256) returns (contract Hackable)"
                        },
                        "typeName": {
                          "id": 21206,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21205,
                            "name": "Hackable",
                            "nameLocations": [
                              "264:8:85"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18726,
                            "src": "264:8:85"
                          },
                          "referencedDeclaration": 18726,
                          "src": "264:8:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackable_$18726",
                            "typeString": "contract Hackable"
                          }
                        }
                      },
                      "id": 21210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "260:21:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackable_$18726",
                        "typeString": "contract Hackable"
                      }
                    },
                    "src": "249:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hackable_$18726",
                      "typeString": "contract Hackable"
                    }
                  },
                  "id": 21212,
                  "nodeType": "ExpressionStatement",
                  "src": "249:32:85"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "224:5:85",
            "parameters": {
              "id": 21202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:85"
            },
            "returnParameters": {
              "id": 21203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:85"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21243,
            "nodeType": "FunctionDefinition",
            "src": "294:269:85",
            "nodes": [],
            "body": {
              "id": 21242,
              "nodeType": "Block",
              "src": "323:240:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "626c6f636b",
                        "id": 21220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "346:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                          "typeString": "literal_string \"block\""
                        },
                        "value": "block"
                      },
                      {
                        "expression": {
                          "id": 21221,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "355:5:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 21222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "361:6:85",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "355:12:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                          "typeString": "literal_string \"block\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21217,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43044,
                        "src": "333:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$43044_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 21219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "342:3:85",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35688,
                      "src": "333:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 21223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "333:35:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21224,
                  "nodeType": "ExpressionStatement",
                  "src": "333:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313435",
                        "id": 21228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "457:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_145_by_1",
                          "typeString": "int_const 145"
                        },
                        "value": "145"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_145_by_1",
                          "typeString": "int_const 145"
                        }
                      ],
                      "expression": {
                        "id": 21225,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22344,
                        "src": "449:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$45611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "452:4:85",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44850,
                      "src": "449:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 21229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "449:12:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21230,
                  "nodeType": "ExpressionStatement",
                  "src": "449:12:85"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21231,
                        "name": "hackable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21201,
                        "src": "472:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackable_$18726",
                          "typeString": "contract Hackable"
                        }
                      },
                      "id": 21233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "481:10:85",
                      "memberName": "cantCallMe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18725,
                      "src": "472:19:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:21:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21235,
                  "nodeType": "ExpressionStatement",
                  "src": "472:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21237,
                            "name": "hackable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21201,
                            "src": "540:8:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackable_$18726",
                              "typeString": "contract Hackable"
                            }
                          },
                          "id": 21238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "549:4:85",
                          "memberName": "done",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18669,
                          "src": "540:13:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 21239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "540:15:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21236,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "533:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:23:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21241,
                  "nodeType": "ExpressionStatement",
                  "src": "533:23:85"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "303:10:85",
            "parameters": {
              "id": 21215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:85"
            },
            "returnParameters": {
              "id": 21216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:85"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21197,
              "name": "Test",
              "nameLocations": [
                "173:4:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25146,
              "src": "173:4:85"
            },
            "id": 21198,
            "nodeType": "InheritanceSpecifier",
            "src": "173:4:85"
          }
        ],
        "canonicalName": "HackableTest",
        "contractDependencies": [
          18726
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21244,
          25146,
          22576,
          44831
        ],
        "name": "HackableTest",
        "nameLocation": "157:12:85",
        "scope": 21245,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 85
}
{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040908152600180546001600160a01b031916339081179091556000908152602081905220683635c9adc5dea0000090556102e9806100416000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b1461009657806342e94c90146100ad5780638da5cb5b146100ed578063d7bb99ba14610125578063f10fdf5c1461012d57600080fd5b366100915760003411801561007157503360009081526020819052604090205415155b61007a57600080fd5b600180546001600160a01b03191633908117909155005b600080fd5b3480156100a257600080fd5b506100ab61014f565b005b3480156100b957600080fd5b506100da6100c836600461025d565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5060015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020016100e4565b6100ab6101e9565b34801561013957600080fd5b50336000908152602081905260409020546100da565b6001546001600160a01b031633146101ad5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640160405180910390fd5b6001546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156101e6573d6000803e3d6000fd5b50565b66038d7ea4c6800034106101fc57600080fd5b336000908152602081905260408120805434929061021b90849061028d565b90915550506001546001600160a01b031660009081526020819052604080822054338352912054111561025b57600180546001600160a01b031916331790555b565b60006020828403121561026f57600080fd5b81356001600160a01b038116811461028657600080fd5b9392505050565b600082198211156102ae57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122056450a2c13175f8a373f7458c6783241bd7f890651acec13f7419e3fe6b0833064736f6c634300080f0033",
    "sourceMap": "116:983:10:-:0;;;;;293:5;:27;;-1:-1:-1;;;;;;293:27:10;309:10;293:27;;;;;;:5;330:25;;;;;;;;358:16;330:44;;116:983;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061004e5760003560e01c80633ccfd60b1461009657806342e94c90146100ad5780638da5cb5b146100ed578063d7bb99ba14610125578063f10fdf5c1461012d57600080fd5b366100915760003411801561007157503360009081526020819052604090205415155b61007a57600080fd5b600180546001600160a01b03191633908117909155005b600080fd5b3480156100a257600080fd5b506100ab61014f565b005b3480156100b957600080fd5b506100da6100c836600461025d565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5060015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020016100e4565b6100ab6101e9565b34801561013957600080fd5b50336000908152602081905260409020546100da565b6001546001600160a01b031633146101ad5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640160405180910390fd5b6001546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156101e6573d6000803e3d6000fd5b50565b66038d7ea4c6800034106101fc57600080fd5b336000908152602081905260408120805434929061021b90849061028d565b90915550506001546001600160a01b031660009081526020819052604080822054338352912054111561025b57600180546001600160a01b031916331790555b565b60006020828403121561026f57600080fd5b81356001600160a01b038116811461028657600080fd5b9392505050565b600082198211156102ae57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122056450a2c13175f8a373f7458c6783241bd7f890651acec13f7419e3fe6b0833064736f6c634300080f0033",
    "sourceMap": "116:983:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:1;1006:9;:13;:46;;;;-1:-1:-1;1037:10:10;1051:1;1023:25;;;;;;;;;;;:29;;1006:46;998:55;;;;;;1063:5;:27;;-1:-1:-1;;;;;;1063:27:10;1079:10;1063:27;;;;;;;116:983;;;;864:91;;;;;;;;;;;;;:::i;:::-;;172:48;;;;;;;;;;-1:-1:-1;172:48:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;451:25:20;;;439:2;424:18;172:48:10;;;;;;;;226:28;;;;;;;;;;-1:-1:-1;226:28:10;;;;-1:-1:-1;;;;;226:28:10;;;;;;-1:-1:-1;;;;;667:32:20;;;649:51;;637:2;622:18;226:28:10;487:219:20;497:249:10;;;:::i;752:106::-;;;;;;;;;;-1:-1:-1;840:10:10;800:7;826:25;;;;;;;;;;;752:106;;864:91;440:5;;-1:-1:-1;;;;;440:5:10;426:10;:19;418:55;;;;-1:-1:-1;;;418:55:10;;913:2:20;418:55:10;;;895:21:20;952:2;932:18;;;925:30;991:25;971:18;;;964:53;1034:18;;418:55:10;;;;;;;;911:5:::1;::::0;:37:::1;::::0;-1:-1:-1;;;;;911:5:10;;::::1;::::0;926:21:::1;911:37:::0;::::1;;;::::0;:5:::1;:37:::0;:5;:37;926:21;911:5;:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;864:91::o:0;497:249::-;564:11;552:9;:23;544:32;;;;;;600:10;586:13;:25;;;;;;;;;;:38;;615:9;;586:13;:38;;615:9;;586:38;:::i;:::-;;;;-1:-1:-1;;680:5:10;;-1:-1:-1;;;;;680:5:10;666:13;:20;;;;;;;;;;;;652:10;638:25;;;;;:48;634:106;;;702:5;:27;;-1:-1:-1;;;;;;702:27:10;718:10;702:27;;;634:106;497:249::o;14:286:20:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:20;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:20:o;1063:225::-;1103:3;1134:1;1130:6;1127:1;1124:13;1121:136;;;1179:10;1174:3;1170:20;1167:1;1160:31;1214:4;1211:1;1204:15;1242:4;1239:1;1232:15;1121:136;-1:-1:-1;1273:9:20;;1063:225::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "contribute()": "d7bb99ba",
    "contributions(address)": "42e94c90",
    "getContribution()": "f10fdf5c",
    "owner()": "8da5cb5b",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ethernaut/level_1/Fallback.sol\":\"Fallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"src/ethernaut/level_1/Fallback.sol\":{\"keccak256\":\"0x68414729846f4c116dc3fec9fba827a7c3e07b77fc4968d5c5d4f9b9f89ecc8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f5e603f49c735f9edfeed063548ed627bfeeda73b54e7382fc89f0ee5d96d64\",\"dweb:/ipfs/QmUweSVcFMmSVZTqmmJkeicE5TxXJxP5n1BKtMu9eYydtd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "contribute"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contributions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getContribution",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ethernaut/level_1/Fallback.sol": "Fallback"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "src/ethernaut/level_1/Fallback.sol": {
        "keccak256": "0x68414729846f4c116dc3fec9fba827a7c3e07b77fc4968d5c5d4f9b9f89ecc8a",
        "urls": [
          "bzz-raw://0f5e603f49c735f9edfeed063548ed627bfeeda73b54e7382fc89f0ee5d96d64",
          "dweb:/ipfs/QmUweSVcFMmSVZTqmmJkeicE5TxXJxP5n1BKtMu9eYydtd"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "irOptimized": "/// @use-src 10:\"src/ethernaut/level_1/Fallback.sol\"\nobject \"Fallback_23813\" {\n    code {\n        {\n            /// @src 10:116:1099  \"contract Fallback {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            sstore(/** @src 10:293:320  \"owner = payable(msg.sender)\" */ 0x01, /** @src 10:116:1099  \"contract Fallback {...\" */ or(and(sload(/** @src 10:293:320  \"owner = payable(msg.sender)\" */ 0x01), /** @src 10:116:1099  \"contract Fallback {...\" */ not(sub(shl(160, 1), 1))), /** @src 10:309:319  \"msg.sender\" */ caller()))\n            /// @src 10:116:1099  \"contract Fallback {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 10:309:319  \"msg.sender\" */ caller())\n            /// @src 10:116:1099  \"contract Fallback {...\"\n            mstore(0x20, /** @src -1:-1:-1 */ 0)\n            /// @src 10:116:1099  \"contract Fallback {...\"\n            sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:116:1099  \"contract Fallback {...\" */ 64), /** @src 10:358:374  \"1000 * (1 ether)\" */ 0x3635c9adc5dea00000)\n            /// @src 10:116:1099  \"contract Fallback {...\"\n            let _2 := datasize(\"Fallback_23813_deployed\")\n            codecopy(_1, dataoffset(\"Fallback_23813_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 10:\"src/ethernaut/level_1/Fallback.sol\"\n    object \"Fallback_23813_deployed\" {\n        code {\n            {\n                /// @src 10:116:1099  \"contract Fallback {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x3ccfd60b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value := and(sload(/** @src 10:440:445  \"owner\" */ 0x01), /** @src 10:116:1099  \"contract Fallback {...\" */ sub(shl(160, 1), 1))\n                        if iszero(/** @src 10:426:445  \"msg.sender == owner\" */ eq(/** @src 10:426:436  \"msg.sender\" */ caller(), /** @src 10:426:445  \"msg.sender == owner\" */ value))\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        {\n                            mstore(_1, shl(229, 4594637))\n                            mstore(add(_1, 4), 32)\n                            mstore(add(_1, 36), 23)\n                            mstore(add(_1, 68), \"caller is not the owner\")\n                            revert(_1, 100)\n                        }\n                        /// @src 10:926:947  \"address(this).balance\"\n                        let expr := selfbalance()\n                        /// @src 10:911:948  \"owner.transfer(address(this).balance)\"\n                        let _4 := /** @src 10:116:1099  \"contract Fallback {...\" */ _3\n                        /// @src 10:911:948  \"owner.transfer(address(this).balance)\"\n                        if iszero(expr) { _4 := 2300 }\n                        if iszero(call(_4, value, expr, /** @src 10:116:1099  \"contract Fallback {...\" */ _3, _3, _3, _3))\n                        /// @src 10:911:948  \"owner.transfer(address(this).balance)\"\n                        {\n                            /// @src 10:116:1099  \"contract Fallback {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        return(mload(_2), _3)\n                    }\n                    case 0x42e94c90 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_1 := calldataload(4)\n                        let _5 := and(value_1, sub(shl(160, 1), 1))\n                        if iszero(eq(value_1, _5)) { revert(_3, _3) }\n                        mstore(_3, _5)\n                        mstore(32, _3)\n                        let _6 := sload(keccak256(_3, _2))\n                        let memPos := mload(_2)\n                        mstore(memPos, _6)\n                        return(memPos, 32)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_2 := and(sload(/** @src 10:226:254  \"address payable public owner\" */ 1), /** @src 10:116:1099  \"contract Fallback {...\" */ sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value_2)\n                        return(memPos_1, 32)\n                    }\n                    case 0xd7bb99ba {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        if iszero(/** @src 10:552:575  \"msg.value < 0.001 ether\" */ lt(/** @src 10:552:561  \"msg.value\" */ callvalue(), /** @src 10:564:575  \"0.001 ether\" */ 0x038d7ea4c68000))\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        { revert(_3, _3) }\n                        mstore(_3, /** @src 10:600:610  \"msg.sender\" */ caller())\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        mstore(0x20, _3)\n                        let dataSlot := keccak256(_3, _2)\n                        let _7 := sload(/** @src 10:586:624  \"contributions[msg.sender] += msg.value\" */ dataSlot)\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        if gt(_7, not(/** @src 10:552:561  \"msg.value\" */ callvalue()))\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        sstore(dataSlot, add(_7, /** @src 10:552:561  \"msg.value\" */ callvalue()))\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        mstore(_3, /** @src 10:600:610  \"msg.sender\" */ caller())\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        mstore(0x20, _3)\n                        let _8 := sload(keccak256(_3, _2))\n                        let _9 := sload(/** @src 10:680:685  \"owner\" */ 0x01)\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        mstore(_3, and(_9, sub(shl(160, 1), 1)))\n                        /// @src 10:634:740  \"if (contributions[msg.sender] > contributions[owner]) {...\"\n                        if /** @src 10:638:686  \"contributions[msg.sender] > contributions[owner]\" */ gt(_8, /** @src 10:116:1099  \"contract Fallback {...\" */ sload(keccak256(_3, _2)))\n                        /// @src 10:634:740  \"if (contributions[msg.sender] > contributions[owner]) {...\"\n                        {\n                            /// @src 10:116:1099  \"contract Fallback {...\"\n                            sstore(/** @src 10:680:685  \"owner\" */ 0x01, /** @src 10:116:1099  \"contract Fallback {...\" */ or(and(_9, shl(160, 0xffffffffffffffffffffffff)), /** @src 10:600:610  \"msg.sender\" */ caller()))\n                        }\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        return(mload(_2), _3)\n                    }\n                    case 0xf10fdf5c {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        mstore(_3, /** @src 10:840:850  \"msg.sender\" */ caller())\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        mstore(0x20, _3)\n                        let _10 := sload(keccak256(_3, _2))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _10)\n                        return(memPos_2, 0x20)\n                    }\n                }\n                if iszero(calldatasize())\n                {\n                    /// @src 10:1006:1052  \"msg.value > 0 && contributions[msg.sender] > 0\"\n                    let expr_1 := /** @src 10:1006:1019  \"msg.value > 0\" */ iszero(iszero(/** @src 10:1006:1015  \"msg.value\" */ callvalue()))\n                    /// @src 10:1006:1052  \"msg.value > 0 && contributions[msg.sender] > 0\"\n                    if expr_1\n                    {\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        mstore(/** @src 10:1018:1019  \"0\" */ 0x00, /** @src 10:1037:1047  \"msg.sender\" */ caller())\n                        /// @src 10:116:1099  \"contract Fallback {...\"\n                        mstore(0x20, /** @src 10:1018:1019  \"0\" */ 0x00)\n                        /// @src 10:1006:1052  \"msg.value > 0 && contributions[msg.sender] > 0\"\n                        expr_1 := /** @src 10:1023:1052  \"contributions[msg.sender] > 0\" */ iszero(iszero(/** @src 10:116:1099  \"contract Fallback {...\" */ sload(keccak256(/** @src 10:1018:1019  \"0\" */ 0x00, /** @src 10:116:1099  \"contract Fallback {...\" */ _2))))\n                    }\n                    if iszero(expr_1)\n                    {\n                        revert(/** @src 10:1018:1019  \"0\" */ 0x00, 0x00)\n                    }\n                    /// @src 10:116:1099  \"contract Fallback {...\"\n                    sstore(/** @src 10:1063:1090  \"owner = payable(msg.sender)\" */ 0x01, /** @src 10:116:1099  \"contract Fallback {...\" */ or(and(sload(/** @src 10:1063:1090  \"owner = payable(msg.sender)\" */ 0x01), /** @src 10:116:1099  \"contract Fallback {...\" */ shl(160, 0xffffffffffffffffffffffff)), /** @src 10:1079:1089  \"msg.sender\" */ caller()))\n                    /// @src 10:116:1099  \"contract Fallback {...\"\n                    stop()\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122094398585dd1d9e2f10f75d309f1c3d117f3c0b59f10a83458864d723094ea00f64736f6c634300080f0033\"\n    }\n}\n",
  "ast": {
    "absolutePath": "src/ethernaut/level_1/Fallback.sol",
    "id": 23814,
    "exportedSymbols": {
      "Fallback": [
        23813
      ],
      "SafeMath": [
        23538
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1068:10",
    "nodes": [
      {
        "id": 23678,
        "nodeType": "PragmaDirective",
        "src": "32:23:10",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 23679,
        "nodeType": "ImportDirective",
        "src": "57:57:10",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23814,
        "sourceUnit": 23539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23813,
        "nodeType": "ContractDefinition",
        "src": "116:983:10",
        "nodes": [
          {
            "id": 23682,
            "nodeType": "UsingForDirective",
            "src": "140:27:10",
            "global": false,
            "libraryName": {
              "id": 23680,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23538,
              "src": "146:8:10"
            },
            "typeName": {
              "id": 23681,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "159:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 23686,
            "nodeType": "VariableDeclaration",
            "src": "172:48:10",
            "constant": false,
            "functionSelector": "42e94c90",
            "mutability": "mutable",
            "name": "contributions",
            "nameLocation": "207:13:10",
            "scope": 23813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 23685,
              "keyType": {
                "id": 23683,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "180:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "172:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 23684,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "191:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 23688,
            "nodeType": "VariableDeclaration",
            "src": "226:28:10",
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "249:5:10",
            "scope": 23813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 23687,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "226:15:10",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23710,
            "nodeType": "FunctionDefinition",
            "src": "261:120:10",
            "body": {
              "id": 23709,
              "nodeType": "Block",
              "src": "283:98:10",
              "statements": [
                {
                  "expression": {
                    "id": 23697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23691,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23688,
                      "src": "293:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 23694,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "309:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "309:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "301:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 23692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "301:8:10",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "301:19:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "293:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 23698,
                  "nodeType": "ExpressionStatement",
                  "src": "293:27:10"
                },
                {
                  "expression": {
                    "id": 23707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23699,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23686,
                        "src": "330:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23702,
                      "indexExpression": {
                        "expression": {
                          "id": 23700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "344:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "344:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "330:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      },
                      "id": 23706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31303030",
                        "id": 23703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "358:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "hexValue": "31",
                            "id": 23704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "366:7:10",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "id": 23705,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "365:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "358:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      }
                    },
                    "src": "330:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23708,
                  "nodeType": "ExpressionStatement",
                  "src": "330:44:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 23689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:2:10"
            },
            "returnParameters": {
              "id": 23690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:10"
            },
            "scope": 23813,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23722,
            "nodeType": "ModifierDefinition",
            "src": "387:104:10",
            "body": {
              "id": 23721,
              "nodeType": "Block",
              "src": "408:83:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23713,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "426:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "426:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 23715,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23688,
                          "src": "440:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "426:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 23717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "447:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
                          "typeString": "literal_string \"caller is not the owner\""
                        },
                        "value": "caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
                          "typeString": "literal_string \"caller is not the owner\""
                        }
                      ],
                      "id": 23712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "418:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23719,
                  "nodeType": "ExpressionStatement",
                  "src": "418:55:10"
                },
                {
                  "id": 23720,
                  "nodeType": "PlaceholderStatement",
                  "src": "483:1:10"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "396:9:10",
            "parameters": {
              "id": 23711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:10"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 23759,
            "nodeType": "FunctionDefinition",
            "src": "497:249:10",
            "body": {
              "id": 23758,
              "nodeType": "Block",
              "src": "534:212:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23726,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "552:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "552:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "302e303031",
                          "id": 23728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "564:11:10",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "value": "0.001"
                        },
                        "src": "552:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "544:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23731,
                  "nodeType": "ExpressionStatement",
                  "src": "544:32:10"
                },
                {
                  "expression": {
                    "id": 23738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23732,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23686,
                        "src": "586:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23735,
                      "indexExpression": {
                        "expression": {
                          "id": 23733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "600:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "600:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "586:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23736,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "615:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "615:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "586:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23739,
                  "nodeType": "ExpressionStatement",
                  "src": "586:38:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 23740,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23686,
                        "src": "638:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23743,
                      "indexExpression": {
                        "expression": {
                          "id": 23741,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "652:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "652:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "638:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 23744,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23686,
                        "src": "666:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23746,
                      "indexExpression": {
                        "id": 23745,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23688,
                        "src": "680:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "666:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "638:48:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23757,
                  "nodeType": "IfStatement",
                  "src": "634:106:10",
                  "trueBody": {
                    "id": 23756,
                    "nodeType": "Block",
                    "src": "688:52:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 23754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 23748,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23688,
                            "src": "702:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 23751,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "718:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 23752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "718:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 23750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "710:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 23749,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "710:8:10",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "710:19:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "702:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 23755,
                        "nodeType": "ExpressionStatement",
                        "src": "702:27:10"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "d7bb99ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contribute",
            "nameLocation": "506:10:10",
            "parameters": {
              "id": 23723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:2:10"
            },
            "returnParameters": {
              "id": 23724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:0:10"
            },
            "scope": 23813,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23770,
            "nodeType": "FunctionDefinition",
            "src": "752:106:10",
            "body": {
              "id": 23769,
              "nodeType": "Block",
              "src": "809:49:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 23764,
                      "name": "contributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23686,
                      "src": "826:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 23767,
                    "indexExpression": {
                      "expression": {
                        "id": 23765,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "840:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "840:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "826:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23763,
                  "id": 23768,
                  "nodeType": "Return",
                  "src": "819:32:10"
                }
              ]
            },
            "functionSelector": "f10fdf5c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContribution",
            "nameLocation": "761:15:10",
            "parameters": {
              "id": 23760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:2:10"
            },
            "returnParameters": {
              "id": 23763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23770,
                  "src": "800:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "799:9:10"
            },
            "scope": 23813,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23786,
            "nodeType": "FunctionDefinition",
            "src": "864:91:10",
            "body": {
              "id": 23785,
              "nodeType": "Block",
              "src": "901:54:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23780,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "934:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Fallback_$23813",
                                "typeString": "contract Fallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Fallback_$23813",
                                "typeString": "contract Fallback"
                              }
                            ],
                            "id": 23779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "926:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23778,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "926:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "926:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "926:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23775,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23688,
                        "src": "911:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 23777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "911:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 23783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23784,
                  "nodeType": "ExpressionStatement",
                  "src": "911:37:10"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23773,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23772,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23722,
                  "src": "891:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "891:9:10"
              }
            ],
            "name": "withdraw",
            "nameLocation": "873:8:10",
            "parameters": {
              "id": 23771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:10"
            },
            "returnParameters": {
              "id": 23774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:10"
            },
            "scope": 23813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23812,
            "nodeType": "FunctionDefinition",
            "src": "961:136:10",
            "body": {
              "id": 23811,
              "nodeType": "Block",
              "src": "988:109:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 23790,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1006:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 23791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1006:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 23792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1018:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1006:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 23794,
                              "name": "contributions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23686,
                              "src": "1023:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 23797,
                            "indexExpression": {
                              "expression": {
                                "id": 23795,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1037:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 23796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1037:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1023:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 23798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1051:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1023:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1006:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "998:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23802,
                  "nodeType": "ExpressionStatement",
                  "src": "998:55:10"
                },
                {
                  "expression": {
                    "id": 23809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23803,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23688,
                      "src": "1063:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 23806,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1079:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1079:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1071:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 23804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1071:8:10",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1071:19:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1063:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 23810,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:27:10"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 23787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:2:10"
            },
            "returnParameters": {
              "id": 23788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:10"
            },
            "scope": 23813,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Fallback",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23813
        ],
        "name": "Fallback",
        "nameLocation": "125:8:10",
        "scope": 23814,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 10
}
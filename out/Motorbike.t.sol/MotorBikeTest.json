{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "155:631:105:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:2;;;;;155:631:105;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a768463146100715780636f2db99c146100a9578063ba414fa6146100b1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b61006f610279565b6100b9610403565b60405190151581526020016100a0565b6000546100b99062010000900460ff1681565b6000546100b99060ff1681565b6040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af115801561013e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101629190610561565b600c80546001600160a01b0319166001600160a01b039290921691909117905560405161018e9061052e565b604051809103906000f0801580156101aa573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b039290921691821790556040516101d69061053b565b6001600160a01b039091168152602001604051809103906000f080158015610202573d6000803e3d6000fd5b50600880546001600160a01b03929092166001600160a01b03199283168117909155600a805490921617905560405161023a90610548565b604051809103906000f080158015610256573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600060405161028790610555565b604051809103906000f0801580156102a3573d6000803e3d6000fd5b50600b5460095460405163680c6d9f60e11b81526001600160a01b039182166004820152929350169063d018db3e90602401600060405180830381600087803b1580156102ef57600080fd5b505af1158015610303573d6000803e3d6000fd5b5050600b546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801561036057600080fd5b505af1158015610374573d6000803e3d6000fd5b50506009546040805160048082526024820183526020820180516001600160e01b031663204a7f0760e21b179052915163278f794360e11b81526001600160a01b039093169450634f1ef28693506103ce928692016105b5565b600060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b5050505050565b60008054610100900460ff16156104235750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156105295760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916104b1917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016105f7565b60408051601f19818403018152908290526104cb91610628565b6000604051808303816000865af19150503d8060008114610508576040519150601f19603f3d011682016040523d82523d6000602084013e61050d565b606091505b50915050808060200190518101906105259190610644565b9150505b919050565b6105318061066783390190565b6102bf80610b9883390190565b61011580610e5783390190565b608780610f6c83390190565b60006020828403121561057357600080fd5b81516001600160a01b038116811461058a57600080fd5b9392505050565b60005b838110156105ac578181015183820152602001610594565b50506000910152565b60018060a01b038316815260406020820152600082518060408401526105e2816060850160208701610591565b601f01601f1916919091016060019392505050565b6001600160e01b031983168152815160009061061a816004850160208701610591565b919091016004019392505050565b6000825161063a818460208701610591565b9190910192915050565b60006020828403121561065657600080fd5b8151801515811461058a57600080fdfe608060405234801561001057600080fd5b50610511806100206000396000f3fe60806040526004361061003f5760003560e01c80634f1ef28614610044578063564f6d71146100595780638129fc1c14610082578063af26974514610097575b600080fd5b6100576100523660046103dc565b6100d5565b005b34801561006557600080fd5b5061006f60015481565b6040519081526020015b60405180910390f35b34801561008e57600080fd5b506100576100eb565b3480156100a357600080fd5b506000546100bd906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610079565b6100dd610218565b6100e7828261026a565b5050565b600054610100900460ff161580801561010b5750600054600160ff909116105b806101255750303b158015610125575060005460ff166001145b61018d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156101b0576000805461ff0019166101001790555b6103e86001556000805462010000600160b01b0319163362010000021790558015610215576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6000546201000090046001600160a01b031633146102685760405162461bcd60e51b815260206004820152600d60248201526c43616e2774207570677261646560981b6044820152606401610184565b565b61027382610318565b8051156100e7576000826001600160a01b03168260405161029491906104ac565b600060405180830381855af49150503d80600081146102cf576040519150601f19603f3d011682016040523d82523d6000602084013e6102d4565b606091505b50509050806103135760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152606401610184565b505050565b6001600160a01b0381163b6103855760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610184565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156103ef57600080fd5b82356001600160a01b038116811461040657600080fd5b9150602083013567ffffffffffffffff8082111561042357600080fd5b818501915085601f83011261043757600080fd5b813581811115610449576104496103c6565b604051601f8201601f19908116603f01168101908382118183101715610471576104716103c6565b8160405282815288602084870101111561048a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156104cd57602081860181015185830152016104b3565b50600092019182525091905056fea264697066735822122057b94542c33978b01b2075d2d413713cb5f56ce7706e457bac6477e6e92366b064736f6c63430008110033608060405234801561001057600080fd5b506040516102bf3803806102bf83398101604081905261002f916101b3565b610042816101a460201b61005a1760201c565b6100a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0383166001600160a01b0319909116811790915560408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b17905290516000929161011e916101e3565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b505090508061019d5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016100a0565b5050610212565b6001600160a01b03163b151590565b6000602082840312156101c557600080fd5b81516001600160a01b03811681146101dc57600080fd5b9392505050565b6000825160005b8181101561020457602081860181015185830152016101ea565b506000920191825250919050565b609f806102206000396000f3fe608060405260357f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03166037565b005b3660008037600080366000845af43d6000803e8080156055573d6000f35b3d6000fd5b6001600160a01b03163b15159056fea2646970667358221220d0f968a6f6803ce7e5c10930ac6c958c6f89c7b1ba9fe77192f4edf30cace9ca64736f6c63430008110033608060405234801561001057600080fd5b5060f68061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063d018db3e14602d575b600080fd5b603c60383660046092565b603e565b005b806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015607857600080fd5b505af1158015608b573d6000803e3d6000fd5b5050505050565b60006020828403121560a357600080fd5b81356001600160a01b038116811460b957600080fd5b939250505056fea264697066735822122029095979bca5cb2e85749a09cc91499dd7d0e11e26c4e2a391448733c969f9de64736f6c634300081100336080604052348015600f57600080fd5b50606a80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638129fc1c14602d575b600080fd5b603233ff5b00fea2646970667358221220a7b32ef96265dc084b9f72fd406ca4788d5db348b1654758bfa5fd2d0c649efd64736f6c63430008110033a26469706673582212205bf862188b9032de70fc64c50de5dd5982c7bf2cde37b17807a13f21397bf3c964736f6c63430008110033",
    "sourceMap": "155:631:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:239;;;:::i;:::-;;321:38:2;;250:64;321:38;;;;;-1:-1:-1;;;;;190:32:126;;;172:51;;160:2;145:18;321:38:2;;;;;;;;551:233:105;;;:::i;1819:584:0:-;;;:::i;:::-;;;399:14:126;;392:22;374:41;;362:2;347:18;1819:584:0;234:187:126;170:28:2;;;;;;;;;;;;1572:26:0;;;;;;;;;306:239:105;348:10;;-1:-1:-1;;;;;;348:10:105;;356:1;348:10;;;580:25:126;250:64:2;;348:7:105;;553:18:126;;348:10:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;340:5;:18;;-1:-1:-1;;;;;;340:18:105;-1:-1:-1;;;;;340:18:105;;;;;;;;;;377:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;368:6:105;:21;;-1:-1:-1;;;;;;368:21:105;-1:-1:-1;;;;;368:21:105;;;;;;;;;411:30;;;;;:::i;:::-;-1:-1:-1;;;;;190:32:126;;;172:51;;160:2;145:18;411:30:105;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;399:9:105;:42;;-1:-1:-1;;;;;399:42:105;;;;-1:-1:-1;;;;;;399:42:105;;;;;;;;451:14;:52;;;;;;;;524:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;513:8:105;:25;;-1:-1:-1;;;;;;513:25:105;-1:-1:-1;;;;;513:25:105;;;;;;;;;;306:239::o;551:233::-;590:9;602:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;622:8:105;;638:6;;622:23;;-1:-1:-1;;;622:23:105;;-1:-1:-1;;;;;638:6:105;;;622:23;;;172:51:126;590:22:105;;-1:-1:-1;622:8:105;;:15;;145:18:126;;622:23:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;678:8:105;;656:32;;-1:-1:-1;;;656:32:105;;-1:-1:-1;;;;;678:8:105;;;656:32;;;172:51:126;250:64:2;;-1:-1:-1;656:13:105;;-1:-1:-1;145:18:126;;656:32:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;698:6:105;;737:39;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;737:39:105;-1:-1:-1;;;737:39:105;;;698:79;;-1:-1:-1;;;698:79:105;;-1:-1:-1;;;;;698:6:105;;;;-1:-1:-1;698:23:105;;-1:-1:-1;698:79:105;;730:4;;698:79;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:204;551:233::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;2268:51:126;;;-1:-1:-1;;;2335:18:126;;;2328:34;2196:43:0;;;;;;;;;2241:18:126;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;616:290:126:-;686:6;739:2;727:9;718:7;714:23;710:32;707:52;;;755:1;752;745:12;707:52;781:16;;-1:-1:-1;;;;;826:31:126;;816:42;;806:70;;872:1;869;862:12;806:70;895:5;616:290;-1:-1:-1;;;616:290:126:o;1343:250::-;1428:1;1438:113;1452:6;1449:1;1446:13;1438:113;;;1528:11;;;1522:18;1509:11;;;1502:39;1474:2;1467:10;1438:113;;;-1:-1:-1;;1585:1:126;1567:16;;1560:27;1343:250::o;1598:491::-;1802:1;1798;1793:3;1789:11;1785:19;1777:6;1773:32;1762:9;1755:51;1842:2;1837;1826:9;1822:18;1815:30;1736:4;1874:6;1868:13;1917:6;1912:2;1901:9;1897:18;1890:34;1933:79;2005:6;2000:2;1989:9;1985:18;1980:2;1972:6;1968:15;1933:79;:::i;:::-;2073:2;2052:15;-1:-1:-1;;2048:29:126;2033:45;;;;2080:2;2029:54;;1598:491;-1:-1:-1;;;1598:491:126:o;2373:384::-;-1:-1:-1;;;;;;2558:33:126;;2546:46;;2615:13;;2528:3;;2637:74;2615:13;2700:1;2691:11;;2684:4;2672:17;;2637:74;:::i;:::-;2731:16;;;;2749:1;2727:24;;2373:384;-1:-1:-1;;;2373:384:126:o;2762:287::-;2891:3;2929:6;2923:13;2945:66;3004:6;2999:3;2992:4;2984:6;2980:17;2945:66;:::i;:::-;3027:16;;;;;2762:287;-1:-1:-1;;2762:287:126:o;3054:277::-;3121:6;3174:2;3162:9;3153:7;3149:23;3145:32;3142:52;;;3190:1;3187;3180:12;3142:52;3222:9;3216:16;3275:5;3268:13;3261:21;3254:5;3251:32;3241:60;;3297:1;3294;3287:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethernaut/Motorbike.t.sol\":\"MotorbikeTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe3d60f5f148d0eee64863ddf5639907e7f8bbf9a485b4d5293f3496826db5963\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fec865fe488cf7c50c422be28e94839709d479ede1587e5d0397ef6db3e2273\",\"dweb:/ipfs/QmWzpHLR2QAPARB1ZdraTshaFMiVR61SN87nmQX92ihCbn\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"src/ethernaut/level_25/Motorbike.sol\":{\"keccak256\":\"0x1b6779986d6e726d686131fd64731605bd49b48bf49e9e5bb21e2bbd09933f01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07d39efd89d9cfb7a7554dcc22f2fcc22b56d2776fce7cb9c8bd998aabf0f0cd\",\"dweb:/ipfs/QmSJRGxpRAFkGomR2aPY2ri87nYHRimYBSKTiQjNd83fmh\"]},\"test/ethernaut/Motorbike.t.sol\":{\"keccak256\":\"0xa1603f21f38059ae95fd65266eb31dd63c014db6ce70e0d03a164d718f84b619\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://be8c53897ef93b3170e2fe839806454572ffc521d9eec3e6dfaddf7167469604\",\"dweb:/ipfs/QmRxWVR8dcpyRsAqmcRYXLVUZXbCCSjW9533LyDfQNkoWR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAttack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ethernaut/Motorbike.t.sol": "MotorbikeTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe3d60f5f148d0eee64863ddf5639907e7f8bbf9a485b4d5293f3496826db5963",
        "urls": [
          "bzz-raw://8fec865fe488cf7c50c422be28e94839709d479ede1587e5d0397ef6db3e2273",
          "dweb:/ipfs/QmWzpHLR2QAPARB1ZdraTshaFMiVR61SN87nmQX92ihCbn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "src/ethernaut/level_25/Motorbike.sol": {
        "keccak256": "0x1b6779986d6e726d686131fd64731605bd49b48bf49e9e5bb21e2bbd09933f01",
        "urls": [
          "bzz-raw://07d39efd89d9cfb7a7554dcc22f2fcc22b56d2776fce7cb9c8bd998aabf0f0cd",
          "dweb:/ipfs/QmSJRGxpRAFkGomR2aPY2ri87nYHRimYBSKTiQjNd83fmh"
        ],
        "license": "MIT"
      },
      "test/ethernaut/Motorbike.t.sol": {
        "keccak256": "0xa1603f21f38059ae95fd65266eb31dd63c014db6ce70e0d03a164d718f84b619",
        "urls": [
          "bzz-raw://be8c53897ef93b3170e2fe839806454572ffc521d9eec3e6dfaddf7167469604",
          "dweb:/ipfs/QmRxWVR8dcpyRsAqmcRYXLVUZXbCCSjW9533LyDfQNkoWR"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ethernaut/Motorbike.t.sol",
    "id": 47373,
    "exportedSymbols": {
      "Address": [
        34649
      ],
      "Attacker": [
        47359
      ],
      "Bomb": [
        47372
      ],
      "DSTest": [
        1786
      ],
      "Engine": [
        39708
      ],
      "Initializable": [
        32098
      ],
      "Motorbike": [
        39597
      ],
      "MotorbikeTest": [
        47346
      ],
      "Script": [
        10113
      ],
      "StdStorage": [
        13141
      ],
      "Test": [
        13043
      ],
      "Vm": [
        15162
      ],
      "console": [
        23226
      ],
      "console2": [
        31290
      ],
      "stdError": [
        13113
      ],
      "stdJson": [
        10473
      ],
      "stdMath": [
        14382
      ],
      "stdStorage": [
        14243
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:957:105",
    "nodes": [
      {
        "id": 47239,
        "nodeType": "PragmaDirective",
        "src": "39:31:105",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 47240,
        "nodeType": "ImportDirective",
        "src": "72:28:105",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47373,
        "sourceUnit": 14383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47241,
        "nodeType": "ImportDirective",
        "src": "101:52:105",
        "nodes": [],
        "absolutePath": "src/ethernaut/level_25/Motorbike.sol",
        "file": "../../src/ethernaut/level_25/Motorbike.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47373,
        "sourceUnit": 39709,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47346,
        "nodeType": "ContractDefinition",
        "src": "155:631:105",
        "nodes": [
          {
            "id": 47246,
            "nodeType": "VariableDeclaration",
            "src": "192:19:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "motorbike",
            "nameLocation": "202:9:105",
            "scope": 47346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Motorbike_$39597",
              "typeString": "contract Motorbike"
            },
            "typeName": {
              "id": 47245,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47244,
                "name": "Motorbike",
                "nameLocations": [
                  "192:9:105"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39597,
                "src": "192:9:105"
              },
              "referencedDeclaration": 39597,
              "src": "192:9:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Motorbike_$39597",
                "typeString": "contract Motorbike"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 47249,
            "nodeType": "VariableDeclaration",
            "src": "217:13:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "engine",
            "nameLocation": "224:6:105",
            "scope": 47346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Engine_$39708",
              "typeString": "contract Engine"
            },
            "typeName": {
              "id": 47248,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47247,
                "name": "Engine",
                "nameLocations": [
                  "217:6:105"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39708,
                "src": "217:6:105"
              },
              "referencedDeclaration": 39708,
              "src": "217:6:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Engine_$39708",
                "typeString": "contract Engine"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 47252,
            "nodeType": "VariableDeclaration",
            "src": "236:21:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "engineInstance",
            "nameLocation": "243:14:105",
            "scope": 47346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Engine_$39708",
              "typeString": "contract Engine"
            },
            "typeName": {
              "id": 47251,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47250,
                "name": "Engine",
                "nameLocations": [
                  "236:6:105"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39708,
                "src": "236:6:105"
              },
              "referencedDeclaration": 39708,
              "src": "236:6:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Engine_$39708",
                "typeString": "contract Engine"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 47255,
            "nodeType": "VariableDeclaration",
            "src": "263:17:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "attacker",
            "nameLocation": "272:8:105",
            "scope": 47346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Attacker_$47359",
              "typeString": "contract Attacker"
            },
            "typeName": {
              "id": 47254,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47253,
                "name": "Attacker",
                "nameLocations": [
                  "263:8:105"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47359,
                "src": "263:8:105"
              },
              "referencedDeclaration": 47359,
              "src": "263:8:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Attacker_$47359",
                "typeString": "contract Attacker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 47257,
            "nodeType": "VariableDeclaration",
            "src": "286:13:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "294:5:105",
            "scope": 47346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47256,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:105",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 47305,
            "nodeType": "FunctionDefinition",
            "src": "306:239:105",
            "nodes": [],
            "body": {
              "id": 47304,
              "nodeType": "Block",
              "src": "330:215:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47260,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47257,
                      "src": "340:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 47263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "356:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 47261,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9881,
                          "src": "348:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15162",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 47262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "351:4:105",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14454,
                        "src": "348:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 47264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "348:10:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "340:18:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47266,
                  "nodeType": "ExpressionStatement",
                  "src": "340:18:105"
                },
                {
                  "expression": {
                    "id": 47272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47267,
                      "name": "engine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47249,
                      "src": "368:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Engine_$39708",
                        "typeString": "contract Engine"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "377:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Engine_$39708_$",
                          "typeString": "function () returns (contract Engine)"
                        },
                        "typeName": {
                          "id": 47269,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47268,
                            "name": "Engine",
                            "nameLocations": [
                              "381:6:105"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39708,
                            "src": "381:6:105"
                          },
                          "referencedDeclaration": 39708,
                          "src": "381:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Engine_$39708",
                            "typeString": "contract Engine"
                          }
                        }
                      },
                      "id": 47271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "377:12:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Engine_$39708",
                        "typeString": "contract Engine"
                      }
                    },
                    "src": "368:21:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Engine_$39708",
                      "typeString": "contract Engine"
                    }
                  },
                  "id": 47273,
                  "nodeType": "ExpressionStatement",
                  "src": "368:21:105"
                },
                {
                  "expression": {
                    "id": 47283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47274,
                      "name": "motorbike",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47246,
                      "src": "399:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Motorbike_$39597",
                        "typeString": "contract Motorbike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 47280,
                              "name": "engine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47249,
                              "src": "433:6:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Engine_$39708",
                                "typeString": "contract Engine"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Engine_$39708",
                                "typeString": "contract Engine"
                              }
                            ],
                            "id": 47279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "425:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "425:7:105",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "425:15:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "411:13:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Motorbike_$39597_$",
                          "typeString": "function (address) returns (contract Motorbike)"
                        },
                        "typeName": {
                          "id": 47276,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47275,
                            "name": "Motorbike",
                            "nameLocations": [
                              "415:9:105"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39597,
                            "src": "415:9:105"
                          },
                          "referencedDeclaration": 39597,
                          "src": "415:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Motorbike_$39597",
                            "typeString": "contract Motorbike"
                          }
                        }
                      },
                      "id": 47282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "411:30:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Motorbike_$39597",
                        "typeString": "contract Motorbike"
                      }
                    },
                    "src": "399:42:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Motorbike_$39597",
                      "typeString": "contract Motorbike"
                    }
                  },
                  "id": 47284,
                  "nodeType": "ExpressionStatement",
                  "src": "399:42:105"
                },
                {
                  "expression": {
                    "id": 47295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47285,
                      "name": "engineInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47252,
                      "src": "451:14:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Engine_$39708",
                        "typeString": "contract Engine"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 47291,
                                  "name": "motorbike",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47246,
                                  "src": "491:9:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Motorbike_$39597",
                                    "typeString": "contract Motorbike"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Motorbike_$39597",
                                    "typeString": "contract Motorbike"
                                  }
                                ],
                                "id": 47290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "483:7:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 47289,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "483:7:105",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 47292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "483:18:105",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 47288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "475:8:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 47287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "475:8:105",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "475:27:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 47286,
                        "name": "Engine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39708,
                        "src": "468:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Engine_$39708_$",
                          "typeString": "type(contract Engine)"
                        }
                      },
                      "id": 47294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "468:35:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Engine_$39708",
                        "typeString": "contract Engine"
                      }
                    },
                    "src": "451:52:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Engine_$39708",
                      "typeString": "contract Engine"
                    }
                  },
                  "id": 47296,
                  "nodeType": "ExpressionStatement",
                  "src": "451:52:105"
                },
                {
                  "expression": {
                    "id": 47302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47297,
                      "name": "attacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47255,
                      "src": "513:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attacker_$47359",
                        "typeString": "contract Attacker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "524:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Attacker_$47359_$",
                          "typeString": "function () returns (contract Attacker)"
                        },
                        "typeName": {
                          "id": 47299,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47298,
                            "name": "Attacker",
                            "nameLocations": [
                              "528:8:105"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47359,
                            "src": "528:8:105"
                          },
                          "referencedDeclaration": 47359,
                          "src": "528:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Attacker_$47359",
                            "typeString": "contract Attacker"
                          }
                        }
                      },
                      "id": 47301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "524:14:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attacker_$47359",
                        "typeString": "contract Attacker"
                      }
                    },
                    "src": "513:25:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Attacker_$47359",
                      "typeString": "contract Attacker"
                    }
                  },
                  "id": 47303,
                  "nodeType": "ExpressionStatement",
                  "src": "513:25:105"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "315:5:105",
            "parameters": {
              "id": 47258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:105"
            },
            "returnParameters": {
              "id": 47259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:105"
            },
            "scope": 47346,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47345,
            "nodeType": "FunctionDefinition",
            "src": "551:233:105",
            "nodes": [],
            "body": {
              "id": 47344,
              "nodeType": "Block",
              "src": "580:204:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47310,
                      "mutability": "mutable",
                      "name": "bomb",
                      "nameLocation": "595:4:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 47344,
                      "src": "590:9:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Bomb_$47372",
                        "typeString": "contract Bomb"
                      },
                      "typeName": {
                        "id": 47309,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 47308,
                          "name": "Bomb",
                          "nameLocations": [
                            "590:4:105"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47372,
                          "src": "590:4:105"
                        },
                        "referencedDeclaration": 47372,
                        "src": "590:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bomb_$47372",
                          "typeString": "contract Bomb"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47315,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "602:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Bomb_$47372_$",
                        "typeString": "function () returns (contract Bomb)"
                      },
                      "typeName": {
                        "id": 47312,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 47311,
                          "name": "Bomb",
                          "nameLocations": [
                            "606:4:105"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47372,
                          "src": "606:4:105"
                        },
                        "referencedDeclaration": 47372,
                        "src": "606:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bomb_$47372",
                          "typeString": "contract Bomb"
                        }
                      }
                    },
                    "id": 47314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:10:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Bomb_$47372",
                      "typeString": "contract Bomb"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "590:22:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47319,
                        "name": "engine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47249,
                        "src": "638:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$39708",
                          "typeString": "contract Engine"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Engine_$39708",
                          "typeString": "contract Engine"
                        }
                      ],
                      "expression": {
                        "id": 47316,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47255,
                        "src": "622:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Attacker_$47359",
                          "typeString": "contract Attacker"
                        }
                      },
                      "id": 47318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "631:6:105",
                      "memberName": "attack",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47358,
                      "src": "622:15:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Engine_$39708_$returns$__$",
                        "typeString": "function (contract Engine) external"
                      }
                    },
                    "id": 47320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:23:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47321,
                  "nodeType": "ExpressionStatement",
                  "src": "622:23:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47327,
                            "name": "attacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47255,
                            "src": "678:8:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Attacker_$47359",
                              "typeString": "contract Attacker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Attacker_$47359",
                              "typeString": "contract Attacker"
                            }
                          ],
                          "id": 47326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "670:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47325,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "670:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "670:17:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47322,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "656:2:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15162",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "659:10:105",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14612,
                      "src": "656:13:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 47329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:32:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47330,
                  "nodeType": "ExpressionStatement",
                  "src": "656:32:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47336,
                            "name": "bomb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47310,
                            "src": "730:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bomb_$47372",
                              "typeString": "contract Bomb"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Bomb_$47372",
                              "typeString": "contract Bomb"
                            }
                          ],
                          "id": 47335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "722:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47334,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "722:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "722:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "696e697469616c697a652829",
                            "id": 47340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "761:14:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                              "typeString": "literal_string \"initialize()\""
                            },
                            "value": "initialize()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                              "typeString": "literal_string \"initialize()\""
                            }
                          ],
                          "expression": {
                            "id": 47338,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "737:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 47339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "741:19:105",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "737:23:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 47341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "737:39:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47331,
                        "name": "engine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47249,
                        "src": "698:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$39708",
                          "typeString": "contract Engine"
                        }
                      },
                      "id": 47333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "705:16:105",
                      "memberName": "upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39640,
                      "src": "698:23:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) payable external"
                      }
                    },
                    "id": 47342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:79:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47343,
                  "nodeType": "ExpressionStatement",
                  "src": "698:79:105"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "560:10:105",
            "parameters": {
              "id": 47306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "570:2:105"
            },
            "returnParameters": {
              "id": 47307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:0:105"
            },
            "scope": 47346,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47242,
              "name": "Test",
              "nameLocations": [
                "181:4:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13043,
              "src": "181:4:105"
            },
            "id": 47243,
            "nodeType": "InheritanceSpecifier",
            "src": "181:4:105"
          }
        ],
        "canonicalName": "MotorbikeTest",
        "contractDependencies": [
          39597,
          39708,
          47359,
          47372
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47346,
          13043,
          10113,
          1786
        ],
        "name": "MotorbikeTest",
        "nameLocation": "164:13:105",
        "scope": 47373,
        "usedErrors": []
      },
      {
        "id": 47359,
        "nodeType": "ContractDefinition",
        "src": "788:102:105",
        "nodes": [
          {
            "id": 47358,
            "nodeType": "FunctionDefinition",
            "src": "812:76:105",
            "nodes": [],
            "body": {
              "id": 47357,
              "nodeType": "Block",
              "src": "852:36:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 47352,
                        "name": "engine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47349,
                        "src": "862:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Engine_$39708",
                          "typeString": "contract Engine"
                        }
                      },
                      "id": 47354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "869:10:105",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39624,
                      "src": "862:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 47355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:19:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47356,
                  "nodeType": "ExpressionStatement",
                  "src": "862:19:105"
                }
              ]
            },
            "functionSelector": "d018db3e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "821:6:105",
            "parameters": {
              "id": 47350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47349,
                  "mutability": "mutable",
                  "name": "engine",
                  "nameLocation": "835:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 47358,
                  "src": "828:13:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Engine_$39708",
                    "typeString": "contract Engine"
                  },
                  "typeName": {
                    "id": 47348,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47347,
                      "name": "Engine",
                      "nameLocations": [
                        "828:6:105"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39708,
                      "src": "828:6:105"
                    },
                    "referencedDeclaration": 39708,
                    "src": "828:6:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Engine_$39708",
                      "typeString": "contract Engine"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:15:105"
            },
            "returnParameters": {
              "id": 47351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:105"
            },
            "scope": 47359,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Attacker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47359
        ],
        "name": "Attacker",
        "nameLocation": "797:8:105",
        "scope": 47373,
        "usedErrors": []
      },
      {
        "id": 47372,
        "nodeType": "ContractDefinition",
        "src": "892:103:105",
        "nodes": [
          {
            "id": 47371,
            "nodeType": "FunctionDefinition",
            "src": "912:81:105",
            "nodes": [],
            "body": {
              "id": 47370,
              "nodeType": "Block",
              "src": "943:50:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 47365,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "974:3:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "978:6:105",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "974:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "966:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 47363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "966:8:105",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "966:19:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 47362,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "953:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 47368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:33:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47369,
                  "nodeType": "ExpressionStatement",
                  "src": "953:33:105"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "921:10:105",
            "parameters": {
              "id": 47360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:2:105"
            },
            "returnParameters": {
              "id": 47361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:105"
            },
            "scope": 47372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Bomb",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47372
        ],
        "name": "Bomb",
        "nameLocation": "901:4:105",
        "scope": 47373,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 105
}
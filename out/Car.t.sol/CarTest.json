{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [
        {
          "internalType": "contract Attack",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "carFactory",
      "outputs": [
        {
          "internalType": "contract CarFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "carMarket",
      "outputs": [
        {
          "internalType": "contract CarMarket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "carToken",
      "outputs": [
        {
          "internalType": "contract CarToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b5061315e806100316000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ba563cea11610066578063ba563cea14610118578063d530bf331461012b578063e74e6a391461013e578063f8ccbf4714610151578063fa7626d41461016457600080fd5b80630a9254e4146100a35780633a768463146100ad5780636f2db99c146100e55780639e5faafc146100ed578063ba414fa614610100575b600080fd5b6100ab610171565b005b6100c8737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab610337565b600b546100c8906001600160a01b031681565b61010861073d565b60405190151581526020016100dc565b600a546100c8906001600160a01b031681565b6009546100c8906001600160a01b031681565b6008546100c8906001600160a01b031681565b6000546101089062010000900460ff1681565b6000546101089060ff1681565b60405161017d90610a9f565b604051809103906000f080158015610199573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b039290921691821790556040516101c590610aad565b6001600160a01b039091168152602001604051809103906000f0801580156101f1573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039283169081179091556009546040519192169061022490610abb565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610257573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b0392831617905560085460095460405191831692169061028c90610ac9565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102bf573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03928316179055600854600a546040516315e2aae960e21b8152908316600482015291169063578aaba490602401600060405180830381600087803b15801561031d57600080fd5b505af1158015610331573d6000803e3d6000fd5b50505050565b600954600854604051633f6cbc1560e11b81526001600160a01b03918216600482015269152d02c7e14af68000006024820152911690637ed9782a90604401600060405180830381600087803b15801561039057600080fd5b505af11580156103a4573d6000803e3d6000fd5b5050600954600a54604051633f6cbc1560e11b81526001600160a01b03918216600482015269152d02c7e14af6800000602482015291169250637ed9782a9150604401600060405180830381600087803b15801561040157600080fd5b505af1158015610415573d6000803e3d6000fd5b5050600b546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801561047257600080fd5b505af1158015610486573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063095ea7b391506044016020604051808303816000875af115801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610ad7565b506008546040516351f1fd4360e11b8152606060048083019190915260648201526319dbdb1960e21b608482015260a06024820152600360a48201526253363360e81b60c482015260e06044820152600660e482015265135054958cd360d21b6101048201526001600160a01b039091169063a3e3fa869061012401600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b505060085460405169152d02c7e14af680000060248201526001600160a01b039091169250604401905060408051601f198184030181529181526020820180516001600160e01b0316639ab603b960e01b1790525161067b9190610b30565b6000604051808303816000865af19150503d80600081146106b8576040519150601f19603f3d011682016040523d82523d6000602084013e6106bd565b606091505b5050600854600b54604051633a2deef360e01b81526001600160a01b03918216600482015261073b9350911690633a2deef390602401602060405180830381865afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190610b3c565b6002610868565b565b60008054610100900460ff161561075d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108635760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916107eb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b55565b60408051601f198184030181529082905261080591610b30565b6000604051808303816000865af19150503d8060008114610842576040519150601f19603f3d011682016040523d82523d6000602084013e610847565b606091505b509150508080602001905181019061085f9190610ad7565b9150505b919050565b80821461098f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516108d99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161098f610993565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a8e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610a2d9291602001610b55565b60408051601f1981840301815290829052610a4791610b30565b6000604051808303816000865af19150503d8060008114610a84576040519150601f19603f3d011682016040523d82523d6000602084013e610a89565b606091505b505050505b6000805461ff001916610100179055565b610f3a8062000b7a83390190565b610ddf8062001ab483390190565b6105b6806200289383390190565b6102e08062002e4983390190565b600060208284031215610ae957600080fd5b81518015158114610af957600080fd5b9392505050565b6000815160005b81811015610b215760208185018101518683015201610b07565b50600093019283525090919050565b6000610af98284610b00565b600060208284031215610b4e57600080fd5b5051919050565b6001600160e01b0319831681526000610b716004830184610b00565b94935050505056fe60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a43617220436f6d70616e7960a81b8152506040518060400160405280600381526020016243435960e81b815250816003908162000063919062000190565b50600462000072828262000190565b5050506200008f620000896200009560201b60201c565b62000099565b6200025c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011657607f821691505b6020821081036200013757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018b57600081815260208120601f850160051c81016020861015620001665750805b601f850160051c820191505b81811015620001875782815560010162000172565b5050505b505050565b81516001600160401b03811115620001ac57620001ac620000eb565b620001c481620001bd845462000101565b846200013d565b602080601f831160018114620001fc5760008415620001e35750858301515b600019600386901b1c1916600185901b17855562000187565b600085815260208120601f198616915b828110156200022d578886015182559484019460019091019084016200020c565b50858210156200024c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610cce806200026c6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461020a578063a457c2d714610212578063a9059cbb14610225578063dd62ed3e14610238578063f2fde38b1461024b57600080fd5b806370a08231146101ab578063715018a6146101d45780637ed9782a146101dc5780638da5cb5b146101ef57600080fd5b806318160ddd116100de57806318160ddd1461016e57806323b872dd14610176578063313ce56714610189578063395093511461019857600080fd5b806306661abd1461011057806306fdde031461012c578063095ea7b3146101415780631249c58b14610164575b600080fd5b61011960075481565b6040519081526020015b60405180910390f35b61013461025e565b6040516101239190610b18565b61015461014f366004610b82565b6102f0565b6040519015158152602001610123565b61016c61030a565b005b600254610119565b610154610184366004610bac565b6103e8565b60405160128152602001610123565b6101546101a6366004610b82565b61040c565b6101196101b9366004610be8565b6001600160a01b031660009081526020819052604090205490565b61016c61042e565b61016c6101ea366004610b82565b610440565b6005546040516001600160a01b039091168152602001610123565b61013461052f565b610154610220366004610b82565b61053e565b610154610233366004610b82565b6105b9565b610119610246366004610c0a565b6105c7565b61016c610259366004610be8565b6105f2565b60606003805461026d90610c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461029990610c3d565b80156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b5050505050905090565b6000336102fe81858561066b565b60019150505b92915050565b3360009081526006602052604090205460ff16156103645760405162461bcd60e51b815260206004820152601260248201527143616e206f6e6c79206d696e74206f6e636560701b60448201526064015b60405180910390fd5b692c781f708c509f40000061037860025490565b106103ba5760405162461bcd60e51b815260206004820152601260248201527113585e0814dd5c1c1b1e4814995858da195960721b604482015260640161035b565b336000818152600660205260409020805460ff191660011790556103e690670de0b6b3a764000061078f565b565b6000336103f685828561084e565b6104018585856108c8565b506001949350505050565b6000336102fe81858561041f83836105c7565b6104299190610c77565b61066b565b610436610a6c565b6103e66000610ac6565b610448610a6c565b3360009081526006602052604090205460ff161561049d5760405162461bcd60e51b815260206004820152601260248201527143616e206f6e6c79206d696e74206f6e636560701b604482015260640161035b565b692c781f708c509f4000006104b160025490565b6104bb9083610c77565b11156104fe5760405162461bcd60e51b815260206004820152601260248201527113585e0814dd5c1c1b1e4814995858da195960721b604482015260640161035b565b6001600160a01b0382166000908152600660205260409020805460ff1916600117905561052b828261078f565b5050565b60606004805461026d90610c3d565b6000338161054c82866105c7565b9050838110156105ac5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161035b565b610401828686840361066b565b6000336102fe8185856108c8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105fa610a6c565b6001600160a01b03811661065f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035b565b61066881610ac6565b50565b6001600160a01b0383166106cd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161035b565b6001600160a01b03821661072e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161035b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166107e55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161035b565b80600260008282546107f79190610c77565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600061085a84846105c7565b905060001981146108c257818110156108b55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161035b565b6108c2848484840361066b565b50505050565b6001600160a01b03831661092c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161035b565b6001600160a01b03821661098e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161035b565b6001600160a01b03831660009081526020819052604090205481811015610a065760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161035b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108c2565b6005546001600160a01b031633146103e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610b4557858101830151858201604001528201610b29565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b7d57600080fd5b919050565b60008060408385031215610b9557600080fd5b610b9e83610b66565b946020939093013593505050565b600080600060608486031215610bc157600080fd5b610bca84610b66565b9250610bd860208501610b66565b9150604084013590509250925092565b600060208284031215610bfa57600080fd5b610c0382610b66565b9392505050565b60008060408385031215610c1d57600080fd5b610c2683610b66565b9150610c3460208401610b66565b90509250929050565b600181811c90821680610c5157607f821691505b602082108103610c7157634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030457634e487b7160e01b600052601160045260246000fdfea2646970667358221220cf4ef1f5576585e144705094d90fc6e8b3826e3bd25ff2efd0c862903623adf564736f6c63430008110033608060405234801561001057600080fd5b50604051610ddf380380610ddf83398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610cf3806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806396eef7d81161007157806396eef7d8146102e7578063a3e3fa8614610322578063ccaa46d514610335578063d93e8a9514610357578063e74e6a3914610368578063f2fde38b1461037b576100a9565b80630c96ff9c1461025a5780633a2deef314610284578063578aaba4146102bb578063715018a6146102ce5780638da5cb5b146102d6575b600380546001600160a01b031916309081179091556002546001546040516370a0823160e01b815260048101939093526001600160a01b039182169263095ea7b3929091169083906370a0823190602401602060405180830381865afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b91906108eb565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa9190610904565b506001546040516000916001600160a01b0316906101cb908390369061092d565b600060405180830381855af49150503d8060008114610206576040519150601f19603f3d011682016040523d82523d6000602084013e61020b565b606091505b50509050806102585760405162461bcd60e51b815260206004820152601460248201527311195b1959d85d194818d85b1b0819985a5b195960621b60448201526064015b60405180910390fd5b005b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6102ad610292366004610954565b6001600160a01b031660009081526004602052604090205490565b60405190815260200161027b565b6102586102c9366004610954565b61038e565b6102586103b8565b6000546001600160a01b0316610267565b6103126102f5366004610954565b6001600160a01b0316600090815260046020526040902054151590565b604051901515815260200161027b565b610258610330366004610a12565b6103cc565b610348610343366004610a9a565b6105bf565b60405161027b93929190610b0a565b6002546001600160a01b0316610267565b600354610267906001600160a01b031681565b610258610389366004610954565b610784565b6103966107fd565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103c06107fd565b6103ca6000610857565b565b6103d5336108a7565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561041d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044191906108eb565b10156104825760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f756768206d6f6e657960801b604482015260640161024f565b6002546001600160a01b03166323b872dd336104a66000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152670de0b6b3a764000060448201526064016020604051808303816000875af1158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610904565b503360009081526004602052604081208054829061054290610b4d565b9182905550604080516060810182528681526020808201879052818301869052336000908152600582528381208582529091529190912081519293509091819061058c9082610bfd565b50602082015160018201906105a19082610bfd565b50604082015160028201906105b69082610bfd565b50505050505050565b60056020908152600092835260408084209091529082529020805481906105e590610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461061190610b74565b801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b50505050509080600101805461067390610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90610b74565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b50505050509080600201805461070190610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461072d90610b74565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050505050905083565b61078c6107fd565b6001600160a01b0381166107f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161024f565b6107fa81610857565b50565b6000546001600160a01b031633146103ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526004602052604081205481036108d55750670de0b6b3a7640000919050565b5069152d02c7e14af6800000919050565b919050565b6000602082840312156108fd57600080fd5b5051919050565b60006020828403121561091657600080fd5b8151801515811461092657600080fd5b9392505050565b8183823760009101908152919050565b80356001600160a01b03811681146108e657600080fd5b60006020828403121561096657600080fd5b6109268261093d565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813567ffffffffffffffff808211156109b1576109b161096f565b604051601f8301601f19908116603f011681019082821181831017156109d9576109d961096f565b816040528381528660208588010111156109f257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a2757600080fd5b833567ffffffffffffffff80821115610a3f57600080fd5b610a4b87838801610985565b94506020860135915080821115610a6157600080fd5b610a6d87838801610985565b93506040860135915080821115610a8357600080fd5b50610a9086828701610985565b9150509250925092565b60008060408385031215610aad57600080fd5b610ab68361093d565b946020939093013593505050565b6000815180845260005b81811015610aea57602081850181015186830182015201610ace565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610b1d6060830186610ac4565b8281036020840152610b2f8186610ac4565b90508281036040840152610b438185610ac4565b9695505050505050565b600060018201610b6d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610b8857607f821691505b602082108103610ba857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bf857600081815260208120601f850160051c81016020861015610bd55750805b601f850160051c820191505b81811015610bf457828155600101610be1565b5050505b505050565b815167ffffffffffffffff811115610c1757610c1761096f565b610c2b81610c258454610b74565b84610bae565b602080601f831160018114610c605760008415610c485750858301515b600019600386901b1c1916600185901b178555610bf4565b600085815260208120601f198616915b82811015610c8f57888601518255948401946001909101908401610c70565b5085821015610cad5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200f073793a1242137aa59a402e6cde741fee2288fa8ecc6535025b2d64bb79e5c64736f6c63430008110033608060405234801561001057600080fd5b506040516105b63803806105b683398101604081905261002f9161007f565b600280546001600160a01b039283166001600160a01b031991821617909155600380549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b6104f5806100c16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063747f8a88146100515780639ab603b91461007a578063d93e8a951461008f578063e74e6a39146100a0575b600080fd5b6003546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61008d610088366004610435565b6100b3565b005b6002546001600160a01b031661005e565b60035461005e906001600160a01b031681565b6003546040516312dddefb60e31b81523360048201526001600160a01b03909116906396eef7d890602401602060405180830381865afa1580156100fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011f919061044e565b6101685760405162461bcd60e51b81526020600482015260156024820152742737ba1032bc34b9ba34b7339031bab9ba37b6b2b960591b60448201526064015b60405180910390fd5b6002546001546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa1580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd9190610477565b9050818110156102265760405162461bcd60e51b8152602060048201526014602482015273416d6f756e74206e6f7420617661696c61626c6560601b604482015260640161015f565b60025460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b919061044e565b50604051306024820152600090339060440160408051601f198184030181529181526020820180516001600160e01b03166001624f0a6d60e01b0319179052516102e59190610490565b6000604051808303816000865af19150503d8060008114610322576040519150601f19603f3d011682016040523d82523d6000602084013e610327565b606091505b50509050806103705760405162461bcd60e51b815260206004820152601560248201527410d85b1b081d1bc81d185c99d95d0819985a5b1959605a1b604482015260640161015f565b6002546001546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610477565b90508281101561042f5760405162461bcd60e51b8152602060048201526015602482015274131bd85b881b9bdd081c185a59081a5b88199d5b1b605a1b604482015260640161015f565b50505050565b60006020828403121561044757600080fd5b5035919050565b60006020828403121561046057600080fd5b8151801515811461047057600080fd5b9392505050565b60006020828403121561048957600080fd5b5051919050565b6000825160005b818110156104b15760208186018101518583015201610497565b50600092019182525091905056fea264697066735822122062f1a35367c4a5d99e4c408b9f6c275d0e6295a295016ea47b02310c0bc15a4564736f6c63430008110033608060405234801561001057600080fd5b506040516102e03803806102e083398101604081905261002f9161007c565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610222806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a035b1fe1461003b578063ffb0f59314610056575b600080fd5b61004460035481565b60405190815260200160405180910390f35b61006961006436600461019a565b61006b565b005b60025460015460405163095ea7b360e01b81526001600160a01b03918216600482015269152d02c7e14af6800000602482015291169063095ea7b3906044016020604051808303816000875af11580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed91906101ca565b506001546040516351f1fd4360e11b8152606060048201526005606482015264626c61636b60d81b608482015260a06024820152600360a482018190526247363360e81b60c483015260e0604483015260e48201526211d3d160ea1b6101048201526001600160a01b039091169063a3e3fa869061012401600060405180830381600087803b15801561017f57600080fd5b505af1158015610193573d6000803e3d6000fd5b5050505050565b6000602082840312156101ac57600080fd5b81356001600160a01b03811681146101c357600080fd5b9392505050565b6000602082840312156101dc57600080fd5b815180151581146101c357600080fdfea26469706673582212200106ba8ef8455f07bcc01f746f1666a1261855e8e02ed8e42de190b0b9fb1b0764736f6c63430008110033a2646970667358221220ed4c01e43a0ea8484fc5ba01afc5fb9034080cfcf1dfd473a4e17012aa2435b064736f6c63430008110033",
    "sourceMap": "840:1381:17:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;840:1381:17;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ba563cea11610066578063ba563cea14610118578063d530bf331461012b578063e74e6a391461013e578063f8ccbf4714610151578063fa7626d41461016457600080fd5b80630a9254e4146100a35780633a768463146100ad5780636f2db99c146100e55780639e5faafc146100ed578063ba414fa614610100575b600080fd5b6100ab610171565b005b6100c8737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab610337565b600b546100c8906001600160a01b031681565b61010861073d565b60405190151581526020016100dc565b600a546100c8906001600160a01b031681565b6009546100c8906001600160a01b031681565b6008546100c8906001600160a01b031681565b6000546101089062010000900460ff1681565b6000546101089060ff1681565b60405161017d90610a9f565b604051809103906000f080158015610199573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b039290921691821790556040516101c590610aad565b6001600160a01b039091168152602001604051809103906000f0801580156101f1573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039283169081179091556009546040519192169061022490610abb565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610257573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b0392831617905560085460095460405191831692169061028c90610ac9565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156102bf573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03928316179055600854600a546040516315e2aae960e21b8152908316600482015291169063578aaba490602401600060405180830381600087803b15801561031d57600080fd5b505af1158015610331573d6000803e3d6000fd5b50505050565b600954600854604051633f6cbc1560e11b81526001600160a01b03918216600482015269152d02c7e14af68000006024820152911690637ed9782a90604401600060405180830381600087803b15801561039057600080fd5b505af11580156103a4573d6000803e3d6000fd5b5050600954600a54604051633f6cbc1560e11b81526001600160a01b03918216600482015269152d02c7e14af6800000602482015291169250637ed9782a9150604401600060405180830381600087803b15801561040157600080fd5b505af1158015610415573d6000803e3d6000fd5b5050600b546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801561047257600080fd5b505af1158015610486573d6000803e3d6000fd5b50505050600960009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063095ea7b391506044016020604051808303816000875af115801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610ad7565b506008546040516351f1fd4360e11b8152606060048083019190915260648201526319dbdb1960e21b608482015260a06024820152600360a48201526253363360e81b60c482015260e06044820152600660e482015265135054958cd360d21b6101048201526001600160a01b039091169063a3e3fa869061012401600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b505060085460405169152d02c7e14af680000060248201526001600160a01b039091169250604401905060408051601f198184030181529181526020820180516001600160e01b0316639ab603b960e01b1790525161067b9190610b30565b6000604051808303816000865af19150503d80600081146106b8576040519150601f19603f3d011682016040523d82523d6000602084013e6106bd565b606091505b5050600854600b54604051633a2deef360e01b81526001600160a01b03918216600482015261073b9350911690633a2deef390602401602060405180830381865afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190610b3c565b6002610868565b565b60008054610100900460ff161561075d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108635760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916107eb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b55565b60408051601f198184030181529082905261080591610b30565b6000604051808303816000865af19150503d8060008114610842576040519150601f19603f3d011682016040523d82523d6000602084013e610847565b606091505b509150508080602001905181019061085f9190610ad7565b9150505b919050565b80821461098f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516108d99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161098f610993565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a8e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610a2d9291602001610b55565b60408051601f1981840301815290829052610a4791610b30565b6000604051808303816000865af19150503d8060008114610a84576040519150601f19603f3d011682016040523d82523d6000602084013e610a89565b606091505b505050505b6000805461ff001916610100179055565b610f3a8062000b7a83390190565b610ddf8062001ab483390190565b6105b6806200289383390190565b6102e08062002e4983390190565b600060208284031215610ae957600080fd5b81518015158114610af957600080fd5b9392505050565b6000815160005b81811015610b215760208185018101518683015201610b07565b50600093019283525090919050565b6000610af98284610b00565b600060208284031215610b4e57600080fd5b5051919050565b6001600160e01b0319831681526000610b716004830184610b00565b94935050505056fe60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a43617220436f6d70616e7960a81b8152506040518060400160405280600381526020016243435960e81b815250816003908162000063919062000190565b50600462000072828262000190565b5050506200008f620000896200009560201b60201c565b62000099565b6200025c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011657607f821691505b6020821081036200013757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018b57600081815260208120601f850160051c81016020861015620001665750805b601f850160051c820191505b81811015620001875782815560010162000172565b5050505b505050565b81516001600160401b03811115620001ac57620001ac620000eb565b620001c481620001bd845462000101565b846200013d565b602080601f831160018114620001fc5760008415620001e35750858301515b600019600386901b1c1916600185901b17855562000187565b600085815260208120601f198616915b828110156200022d578886015182559484019460019091019084016200020c565b50858210156200024c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610cce806200026c6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461020a578063a457c2d714610212578063a9059cbb14610225578063dd62ed3e14610238578063f2fde38b1461024b57600080fd5b806370a08231146101ab578063715018a6146101d45780637ed9782a146101dc5780638da5cb5b146101ef57600080fd5b806318160ddd116100de57806318160ddd1461016e57806323b872dd14610176578063313ce56714610189578063395093511461019857600080fd5b806306661abd1461011057806306fdde031461012c578063095ea7b3146101415780631249c58b14610164575b600080fd5b61011960075481565b6040519081526020015b60405180910390f35b61013461025e565b6040516101239190610b18565b61015461014f366004610b82565b6102f0565b6040519015158152602001610123565b61016c61030a565b005b600254610119565b610154610184366004610bac565b6103e8565b60405160128152602001610123565b6101546101a6366004610b82565b61040c565b6101196101b9366004610be8565b6001600160a01b031660009081526020819052604090205490565b61016c61042e565b61016c6101ea366004610b82565b610440565b6005546040516001600160a01b039091168152602001610123565b61013461052f565b610154610220366004610b82565b61053e565b610154610233366004610b82565b6105b9565b610119610246366004610c0a565b6105c7565b61016c610259366004610be8565b6105f2565b60606003805461026d90610c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461029990610c3d565b80156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b5050505050905090565b6000336102fe81858561066b565b60019150505b92915050565b3360009081526006602052604090205460ff16156103645760405162461bcd60e51b815260206004820152601260248201527143616e206f6e6c79206d696e74206f6e636560701b60448201526064015b60405180910390fd5b692c781f708c509f40000061037860025490565b106103ba5760405162461bcd60e51b815260206004820152601260248201527113585e0814dd5c1c1b1e4814995858da195960721b604482015260640161035b565b336000818152600660205260409020805460ff191660011790556103e690670de0b6b3a764000061078f565b565b6000336103f685828561084e565b6104018585856108c8565b506001949350505050565b6000336102fe81858561041f83836105c7565b6104299190610c77565b61066b565b610436610a6c565b6103e66000610ac6565b610448610a6c565b3360009081526006602052604090205460ff161561049d5760405162461bcd60e51b815260206004820152601260248201527143616e206f6e6c79206d696e74206f6e636560701b604482015260640161035b565b692c781f708c509f4000006104b160025490565b6104bb9083610c77565b11156104fe5760405162461bcd60e51b815260206004820152601260248201527113585e0814dd5c1c1b1e4814995858da195960721b604482015260640161035b565b6001600160a01b0382166000908152600660205260409020805460ff1916600117905561052b828261078f565b5050565b60606004805461026d90610c3d565b6000338161054c82866105c7565b9050838110156105ac5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161035b565b610401828686840361066b565b6000336102fe8185856108c8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105fa610a6c565b6001600160a01b03811661065f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035b565b61066881610ac6565b50565b6001600160a01b0383166106cd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161035b565b6001600160a01b03821661072e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161035b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166107e55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161035b565b80600260008282546107f79190610c77565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600061085a84846105c7565b905060001981146108c257818110156108b55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161035b565b6108c2848484840361066b565b50505050565b6001600160a01b03831661092c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161035b565b6001600160a01b03821661098e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161035b565b6001600160a01b03831660009081526020819052604090205481811015610a065760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161035b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108c2565b6005546001600160a01b031633146103e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610b4557858101830151858201604001528201610b29565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b7d57600080fd5b919050565b60008060408385031215610b9557600080fd5b610b9e83610b66565b946020939093013593505050565b600080600060608486031215610bc157600080fd5b610bca84610b66565b9250610bd860208501610b66565b9150604084013590509250925092565b600060208284031215610bfa57600080fd5b610c0382610b66565b9392505050565b60008060408385031215610c1d57600080fd5b610c2683610b66565b9150610c3460208401610b66565b90509250929050565b600181811c90821680610c5157607f821691505b602082108103610c7157634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030457634e487b7160e01b600052601160045260246000fdfea2646970667358221220cf4ef1f5576585e144705094d90fc6e8b3826e3bd25ff2efd0c862903623adf564736f6c63430008110033608060405234801561001057600080fd5b50604051610ddf380380610ddf83398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610cf3806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806396eef7d81161007157806396eef7d8146102e7578063a3e3fa8614610322578063ccaa46d514610335578063d93e8a9514610357578063e74e6a3914610368578063f2fde38b1461037b576100a9565b80630c96ff9c1461025a5780633a2deef314610284578063578aaba4146102bb578063715018a6146102ce5780638da5cb5b146102d6575b600380546001600160a01b031916309081179091556002546001546040516370a0823160e01b815260048101939093526001600160a01b039182169263095ea7b3929091169083906370a0823190602401602060405180830381865afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b91906108eb565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa9190610904565b506001546040516000916001600160a01b0316906101cb908390369061092d565b600060405180830381855af49150503d8060008114610206576040519150601f19603f3d011682016040523d82523d6000602084013e61020b565b606091505b50509050806102585760405162461bcd60e51b815260206004820152601460248201527311195b1959d85d194818d85b1b0819985a5b195960621b60448201526064015b60405180910390fd5b005b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6102ad610292366004610954565b6001600160a01b031660009081526004602052604090205490565b60405190815260200161027b565b6102586102c9366004610954565b61038e565b6102586103b8565b6000546001600160a01b0316610267565b6103126102f5366004610954565b6001600160a01b0316600090815260046020526040902054151590565b604051901515815260200161027b565b610258610330366004610a12565b6103cc565b610348610343366004610a9a565b6105bf565b60405161027b93929190610b0a565b6002546001600160a01b0316610267565b600354610267906001600160a01b031681565b610258610389366004610954565b610784565b6103966107fd565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103c06107fd565b6103ca6000610857565b565b6103d5336108a7565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561041d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044191906108eb565b10156104825760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f756768206d6f6e657960801b604482015260640161024f565b6002546001600160a01b03166323b872dd336104a66000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152670de0b6b3a764000060448201526064016020604051808303816000875af1158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610904565b503360009081526004602052604081208054829061054290610b4d565b9182905550604080516060810182528681526020808201879052818301869052336000908152600582528381208582529091529190912081519293509091819061058c9082610bfd565b50602082015160018201906105a19082610bfd565b50604082015160028201906105b69082610bfd565b50505050505050565b60056020908152600092835260408084209091529082529020805481906105e590610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461061190610b74565b801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b50505050509080600101805461067390610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90610b74565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b50505050509080600201805461070190610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461072d90610b74565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050505050905083565b61078c6107fd565b6001600160a01b0381166107f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161024f565b6107fa81610857565b50565b6000546001600160a01b031633146103ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526004602052604081205481036108d55750670de0b6b3a7640000919050565b5069152d02c7e14af6800000919050565b919050565b6000602082840312156108fd57600080fd5b5051919050565b60006020828403121561091657600080fd5b8151801515811461092657600080fd5b9392505050565b8183823760009101908152919050565b80356001600160a01b03811681146108e657600080fd5b60006020828403121561096657600080fd5b6109268261093d565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813567ffffffffffffffff808211156109b1576109b161096f565b604051601f8301601f19908116603f011681019082821181831017156109d9576109d961096f565b816040528381528660208588010111156109f257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a2757600080fd5b833567ffffffffffffffff80821115610a3f57600080fd5b610a4b87838801610985565b94506020860135915080821115610a6157600080fd5b610a6d87838801610985565b93506040860135915080821115610a8357600080fd5b50610a9086828701610985565b9150509250925092565b60008060408385031215610aad57600080fd5b610ab68361093d565b946020939093013593505050565b6000815180845260005b81811015610aea57602081850181015186830182015201610ace565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610b1d6060830186610ac4565b8281036020840152610b2f8186610ac4565b90508281036040840152610b438185610ac4565b9695505050505050565b600060018201610b6d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610b8857607f821691505b602082108103610ba857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bf857600081815260208120601f850160051c81016020861015610bd55750805b601f850160051c820191505b81811015610bf457828155600101610be1565b5050505b505050565b815167ffffffffffffffff811115610c1757610c1761096f565b610c2b81610c258454610b74565b84610bae565b602080601f831160018114610c605760008415610c485750858301515b600019600386901b1c1916600185901b178555610bf4565b600085815260208120601f198616915b82811015610c8f57888601518255948401946001909101908401610c70565b5085821015610cad5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200f073793a1242137aa59a402e6cde741fee2288fa8ecc6535025b2d64bb79e5c64736f6c63430008110033608060405234801561001057600080fd5b506040516105b63803806105b683398101604081905261002f9161007f565b600280546001600160a01b039283166001600160a01b031991821617909155600380549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b6104f5806100c16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063747f8a88146100515780639ab603b91461007a578063d93e8a951461008f578063e74e6a39146100a0575b600080fd5b6003546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61008d610088366004610435565b6100b3565b005b6002546001600160a01b031661005e565b60035461005e906001600160a01b031681565b6003546040516312dddefb60e31b81523360048201526001600160a01b03909116906396eef7d890602401602060405180830381865afa1580156100fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011f919061044e565b6101685760405162461bcd60e51b81526020600482015260156024820152742737ba1032bc34b9ba34b7339031bab9ba37b6b2b960591b60448201526064015b60405180910390fd5b6002546001546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa1580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd9190610477565b9050818110156102265760405162461bcd60e51b8152602060048201526014602482015273416d6f756e74206e6f7420617661696c61626c6560601b604482015260640161015f565b60025460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b919061044e565b50604051306024820152600090339060440160408051601f198184030181529181526020820180516001600160e01b03166001624f0a6d60e01b0319179052516102e59190610490565b6000604051808303816000865af19150503d8060008114610322576040519150601f19603f3d011682016040523d82523d6000602084013e610327565b606091505b50509050806103705760405162461bcd60e51b815260206004820152601560248201527410d85b1b081d1bc81d185c99d95d0819985a5b1959605a1b604482015260640161015f565b6002546001546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610477565b90508281101561042f5760405162461bcd60e51b8152602060048201526015602482015274131bd85b881b9bdd081c185a59081a5b88199d5b1b605a1b604482015260640161015f565b50505050565b60006020828403121561044757600080fd5b5035919050565b60006020828403121561046057600080fd5b8151801515811461047057600080fd5b9392505050565b60006020828403121561048957600080fd5b5051919050565b6000825160005b818110156104b15760208186018101518583015201610497565b50600092019182525091905056fea264697066735822122062f1a35367c4a5d99e4c408b9f6c275d0e6295a295016ea47b02310c0bc15a4564736f6c63430008110033608060405234801561001057600080fd5b506040516102e03803806102e083398101604081905261002f9161007c565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610222806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a035b1fe1461003b578063ffb0f59314610056575b600080fd5b61004460035481565b60405190815260200160405180910390f35b61006961006436600461019a565b61006b565b005b60025460015460405163095ea7b360e01b81526001600160a01b03918216600482015269152d02c7e14af6800000602482015291169063095ea7b3906044016020604051808303816000875af11580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed91906101ca565b506001546040516351f1fd4360e11b8152606060048201526005606482015264626c61636b60d81b608482015260a06024820152600360a482018190526247363360e81b60c483015260e0604483015260e48201526211d3d160ea1b6101048201526001600160a01b039091169063a3e3fa869061012401600060405180830381600087803b15801561017f57600080fd5b505af1158015610193573d6000803e3d6000fd5b5050505050565b6000602082840312156101ac57600080fd5b81356001600160a01b03811681146101c357600080fd5b9392505050565b6000602082840312156101dc57600080fd5b815180151581146101c357600080fdfea26469706673582212200106ba8ef8455f07bcc01f746f1666a1261855e8e02ed8e42de190b0b9fb1b0764736f6c63430008110033a2646970667358221220ed4c01e43a0ea8484fc5ba01afc5fb9034080cfcf1dfd473a4e17012aa2435b064736f6c63430008110033",
    "sourceMap": "840:1381:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;994:515;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:18;;;171:51;;159:2;144:18;321:38:1;;;;;;;;1515:704:17;;;:::i;967:20::-;;;;;-1:-1:-1;;;;;967:20:17;;;1819:584:0;;;:::i;:::-;;;622:14:18;;615:22;597:41;;585:2;570:18;1819:584:0;457:187:18;933:28:17;;;;;-1:-1:-1;;;;;933:28:17;;;903:24;;;;;-1:-1:-1;;;;;903:24:17;;;871:26;;;;;-1:-1:-1;;;;;871:26:17;;;170:28:1;;;;;;;;;;;;1572:26:0;;;;;;;;;994:515:17;1128:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1117:8:17;:25;;-1:-1:-1;;;;;;1117:25:17;-1:-1:-1;;;;;1117:25:17;;;;;;;;;1164:32;;;;;:::i;:::-;-1:-1:-1;;;;;189:32:18;;;171:51;;159:2;144:18;1164:32:17;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1152:9:17;:44;;-1:-1:-1;;;;;;1152:44:17;-1:-1:-1;;;;;1152:44:17;;;;;;;;;1262:8;;1219:53;;1152:44;;1262:8;;1219:53;;;:::i;:::-;-1:-1:-1;;;;;1768:15:18;;;1750:34;;1820:15;;1815:2;1800:18;;1793:43;1700:2;1685:18;1219:53:17;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1206:10:17;:66;;-1:-1:-1;;;;;;1206:66:17;-1:-1:-1;;;;;1206:66:17;;;;;;1311:9;;1331:8;;1292:49;;1311:9;;;;1331:8;;1292:49;;;:::i;:::-;-1:-1:-1;;;;;1768:15:18;;;1750:34;;1820:15;;1815:2;1800:18;;1793:43;1700:2;1685:18;1292:49:17;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1283:6:17;:58;;-1:-1:-1;;;;;;1283:58:17;-1:-1:-1;;;;;1283:58:17;;;;;;1352:9;;1384:10;;1352:44;;-1:-1:-1;;;1352:44:17;;1384:10;;;1352:44;;;171:51:18;1352:9:17;;;:23;;144:18:18;;1352:44:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;994:515::o;1515:704::-;1554:8;;1587:9;;1554:59;;-1:-1:-1;;;1554:59:17;;-1:-1:-1;;;;;1587:9:17;;;1554:59;;;2052:51:18;1599:13:17;2119:18:18;;;2112:34;1554:8:17;;;:24;;2025:18:18;;1554:59:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1623:8:17;;1656:10;;1623:60;;-1:-1:-1;;;1623:60:17;;-1:-1:-1;;;;;1656:10:17;;;1623:60;;;2052:51:18;1669:13:17;2119:18:18;;;2112:34;1623:8:17;;;-1:-1:-1;1623:24:17;;-1:-1:-1;2025:18:18;;1623:60:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1749:6:17;;1727:30;;-1:-1:-1;;;1727:30:17;;-1:-1:-1;;;;;1749:6:17;;;1727:30;;;171:51:18;250:64:1;;-1:-1:-1;1727:13:17;;-1:-1:-1;144:18:18;;1727:30:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:8;;;;;;;;;-1:-1:-1;;;;;1767:8:17;-1:-1:-1;;;;;1767:13:17;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1828:8:17;;1853:9;;1828:45;;-1:-1:-1;;;1828:45:17;;-1:-1:-1;;;;;1853:9:17;;;1828:45;;;2052:51:18;1865:7:17;2119:18:18;;;2112:34;1828:8:17;;;-1:-1:-1;1828:16:17;;-1:-1:-1;2025:18:18;;1828:45:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1928:9:17;;:46;;-1:-1:-1;;;1928:46:17;;3148:2:18;1928:46:17;;;;3130:21:18;;;;3167:18;;;3160:29;-1:-1:-1;;;3205:19:18;;;3198:35;3271:3;3249:20;;;3242:33;3312:1;3291:19;;;3284:30;-1:-1:-1;;;3330:19:18;;;3323:34;3393:3;3373:18;;;3366:31;3434:1;3413:19;;;3406:30;-1:-1:-1;;;3452:19:18;;;3445:37;-1:-1:-1;;;;;1928:9:17;;;;:21;;3499:19:18;;1928:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2051:9:17;;2080:60;;2126:13;2080:60;;;3705:54:18;-1:-1:-1;;;;;2051:9:17;;;;-1:-1:-1;3678:18:18;;;-1:-1:-1;2080:60:17;;;-1:-1:-1;;2080:60:17;;;;;;;;;;;;;;-1:-1:-1;;;;;2080:60:17;-1:-1:-1;;;2080:60:17;;;2043:107;;;2080:60;2043:107;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2170:9:17;;2200:6;;2170:38;;-1:-1:-1;;;2170:38:17;;-1:-1:-1;;;;;2200:6:17;;;2170:38;;;171:51:18;2161::17;;-1:-1:-1;2170:9:17;;;:21;;144:18:18;;2170:38:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2210:1;2161:8;:51::i;:::-;1515:704::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;2052:51:18;;;-1:-1:-1;;;2119:18:18;;;2112:34;2196:43:0;;;;;;;;;2025:18:18;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;5244:2:18;5226:21;;;5283:2;5263:18;;;5256:30;5322:34;5317:2;5302:18;;5295:62;-1:-1:-1;;;5388:2:18;5373:18;;5366:32;5430:3;5415:19;;5042:398;5286:41:0;;;;;;;;5346:31;;;5657:21:18;;;5714:2;5694:18;;;5687:30;-1:-1:-1;;;5748:2:18;5733:18;;5726:40;5833:4;5818:20;;5811:36;;;5346:31:0;;;;;;;5798:3:18;5346:31:0;;;5396;;;6070:21:18;;;6127:2;6107:18;;;6100:30;-1:-1:-1;;;6161:2:18;6146:18;;6139:40;6246:4;6231:20;;6224:36;;;5396:31:0;;;;;;;6211:3:18;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;6473:51:18;;;-1:-1:-1;;;6540:18:18;;;6533:34;;;;2705:4:0;6583:18:18;;;6576:34;2482:11:0;;1671:64;2579:43;;6446:18:18;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;2462:277:18:-;2529:6;2582:2;2570:9;2561:7;2557:23;2553:32;2550:52;;;2598:1;2595;2588:12;2550:52;2630:9;2624:16;2683:5;2676:13;2669:21;2662:5;2659:32;2649:60;;2705:1;2702;2695:12;2649:60;2728:5;2462:277;-1:-1:-1;;;2462:277:18:o;3770:322::-;3811:3;3849:5;3843:12;3873:1;3883:128;3897:6;3894:1;3891:13;3883:128;;;3994:4;3979:13;;;3975:24;;3969:31;3956:11;;;3949:52;3912:12;3883:128;;;-1:-1:-1;4066:1:18;4030:16;;4055:13;;;-1:-1:-1;4030:16:18;;3770:322;-1:-1:-1;3770:322:18:o;4097:189::-;4226:3;4251:29;4276:3;4268:6;4251:29;:::i;4291:184::-;4361:6;4414:2;4402:9;4393:7;4389:23;4385:32;4382:52;;;4430:1;4427;4420:12;4382:52;-1:-1:-1;4453:16:18;;4291:184;-1:-1:-1;4291:184:18:o;4759:278::-;-1:-1:-1;;;;;;4944:33:18;;4932:46;;4914:3;4994:37;5028:1;5019:11;;5011:6;4994:37;:::i;:::-;4987:44;4759:278;-1:-1:-1;;;;4759:278:18:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "attack()": "9e5faafc",
    "carFactory()": "ba563cea",
    "carMarket()": "e74e6a39",
    "carToken()": "d530bf33",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[{\"internalType\":\"contract Attack\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"carFactory\",\"outputs\":[{\"internalType\":\"contract CarFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"carMarket\",\"outputs\":[{\"internalType\":\"contract CarMarket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"carToken\",\"outputs\":[{\"internalType\":\"contract CarToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethernautDao/Car.t.sol\":\"CarTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ethernautDao/level3/CarFactory.sol\":{\"keccak256\":\"0xdf52d673889229390239be24a44c38a9f4918ee0445df2076cdc75bbe7bd72d0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b78c972c6353c72d53154342b2696647b80d2b597a8a63b30f77f2730f65fb0f\",\"dweb:/ipfs/QmbfLC35inJAqM5uqv2uU38KXFtMu7e41g6FHVjFbWBRmy\"]},\"src/ethernautDao/level3/CarMarket.sol\":{\"keccak256\":\"0x93c46212637ec1a8e631d197489fd45342d0e3422f0a73d2b4bd51404ee71647\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b38e963872f2ad853f5a1780ab5d08bc70abb689e6d27a968b9ccad70d59bbb9\",\"dweb:/ipfs/QmcGEMWNEmXNTA7kDWyLB5YJowLq6agbfT4HcZN2CmeUpu\"]},\"src/ethernautDao/level3/CarToken.sol\":{\"keccak256\":\"0xceddb5c0ba4623de84b00b930f9c0de7f3a9a817aad8f0d5a12a30146f3d2363\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://aceadf3ec787e2246f4726cfd834c789a12b9a08cf2c5554869a0a831ecd2b70\",\"dweb:/ipfs/QmUUP8nCLiGH6ME4rGgTMWXv5qj94TEGpYeDj2MfJJ7E76\"]},\"src/ethernautDao/level3/interfaces/ICarMarket.sol\":{\"keccak256\":\"0x415034cc2cc2bc710f438d251af98b9cb2c66006463eb0272a7db14956288b45\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://509bb427c23217d8357ead61219dfa82964a71b6784a2918927f79958d278cbf\",\"dweb:/ipfs/QmWGSabKX3zdeNoyB3uocUvjBzhmxbbxCXgUthAR5hDNiH\"]},\"src/ethernautDao/level3/interfaces/ICarToken.sol\":{\"keccak256\":\"0x3422b68b1d87abb2b3aa766362fa84306c9d9055550f421e826919cb5bf5e7ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b1cfcd24a2c5320e26a786b57555b2dbeed51ebb212beb46d982d97ed2a9eb8\",\"dweb:/ipfs/QmdErdqMW26QLwVduHbXqa9KJ5sTZmNAnYscTTu3d2S584\"]},\"test/ethernautDao/Car.t.sol\":{\"keccak256\":\"0x705d628cf5df94754c6e0a6c486f4d50b03632d8e9baacc33c3453b9f4a2fda2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://618197e13cd814c85cc47a3121d3ab820f85f901874b1083d339f2c4114d9c68\",\"dweb:/ipfs/QmXray6JJYaggw71ztQBH13dFVdKBJVLcwZynmkFLqKQd9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "attack",
          "outputs": [
            {
              "internalType": "contract Attack",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "carFactory",
          "outputs": [
            {
              "internalType": "contract CarFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "carMarket",
          "outputs": [
            {
              "internalType": "contract CarMarket",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "carToken",
          "outputs": [
            {
              "internalType": "contract CarToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAttack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ethernautDao/Car.t.sol": "CarTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ethernautDao/level3/CarFactory.sol": {
        "keccak256": "0xdf52d673889229390239be24a44c38a9f4918ee0445df2076cdc75bbe7bd72d0",
        "urls": [
          "bzz-raw://b78c972c6353c72d53154342b2696647b80d2b597a8a63b30f77f2730f65fb0f",
          "dweb:/ipfs/QmbfLC35inJAqM5uqv2uU38KXFtMu7e41g6FHVjFbWBRmy"
        ],
        "license": "GPL-3.0"
      },
      "src/ethernautDao/level3/CarMarket.sol": {
        "keccak256": "0x93c46212637ec1a8e631d197489fd45342d0e3422f0a73d2b4bd51404ee71647",
        "urls": [
          "bzz-raw://b38e963872f2ad853f5a1780ab5d08bc70abb689e6d27a968b9ccad70d59bbb9",
          "dweb:/ipfs/QmcGEMWNEmXNTA7kDWyLB5YJowLq6agbfT4HcZN2CmeUpu"
        ],
        "license": "GPL-3.0"
      },
      "src/ethernautDao/level3/CarToken.sol": {
        "keccak256": "0xceddb5c0ba4623de84b00b930f9c0de7f3a9a817aad8f0d5a12a30146f3d2363",
        "urls": [
          "bzz-raw://aceadf3ec787e2246f4726cfd834c789a12b9a08cf2c5554869a0a831ecd2b70",
          "dweb:/ipfs/QmUUP8nCLiGH6ME4rGgTMWXv5qj94TEGpYeDj2MfJJ7E76"
        ],
        "license": "GPL-3.0"
      },
      "src/ethernautDao/level3/interfaces/ICarMarket.sol": {
        "keccak256": "0x415034cc2cc2bc710f438d251af98b9cb2c66006463eb0272a7db14956288b45",
        "urls": [
          "bzz-raw://509bb427c23217d8357ead61219dfa82964a71b6784a2918927f79958d278cbf",
          "dweb:/ipfs/QmWGSabKX3zdeNoyB3uocUvjBzhmxbbxCXgUthAR5hDNiH"
        ],
        "license": "GPL-3.0"
      },
      "src/ethernautDao/level3/interfaces/ICarToken.sol": {
        "keccak256": "0x3422b68b1d87abb2b3aa766362fa84306c9d9055550f421e826919cb5bf5e7ab",
        "urls": [
          "bzz-raw://5b1cfcd24a2c5320e26a786b57555b2dbeed51ebb212beb46d982d97ed2a9eb8",
          "dweb:/ipfs/QmdErdqMW26QLwVduHbXqa9KJ5sTZmNAnYscTTu3d2S584"
        ],
        "license": "GPL-3.0"
      },
      "test/ethernautDao/Car.t.sol": {
        "keccak256": "0x705d628cf5df94754c6e0a6c486f4d50b03632d8e9baacc33c3453b9f4a2fda2",
        "urls": [
          "bzz-raw://618197e13cd814c85cc47a3121d3ab820f85f901874b1083d339f2c4114d9c68",
          "dweb:/ipfs/QmXray6JJYaggw71ztQBH13dFVdKBJVLcwZynmkFLqKQd9"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ethernautDao/Car.t.sol",
    "id": 24768,
    "exportedSymbols": {
      "Attack": [
        24612
      ],
      "CarFactory": [
        24180
      ],
      "CarMarket": [
        24408
      ],
      "CarTest": [
        24767
      ],
      "CarToken": [
        24514
      ],
      "Context": [
        24051
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        23926
      ],
      "ICarMarket": [
        24539
      ],
      "ICarToken": [
        24549
      ],
      "IERC20": [
        24004
      ],
      "IERC20Metadata": [
        24029
      ],
      "Ownable": [
        23339
      ],
      "Script": [
        2049
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "Vm": [
        7098
      ],
      "console": [
        15162
      ],
      "console2": [
        23226
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2183:17",
    "nodes": [
      {
        "id": 24551,
        "nodeType": "PragmaDirective",
        "src": "39:24:17",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 24552,
        "nodeType": "ImportDirective",
        "src": "65:28:17",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24768,
        "sourceUnit": 6319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24553,
        "nodeType": "ImportDirective",
        "src": "94:53:17",
        "absolutePath": "src/ethernautDao/level3/CarMarket.sol",
        "file": "../../src/ethernautDao/level3/CarMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24768,
        "sourceUnit": 24409,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24554,
        "nodeType": "ImportDirective",
        "src": "148:52:17",
        "absolutePath": "src/ethernautDao/level3/CarToken.sol",
        "file": "../../src/ethernautDao/level3/CarToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24768,
        "sourceUnit": 24515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24555,
        "nodeType": "ImportDirective",
        "src": "201:54:17",
        "absolutePath": "src/ethernautDao/level3/CarFactory.sol",
        "file": "../../src/ethernautDao/level3/CarFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24768,
        "sourceUnit": 24181,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24556,
        "nodeType": "ImportDirective",
        "src": "256:65:17",
        "absolutePath": "src/ethernautDao/level3/interfaces/ICarMarket.sol",
        "file": "../../src/ethernautDao/level3/interfaces/ICarMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24768,
        "sourceUnit": 24540,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24557,
        "nodeType": "ImportDirective",
        "src": "322:64:17",
        "absolutePath": "src/ethernautDao/level3/interfaces/ICarToken.sol",
        "file": "../../src/ethernautDao/level3/interfaces/ICarToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24768,
        "sourceUnit": 24550,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24612,
        "nodeType": "ContractDefinition",
        "src": "388:450:17",
        "nodes": [
          {
            "id": 24559,
            "nodeType": "VariableDeclaration",
            "src": "410:22:17",
            "constant": false,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "426:6:17",
            "scope": 24612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24558,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "410:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 24562,
            "nodeType": "VariableDeclaration",
            "src": "438:28:17",
            "constant": false,
            "mutability": "mutable",
            "name": "carMarket",
            "nameLocation": "457:9:17",
            "scope": 24612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICarMarket_$24539",
              "typeString": "contract ICarMarket"
            },
            "typeName": {
              "id": 24561,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24560,
                "name": "ICarMarket",
                "nameLocations": [
                  "438:10:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24539,
                "src": "438:10:17"
              },
              "referencedDeclaration": 24539,
              "src": "438:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICarMarket_$24539",
                "typeString": "contract ICarMarket"
              }
            },
            "visibility": "private"
          },
          {
            "id": 24565,
            "nodeType": "VariableDeclaration",
            "src": "472:26:17",
            "constant": false,
            "mutability": "mutable",
            "name": "carToken",
            "nameLocation": "490:8:17",
            "scope": 24612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICarToken_$24549",
              "typeString": "contract ICarToken"
            },
            "typeName": {
              "id": 24564,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24563,
                "name": "ICarToken",
                "nameLocations": [
                  "472:9:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24549,
                "src": "472:9:17"
              },
              "referencedDeclaration": 24549,
              "src": "472:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICarToken_$24549",
                "typeString": "contract ICarToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 24567,
            "nodeType": "VariableDeclaration",
            "src": "504:20:17",
            "constant": false,
            "functionSelector": "a035b1fe",
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "519:5:17",
            "scope": 24612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24566,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24587,
            "nodeType": "FunctionDefinition",
            "src": "531:127:17",
            "body": {
              "id": 24586,
              "nodeType": "Block",
              "src": "574:84:17",
              "statements": [
                {
                  "expression": {
                    "id": 24578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24574,
                      "name": "carMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24562,
                      "src": "584:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarMarket_$24539",
                        "typeString": "contract ICarMarket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24576,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24569,
                          "src": "607:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24575,
                        "name": "ICarMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24539,
                        "src": "596:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICarMarket_$24539_$",
                          "typeString": "type(contract ICarMarket)"
                        }
                      },
                      "id": 24577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "596:18:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarMarket_$24539",
                        "typeString": "contract ICarMarket"
                      }
                    },
                    "src": "584:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICarMarket_$24539",
                      "typeString": "contract ICarMarket"
                    }
                  },
                  "id": 24579,
                  "nodeType": "ExpressionStatement",
                  "src": "584:30:17"
                },
                {
                  "expression": {
                    "id": 24584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24580,
                      "name": "carToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24565,
                      "src": "624:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarToken_$24549",
                        "typeString": "contract ICarToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24582,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24571,
                          "src": "645:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24581,
                        "name": "ICarToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24549,
                        "src": "635:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICarToken_$24549_$",
                          "typeString": "type(contract ICarToken)"
                        }
                      },
                      "id": 24583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "635:16:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarToken_$24549",
                        "typeString": "contract ICarToken"
                      }
                    },
                    "src": "624:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICarToken_$24549",
                      "typeString": "contract ICarToken"
                    }
                  },
                  "id": 24585,
                  "nodeType": "ExpressionStatement",
                  "src": "624:27:17"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 24572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24569,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "551:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 24587,
                  "src": "543:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24571,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "567:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 24587,
                  "src": "559:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "542:31:17"
            },
            "returnParameters": {
              "id": 24573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:17"
            },
            "scope": 24612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24611,
            "nodeType": "FunctionDefinition",
            "src": "664:172:17",
            "body": {
              "id": 24610,
              "nodeType": "Block",
              "src": "714:122:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24597,
                            "name": "carMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24562,
                            "src": "749:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICarMarket_$24539",
                              "typeString": "contract ICarMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ICarMarket_$24539",
                              "typeString": "contract ICarMarket"
                            }
                          ],
                          "id": 24596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "741:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24595,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "741:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "741:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 24599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "761:13:17",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24592,
                        "name": "carToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24565,
                        "src": "724:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICarToken_$24549",
                          "typeString": "contract ICarToken"
                        }
                      },
                      "id": 24594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "733:7:17",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23991,
                      "src": "724:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:51:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24601,
                  "nodeType": "ExpressionStatement",
                  "src": "724:51:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "626c61636b",
                        "id": 24605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "807:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd39e4b5a3bdc91dff58d0487ec1187739723321e0d423a3db36aae72e5aaa17",
                          "typeString": "literal_string \"black\""
                        },
                        "value": "black"
                      },
                      {
                        "hexValue": "473633",
                        "id": 24606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "816:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d88e4b88d0a898191855da682a7d4b0df0c68ddd2c3e48d64d0bb4d42348fd",
                          "typeString": "literal_string \"G63\""
                        },
                        "value": "G63"
                      },
                      {
                        "hexValue": "474f44",
                        "id": 24607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "823:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44caa441160f2659abeb8071bc942d6eef52d1573223916bcde9b624d75d793d",
                          "typeString": "literal_string \"GOD\""
                        },
                        "value": "GOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cd39e4b5a3bdc91dff58d0487ec1187739723321e0d423a3db36aae72e5aaa17",
                          "typeString": "literal_string \"black\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d88e4b88d0a898191855da682a7d4b0df0c68ddd2c3e48d64d0bb4d42348fd",
                          "typeString": "literal_string \"G63\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44caa441160f2659abeb8071bc942d6eef52d1573223916bcde9b624d75d793d",
                          "typeString": "literal_string \"GOD\""
                        }
                      ],
                      "expression": {
                        "id": 24602,
                        "name": "carMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24562,
                        "src": "785:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICarMarket_$24539",
                          "typeString": "contract ICarMarket"
                        }
                      },
                      "id": 24604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "795:11:17",
                      "memberName": "purchaseCar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24527,
                      "src": "785:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory) payable external"
                      }
                    },
                    "id": 24608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:44:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24609,
                  "nodeType": "ExpressionStatement",
                  "src": "785:44:17"
                }
              ]
            },
            "functionSelector": "ffb0f593",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receivedCarToken",
            "nameLocation": "673:16:17",
            "parameters": {
              "id": 24590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24589,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "698:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 24611,
                  "src": "690:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:17:17"
            },
            "returnParameters": {
              "id": 24591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:17"
            },
            "scope": 24612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Attack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24612
        ],
        "name": "Attack",
        "nameLocation": "397:6:17",
        "scope": 24768,
        "usedErrors": []
      },
      {
        "id": 24767,
        "nodeType": "ContractDefinition",
        "src": "840:1381:17",
        "nodes": [
          {
            "id": 24617,
            "nodeType": "VariableDeclaration",
            "src": "871:26:17",
            "constant": false,
            "functionSelector": "e74e6a39",
            "mutability": "mutable",
            "name": "carMarket",
            "nameLocation": "888:9:17",
            "scope": 24767,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CarMarket_$24408",
              "typeString": "contract CarMarket"
            },
            "typeName": {
              "id": 24616,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24615,
                "name": "CarMarket",
                "nameLocations": [
                  "871:9:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24408,
                "src": "871:9:17"
              },
              "referencedDeclaration": 24408,
              "src": "871:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CarMarket_$24408",
                "typeString": "contract CarMarket"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24620,
            "nodeType": "VariableDeclaration",
            "src": "903:24:17",
            "constant": false,
            "functionSelector": "d530bf33",
            "mutability": "mutable",
            "name": "carToken",
            "nameLocation": "919:8:17",
            "scope": 24767,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CarToken_$24514",
              "typeString": "contract CarToken"
            },
            "typeName": {
              "id": 24619,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24618,
                "name": "CarToken",
                "nameLocations": [
                  "903:8:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24514,
                "src": "903:8:17"
              },
              "referencedDeclaration": 24514,
              "src": "903:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CarToken_$24514",
                "typeString": "contract CarToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24623,
            "nodeType": "VariableDeclaration",
            "src": "933:28:17",
            "constant": false,
            "functionSelector": "ba563cea",
            "mutability": "mutable",
            "name": "carFactory",
            "nameLocation": "951:10:17",
            "scope": 24767,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CarFactory_$24180",
              "typeString": "contract CarFactory"
            },
            "typeName": {
              "id": 24622,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24621,
                "name": "CarFactory",
                "nameLocations": [
                  "933:10:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24180,
                "src": "933:10:17"
              },
              "referencedDeclaration": 24180,
              "src": "933:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CarFactory_$24180",
                "typeString": "contract CarFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24626,
            "nodeType": "VariableDeclaration",
            "src": "967:20:17",
            "constant": false,
            "functionSelector": "9e5faafc",
            "mutability": "mutable",
            "name": "attack",
            "nameLocation": "981:6:17",
            "scope": 24767,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Attack_$24612",
              "typeString": "contract Attack"
            },
            "typeName": {
              "id": 24625,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24624,
                "name": "Attack",
                "nameLocations": [
                  "967:6:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24612,
                "src": "967:6:17"
              },
              "referencedDeclaration": 24612,
              "src": "967:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Attack_$24612",
                "typeString": "contract Attack"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24687,
            "nodeType": "FunctionDefinition",
            "src": "994:515:17",
            "body": {
              "id": 24686,
              "nodeType": "Block",
              "src": "1018:491:17",
              "statements": [
                {
                  "expression": {
                    "id": 24634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24629,
                      "name": "carToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24620,
                      "src": "1117:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CarToken_$24514",
                        "typeString": "contract CarToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1128:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CarToken_$24514_$",
                          "typeString": "function () returns (contract CarToken)"
                        },
                        "typeName": {
                          "id": 24631,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24630,
                            "name": "CarToken",
                            "nameLocations": [
                              "1132:8:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24514,
                            "src": "1132:8:17"
                          },
                          "referencedDeclaration": 24514,
                          "src": "1132:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CarToken_$24514",
                            "typeString": "contract CarToken"
                          }
                        }
                      },
                      "id": 24633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1128:14:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CarToken_$24514",
                        "typeString": "contract CarToken"
                      }
                    },
                    "src": "1117:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CarToken_$24514",
                      "typeString": "contract CarToken"
                    }
                  },
                  "id": 24635,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:25:17"
                },
                {
                  "expression": {
                    "id": 24645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24636,
                      "name": "carMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24617,
                      "src": "1152:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CarMarket_$24408",
                        "typeString": "contract CarMarket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24642,
                              "name": "carToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24620,
                              "src": "1186:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarToken_$24514",
                                "typeString": "contract CarToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarToken_$24514",
                                "typeString": "contract CarToken"
                              }
                            ],
                            "id": 24641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1178:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24640,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1178:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1178:17:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1164:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_CarMarket_$24408_$",
                          "typeString": "function (address) returns (contract CarMarket)"
                        },
                        "typeName": {
                          "id": 24638,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24637,
                            "name": "CarMarket",
                            "nameLocations": [
                              "1168:9:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24408,
                            "src": "1168:9:17"
                          },
                          "referencedDeclaration": 24408,
                          "src": "1168:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CarMarket_$24408",
                            "typeString": "contract CarMarket"
                          }
                        }
                      },
                      "id": 24644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1164:32:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CarMarket_$24408",
                        "typeString": "contract CarMarket"
                      }
                    },
                    "src": "1152:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CarMarket_$24408",
                      "typeString": "contract CarMarket"
                    }
                  },
                  "id": 24646,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:44:17"
                },
                {
                  "expression": {
                    "id": 24660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24647,
                      "name": "carFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24623,
                      "src": "1206:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CarFactory_$24180",
                        "typeString": "contract CarFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24653,
                              "name": "carMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24617,
                              "src": "1242:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarMarket_$24408",
                                "typeString": "contract CarMarket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarMarket_$24408",
                                "typeString": "contract CarMarket"
                              }
                            ],
                            "id": 24652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1234:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24651,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1234:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1234:18:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 24657,
                              "name": "carToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24620,
                              "src": "1262:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarToken_$24514",
                                "typeString": "contract CarToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarToken_$24514",
                                "typeString": "contract CarToken"
                              }
                            ],
                            "id": 24656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1254:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24655,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1254:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1254:17:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1219:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_CarFactory_$24180_$",
                          "typeString": "function (address,address) returns (contract CarFactory)"
                        },
                        "typeName": {
                          "id": 24649,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24648,
                            "name": "CarFactory",
                            "nameLocations": [
                              "1223:10:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24180,
                            "src": "1223:10:17"
                          },
                          "referencedDeclaration": 24180,
                          "src": "1223:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CarFactory_$24180",
                            "typeString": "contract CarFactory"
                          }
                        }
                      },
                      "id": 24659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1219:53:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CarFactory_$24180",
                        "typeString": "contract CarFactory"
                      }
                    },
                    "src": "1206:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CarFactory_$24180",
                      "typeString": "contract CarFactory"
                    }
                  },
                  "id": 24661,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:66:17"
                },
                {
                  "expression": {
                    "id": 24675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24662,
                      "name": "attack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24626,
                      "src": "1283:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attack_$24612",
                        "typeString": "contract Attack"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 24668,
                              "name": "carMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24617,
                              "src": "1311:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarMarket_$24408",
                                "typeString": "contract CarMarket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarMarket_$24408",
                                "typeString": "contract CarMarket"
                              }
                            ],
                            "id": 24667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1303:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24666,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1303:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1303:18:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 24672,
                              "name": "carToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24620,
                              "src": "1331:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarToken_$24514",
                                "typeString": "contract CarToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarToken_$24514",
                                "typeString": "contract CarToken"
                              }
                            ],
                            "id": 24671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1323:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24670,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1323:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1323:17:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1292:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_Attack_$24612_$",
                          "typeString": "function (address,address) returns (contract Attack)"
                        },
                        "typeName": {
                          "id": 24664,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24663,
                            "name": "Attack",
                            "nameLocations": [
                              "1296:6:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24612,
                            "src": "1296:6:17"
                          },
                          "referencedDeclaration": 24612,
                          "src": "1296:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Attack_$24612",
                            "typeString": "contract Attack"
                          }
                        }
                      },
                      "id": 24674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1292:49:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attack_$24612",
                        "typeString": "contract Attack"
                      }
                    },
                    "src": "1283:58:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Attack_$24612",
                      "typeString": "contract Attack"
                    }
                  },
                  "id": 24676,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:58:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24682,
                            "name": "carFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24623,
                            "src": "1384:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarFactory_$24180",
                              "typeString": "contract CarFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarFactory_$24180",
                              "typeString": "contract CarFactory"
                            }
                          ],
                          "id": 24681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1376:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24680,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1376:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1376:19:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24677,
                        "name": "carMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24617,
                        "src": "1352:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarMarket_$24408",
                          "typeString": "contract CarMarket"
                        }
                      },
                      "id": 24679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1362:13:17",
                      "memberName": "setCarFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24243,
                      "src": "1352:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:44:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24685,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:44:17"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1003:5:17",
            "parameters": {
              "id": 24627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:2:17"
            },
            "returnParameters": {
              "id": 24628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1018:0:17"
            },
            "scope": 24767,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24766,
            "nodeType": "FunctionDefinition",
            "src": "1515:704:17",
            "body": {
              "id": 24765,
              "nodeType": "Block",
              "src": "1544:675:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24695,
                            "name": "carMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24617,
                            "src": "1587:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarMarket_$24408",
                              "typeString": "contract CarMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarMarket_$24408",
                              "typeString": "contract CarMarket"
                            }
                          ],
                          "id": 24694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1579:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24693,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1579:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1579:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 24697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1599:13:17",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24690,
                        "name": "carToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24620,
                        "src": "1554:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarToken_$24514",
                          "typeString": "contract CarToken"
                        }
                      },
                      "id": 24692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1563:15:17",
                      "memberName": "priviledgedMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24513,
                      "src": "1554:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:59:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24699,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:59:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24705,
                            "name": "carFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24623,
                            "src": "1656:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarFactory_$24180",
                              "typeString": "contract CarFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarFactory_$24180",
                              "typeString": "contract CarFactory"
                            }
                          ],
                          "id": 24704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1648:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1648:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1648:19:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 24707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:13:17",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24700,
                        "name": "carToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24620,
                        "src": "1623:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarToken_$24514",
                          "typeString": "contract CarToken"
                        }
                      },
                      "id": 24702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1632:15:17",
                      "memberName": "priviledgedMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24513,
                      "src": "1623:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:60:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24709,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:60:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24715,
                            "name": "attack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24626,
                            "src": "1749:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Attack_$24612",
                              "typeString": "contract Attack"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Attack_$24612",
                              "typeString": "contract Attack"
                            }
                          ],
                          "id": 24714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1741:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1741:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:15:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24710,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1727:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1730:10:17",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "1727:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24718,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:30:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 24719,
                        "name": "carToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24620,
                        "src": "1767:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarToken_$24514",
                          "typeString": "contract CarToken"
                        }
                      },
                      "id": 24721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1776:4:17",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24479,
                      "src": "1767:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 24722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24723,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24729,
                            "name": "carMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24617,
                            "src": "1853:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarMarket_$24408",
                              "typeString": "contract CarMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarMarket_$24408",
                              "typeString": "contract CarMarket"
                            }
                          ],
                          "id": 24728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1845:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1845:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1845:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1865:7:17",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 24724,
                        "name": "carToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24620,
                        "src": "1828:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarToken_$24514",
                          "typeString": "contract CarToken"
                        }
                      },
                      "id": 24726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1837:7:17",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23506,
                      "src": "1828:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1828:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24733,
                  "nodeType": "ExpressionStatement",
                  "src": "1828:45:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "676f6c64",
                        "id": 24737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1950:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a827b848d338b362a9edc3f5d9143a504828207dd0d1d6515b2b3968154d59b0",
                          "typeString": "literal_string \"gold\""
                        },
                        "value": "gold"
                      },
                      {
                        "hexValue": "533633",
                        "id": 24738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1958:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce6ec6a399977bdd73d64973b2ac1318394a25659fba7d010405aade99a46428",
                          "typeString": "literal_string \"S63\""
                        },
                        "value": "S63"
                      },
                      {
                        "hexValue": "4d415256334c",
                        "id": 24739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1965:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516d58d1fd70ba6df9b4c807fdefb6afd8126aae679ef16d5c3b7ab29ad176e3",
                          "typeString": "literal_string \"MARV3L\""
                        },
                        "value": "MARV3L"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a827b848d338b362a9edc3f5d9143a504828207dd0d1d6515b2b3968154d59b0",
                          "typeString": "literal_string \"gold\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce6ec6a399977bdd73d64973b2ac1318394a25659fba7d010405aade99a46428",
                          "typeString": "literal_string \"S63\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516d58d1fd70ba6df9b4c807fdefb6afd8126aae679ef16d5c3b7ab29ad176e3",
                          "typeString": "literal_string \"MARV3L\""
                        }
                      ],
                      "expression": {
                        "id": 24734,
                        "name": "carMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24617,
                        "src": "1928:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CarMarket_$24408",
                          "typeString": "contract CarMarket"
                        }
                      },
                      "id": 24736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1938:11:17",
                      "memberName": "purchaseCar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24320,
                      "src": "1928:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory) external"
                      }
                    },
                    "id": 24740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24741,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:46:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "666c6173684c6f616e2875696e7432353629",
                            "id": 24749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2104:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9ab603b938ad24e473966e81673697a570b75024267d13d5b5157c90d20f127a",
                              "typeString": "literal_string \"flashLoan(uint256)\""
                            },
                            "value": "flashLoan(uint256)"
                          },
                          {
                            "hexValue": "3130305f303030",
                            "id": 24750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2126:13:17",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            },
                            "value": "100_000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9ab603b938ad24e473966e81673697a570b75024267d13d5b5157c90d20f127a",
                              "typeString": "literal_string \"flashLoan(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 24747,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2080:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 24748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2084:19:17",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2080:23:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 24751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2080:60:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 24744,
                            "name": "carMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24617,
                            "src": "2051:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarMarket_$24408",
                              "typeString": "contract CarMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CarMarket_$24408",
                              "typeString": "contract CarMarket"
                            }
                          ],
                          "id": 24743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2043:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24742,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2043:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 24746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2062:4:17",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "2043:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 24752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:107:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 24753,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:107:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24759,
                                "name": "attack",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24626,
                                "src": "2200:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Attack_$24612",
                                  "typeString": "contract Attack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Attack_$24612",
                                  "typeString": "contract Attack"
                                }
                              ],
                              "id": 24758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2192:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24757,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2192:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2192:15:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 24755,
                            "name": "carMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24617,
                            "src": "2170:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CarMarket_$24408",
                              "typeString": "contract CarMarket"
                            }
                          },
                          "id": 24756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2180:11:17",
                          "memberName": "getCarCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24367,
                          "src": "2170:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2170:38:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 24762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2210:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 24754,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2161:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:51:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24764,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:51:17"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "1524:10:17",
            "parameters": {
              "id": 24688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:2:17"
            },
            "returnParameters": {
              "id": 24689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1544:0:17"
            },
            "scope": 24767,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24613,
              "name": "Test",
              "nameLocations": [
                "860:4:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "860:4:17"
            },
            "id": 24614,
            "nodeType": "InheritanceSpecifier",
            "src": "860:4:17"
          }
        ],
        "canonicalName": "CarTest",
        "contractDependencies": [
          24180,
          24408,
          24514,
          24612
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24767,
          4979,
          2049,
          1786
        ],
        "name": "CarTest",
        "nameLocation": "849:7:17",
        "scope": 24768,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 17
}
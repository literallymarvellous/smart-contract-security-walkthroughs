{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [
        {
          "internalType": "contract Attack",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vending",
      "outputs": [
        {
          "internalType": "contract VendingMachine",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b5061152b806100316000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063aacc04a21161005b578063aacc04a2146100ea578063ba414fa6146100fd578063f8ccbf4714610115578063fa7626d41461012857600080fd5b80630a9254e41461008d5780633a768463146100975780636f2db99c146100cf5780639e5faafc146100d7575b600080fd5b610095610135565b005b6100b2737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100956101e2565b6009546100b2906001600160a01b031681565b6008546100b2906001600160a01b031681565b610105610690565b60405190151581526020016100c6565b6000546101059062010000900460ff1681565b6000546101059060ff1681565b670de0b6b3a764000060405161014a906109f2565b6040518091039082f0905080158015610167573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051610193906109ff565b6001600160a01b039091168152602001604051809103906000f0801580156101bf573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60095460405163c88a5e6d60e01b81526001600160a01b0390911660048201526706f05b59d3b200006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561024957600080fd5b505af115801561025d573d6000803e3d6000fd5b50506009546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b031663d0e30db06706f05b59d3b200006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561032a57600080fd5b505af115801561033e573d6000803e3d6000fd5b50505050506103cb600860009054906101000a90046001600160a01b03166001600160a01b0316634c7389096040518163ffffffff1660e01b8152600401602060405180830381865afa158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd9190610a0c565b6706f05b59d3b200006107bb565b60085460405163979155fd60e01b8152600260048201526001600160a01b039091169063979155fd90602401600060405180830381600087803b15801561041157600080fd5b505af1158015610425573d6000803e3d6000fd5b505050506104b1600860009054906101000a90046001600160a01b03166001600160a01b0316634c7389096040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190610a0c565b670429d069189e00006107bb565b600854604080516352943e6b60e11b81529051610528926001600160a01b03169163a5287cd69160048083019260209291908290030181865afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190610a0c565b6107ce6107bb565b60085460095460405163583878f960e01b81526001600160a01b0391821660048201526105a592919091169063583878f990602401602060405180830381865afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e9190610a0c565b60026107bb565b600860009054906101000a90046001600160a01b03166001600160a01b031663d4e932926040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105f557600080fd5b505af1158015610609573d6000803e3d6000fd5b5050505061068e600860009054906101000a90046001600160a01b03166001600160a01b0316634c7389096040518163ffffffff1660e01b8152600401602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190610a0c565b60006107bb565b565b60008054610100900460ff16156106b05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107b65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161073e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610a55565b60408051601f198184030181529082905261075891610a79565b6000604051808303816000865af19150503d8060008114610795576040519150601f19603f3d011682016040523d82523d6000602084013e61079a565b606091505b50915050808060200190518101906107b29190610a8c565b9150505b919050565b8082146108e2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161082c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16108e26108e6565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109e15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526109809291602001610a55565b60408051601f198184030181529082905261099a91610a79565b6000604051808303816000865af19150503d80600081146109d7576040519150601f19603f3d011682016040523d82523d6000602084013e6109dc565b606091505b505050505b6000805461ff001916610100179055565b61090780610aaf83390190565b610140806113b683390190565b600060208284031215610a1e57600080fd5b5051919050565b6000815160005b81811015610a465760208185018101518683015201610a2c565b50600093019283525090919050565b6001600160e01b0319831681526000610a716004830184610a25565b949350505050565b6000610a858284610a25565b9392505050565b600060208284031215610a9e57600080fd5b81518015158114610a8557600080fdfe6080604052670de0b6b3a76400003410156100955760405162461bcd60e51b815260206004820152604660248201527f596f75206e6565642061206d696e696d756d206f662072657365727665206f6660448201527f2031206574686572206265666f7265206465706c6f79696e672074686520636f6064820152651b9d1c9858dd60d21b608482015260a40160405180910390fd5b600080546001600160a01b03191633178155346001553081526003602052604090206107d090556002805460ff19169055610832806100d56000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b14610179578063979155fd146101b1578063a5287cd6146101d1578063c8977157146101f3578063d0e30db014610220578063d4e932921461022857600080fd5b8063475c6eb9146100ac5780634c738909146100d6578063583878f9146101025780636f9fb98a1461012f57806372bb3867146101425780637aff266714610164575b600080fd5b3480156100b857600080fd5b506100c161023d565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b50336000908152600460205260409020545b6040519081526020016100cd565b34801561010e57600080fd5b506100f461011d3660046106e1565b60036020526000908152604090205481565b34801561013b57600080fd5b50476100f4565b34801561014e57600080fd5b5061016261015d36600461070a565b61027c565b005b34801561017057600080fd5b506100f46102cd565b34801561018557600080fd5b50600054610199906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b3480156101bd57600080fd5b506101626101cc36600461070a565b6102ff565b3480156101dd57600080fd5b50306000908152600360205260409020546100f4565b3480156101ff57600080fd5b506100f461020e3660046106e1565b60046020526000908152604090205481565b61016261049d565b34801561023457600080fd5b50610162610564565b600080546001600160a01b031633146102715760405162461bcd60e51b815260040161026890610723565b60405180910390fd5b5060025460ff161590565b6000546001600160a01b031633146102a65760405162461bcd60e51b815260040161026890610723565b30600090815260036020526040812080548392906102c590849061076e565b909155505050565b600080546001600160a01b031633146102f85760405162461bcd60e51b815260040161026890610723565b5060015490565b60025460ff16156103225760405162461bcd60e51b815260040161026890610787565b6103348167016345785d8a00006107d2565b3360009081526004602052604090205410156103aa5760405162461bcd60e51b815260206004820152602f60248201527f596f75206d75737420706179206174206c6561737420302e312065746865722060448201526e3832b9103832b0b73aba2a37b5b2b760891b6064820152608401610268565b306000908152600360205260409020548111156104245760405162461bcd60e51b815260206004820152603260248201527f4e6f7420656e6f756768207065616e75747320746f2066756c66696c6c20746860448201527119481c1d5c98da185cd9481c995c5d595cdd60721b6064820152608401610268565b6104368167016345785d8a00006107d2565b33600090815260046020526040812080549091906104559084906107e9565b909155505030600090815260036020526040812080548392906104799084906107e9565b909155505033600090815260036020526040812080548392906102c590849061076e565b60025460ff16156104c05760405162461bcd60e51b815260040161026890610787565b67016345785d8a000034101561053e5760405162461bcd60e51b815260206004820152603860248201527f596f75206d7573742068617665206174206c6561737420302e3120657468657260448201527f20746f20696e697469617465207472616e73616374696f6e00000000000000006064820152608401610268565b336000908152600460205260408120805434929061055d90849061076e565b9091555050565b60025460ff16156105875760405162461bcd60e51b815260040161026890610787565b3360009081526004602052604081205447916105a382846107e9565b9050600082116105ec5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610268565b604051600090339084908381818185875af1925050503d806000811461062e576040519150601f19603f3d011682016040523d82523d6000602084013e610633565b606091505b505090508061067b5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321032ba3432b960611b6044820152606401610268565b3360009081526004602052604081205547828110801561069f575061069f336106b9565b156106b2576002805460ff191660011790555b5050505050565b6000813b63ffffffff81161515806106da57506001600160a01b0383163214155b9392505050565b6000602082840312156106f357600080fd5b81356001600160a01b03811681146106da57600080fd5b60006020828403121561071c57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561078157610781610758565b92915050565b6020808252602b908201527f536f7272792c20746869732070726f647563742070726f6a656374206861732060408201526a1899595b881a1858dad95960aa1b606082015260800190565b808202811582820484141761078157610781610758565b818103818111156107815761078161075856fea2646970667358221220b5fe1698cc74599e894c88364c55db9347e73323b3f4f7046336a16bd95a18e864736f6c63430008110033608060405234801561001057600080fd5b5060405161014038038061014083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b60ae806100926000396000f3fe6080604052366073576000546001600160a01b031631156071576000805460408051636a74994960e11b815290516001600160a01b039092169263d4e932929260048084019382900301818387803b158015605957600080fd5b505af1158015606c573d6000803e3d6000fd5b505050505b005b600080fdfea264697066735822122031902ca0e8d2140c166312188b2bbe5493bb7d2978426cc2f259f2048852171e64736f6c63430008110033a2646970667358221220fa63dc3b1b2806b287a6622054eaa1ee8a01b529e245cccfcd87aba4b5c3d65c64736f6c63430008110033",
    "sourceMap": "454:729:90:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:2;;;;;454:729:90;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063aacc04a21161005b578063aacc04a2146100ea578063ba414fa6146100fd578063f8ccbf4714610115578063fa7626d41461012857600080fd5b80630a9254e41461008d5780633a768463146100975780636f2db99c146100cf5780639e5faafc146100d7575b600080fd5b610095610135565b005b6100b2737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100956101e2565b6009546100b2906001600160a01b031681565b6008546100b2906001600160a01b031681565b610105610690565b60405190151581526020016100c6565b6000546101059062010000900460ff1681565b6000546101059060ff1681565b670de0b6b3a764000060405161014a906109f2565b6040518091039082f0905080158015610167573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051610193906109ff565b6001600160a01b039091168152602001604051809103906000f0801580156101bf573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60095460405163c88a5e6d60e01b81526001600160a01b0390911660048201526706f05b59d3b200006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561024957600080fd5b505af115801561025d573d6000803e3d6000fd5b50506009546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b031663d0e30db06706f05b59d3b200006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561032a57600080fd5b505af115801561033e573d6000803e3d6000fd5b50505050506103cb600860009054906101000a90046001600160a01b03166001600160a01b0316634c7389096040518163ffffffff1660e01b8152600401602060405180830381865afa158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd9190610a0c565b6706f05b59d3b200006107bb565b60085460405163979155fd60e01b8152600260048201526001600160a01b039091169063979155fd90602401600060405180830381600087803b15801561041157600080fd5b505af1158015610425573d6000803e3d6000fd5b505050506104b1600860009054906101000a90046001600160a01b03166001600160a01b0316634c7389096040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190610a0c565b670429d069189e00006107bb565b600854604080516352943e6b60e11b81529051610528926001600160a01b03169163a5287cd69160048083019260209291908290030181865afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190610a0c565b6107ce6107bb565b60085460095460405163583878f960e01b81526001600160a01b0391821660048201526105a592919091169063583878f990602401602060405180830381865afa15801561057a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059e9190610a0c565b60026107bb565b600860009054906101000a90046001600160a01b03166001600160a01b031663d4e932926040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105f557600080fd5b505af1158015610609573d6000803e3d6000fd5b5050505061068e600860009054906101000a90046001600160a01b03166001600160a01b0316634c7389096040518163ffffffff1660e01b8152600401602060405180830381865afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190610a0c565b60006107bb565b565b60008054610100900460ff16156106b05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107b65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161073e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610a55565b60408051601f198184030181529082905261075891610a79565b6000604051808303816000865af19150503d8060008114610795576040519150601f19603f3d011682016040523d82523d6000602084013e61079a565b606091505b50915050808060200190518101906107b29190610a8c565b9150505b919050565b8082146108e2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161082c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16108e26108e6565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109e15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526109809291602001610a55565b60408051601f198184030181529082905261099a91610a79565b6000604051808303816000865af19150503d80600081146109d7576040519150601f19603f3d011682016040523d82523d6000602084013e6109dc565b606091505b505050505b6000805461ff001916610100179055565b61090780610aaf83390190565b610140806113b683390190565b600060208284031215610a1e57600080fd5b5051919050565b6000815160005b81811015610a465760208185018101518683015201610a2c565b50600093019283525090919050565b6001600160e01b0319831681526000610a716004830184610a25565b949350505050565b6000610a858284610a25565b9392505050565b600060208284031215610a9e57600080fd5b81518015158114610a8557600080fdfe6080604052670de0b6b3a76400003410156100955760405162461bcd60e51b815260206004820152604660248201527f596f75206e6565642061206d696e696d756d206f662072657365727665206f6660448201527f2031206574686572206265666f7265206465706c6f79696e672074686520636f6064820152651b9d1c9858dd60d21b608482015260a40160405180910390fd5b600080546001600160a01b03191633178155346001553081526003602052604090206107d090556002805460ff19169055610832806100d56000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b14610179578063979155fd146101b1578063a5287cd6146101d1578063c8977157146101f3578063d0e30db014610220578063d4e932921461022857600080fd5b8063475c6eb9146100ac5780634c738909146100d6578063583878f9146101025780636f9fb98a1461012f57806372bb3867146101425780637aff266714610164575b600080fd5b3480156100b857600080fd5b506100c161023d565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b50336000908152600460205260409020545b6040519081526020016100cd565b34801561010e57600080fd5b506100f461011d3660046106e1565b60036020526000908152604090205481565b34801561013b57600080fd5b50476100f4565b34801561014e57600080fd5b5061016261015d36600461070a565b61027c565b005b34801561017057600080fd5b506100f46102cd565b34801561018557600080fd5b50600054610199906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b3480156101bd57600080fd5b506101626101cc36600461070a565b6102ff565b3480156101dd57600080fd5b50306000908152600360205260409020546100f4565b3480156101ff57600080fd5b506100f461020e3660046106e1565b60046020526000908152604090205481565b61016261049d565b34801561023457600080fd5b50610162610564565b600080546001600160a01b031633146102715760405162461bcd60e51b815260040161026890610723565b60405180910390fd5b5060025460ff161590565b6000546001600160a01b031633146102a65760405162461bcd60e51b815260040161026890610723565b30600090815260036020526040812080548392906102c590849061076e565b909155505050565b600080546001600160a01b031633146102f85760405162461bcd60e51b815260040161026890610723565b5060015490565b60025460ff16156103225760405162461bcd60e51b815260040161026890610787565b6103348167016345785d8a00006107d2565b3360009081526004602052604090205410156103aa5760405162461bcd60e51b815260206004820152602f60248201527f596f75206d75737420706179206174206c6561737420302e312065746865722060448201526e3832b9103832b0b73aba2a37b5b2b760891b6064820152608401610268565b306000908152600360205260409020548111156104245760405162461bcd60e51b815260206004820152603260248201527f4e6f7420656e6f756768207065616e75747320746f2066756c66696c6c20746860448201527119481c1d5c98da185cd9481c995c5d595cdd60721b6064820152608401610268565b6104368167016345785d8a00006107d2565b33600090815260046020526040812080549091906104559084906107e9565b909155505030600090815260036020526040812080548392906104799084906107e9565b909155505033600090815260036020526040812080548392906102c590849061076e565b60025460ff16156104c05760405162461bcd60e51b815260040161026890610787565b67016345785d8a000034101561053e5760405162461bcd60e51b815260206004820152603860248201527f596f75206d7573742068617665206174206c6561737420302e3120657468657260448201527f20746f20696e697469617465207472616e73616374696f6e00000000000000006064820152608401610268565b336000908152600460205260408120805434929061055d90849061076e565b9091555050565b60025460ff16156105875760405162461bcd60e51b815260040161026890610787565b3360009081526004602052604081205447916105a382846107e9565b9050600082116105ec5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610268565b604051600090339084908381818185875af1925050503d806000811461062e576040519150601f19603f3d011682016040523d82523d6000602084013e610633565b606091505b505090508061067b5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321032ba3432b960611b6044820152606401610268565b3360009081526004602052604081205547828110801561069f575061069f336106b9565b156106b2576002805460ff191660011790555b5050505050565b6000813b63ffffffff81161515806106da57506001600160a01b0383163214155b9392505050565b6000602082840312156106f357600080fd5b81356001600160a01b03811681146106da57600080fd5b60006020828403121561071c57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561078157610781610758565b92915050565b6020808252602b908201527f536f7272792c20746869732070726f647563742070726f6a656374206861732060408201526a1899595b881a1858dad95960aa1b606082015260800190565b808202811582820484141761078157610781610758565b818103818111156107815761078161075856fea2646970667358221220b5fe1698cc74599e894c88364c55db9347e73323b3f4f7046336a16bd95a18e864736f6c63430008110033608060405234801561001057600080fd5b5060405161014038038061014083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b60ae806100926000396000f3fe6080604052366073576000546001600160a01b031631156071576000805460408051636a74994960e11b815290516001600160a01b039092169263d4e932929260048084019382900301818387803b158015605957600080fd5b505af1158015606c573d6000803e3d6000fd5b505050505b005b600080fdfea264697066735822122031902ca0e8d2140c166312188b2bbe5493bb7d2978426cc2f259f2048852171e64736f6c63430008110033a2646970667358221220fa63dc3b1b2806b287a6622054eaa1ee8a01b529e245cccfcd87aba4b5c3d65c64736f6c63430008110033",
    "sourceMap": "454:729:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:134;;;:::i;:::-;;321:38:2;;250:64;321:38;;;;;-1:-1:-1;;;;;190:32:94;;;172:51;;160:2;145:18;321:38:2;;;;;;;;691:490:90;;;:::i;524:20::-;;;;;-1:-1:-1;;;;;524:20:90;;;489:29;;;;;-1:-1:-1;;;;;489:29:90;;;1819:584:0;;;:::i;:::-;;;863:14:94;;856:22;838:41;;826:2;811:18;1819:584:0;698:187:94;170:28:2;;;;;;;;;;;;1572:26:0;;;;;;;;;551:134:90;621:7;595:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;585:7:90;:46;;-1:-1:-1;;;;;;585:46:90;-1:-1:-1;;;;;585:46:90;;;;;;;;;650:28;;;;;:::i;:::-;-1:-1:-1;;;;;190:32:94;;;172:51;;160:2;145:18;650:28:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;641:6:90;:37;;-1:-1:-1;;;;;;641:37:90;-1:-1:-1;;;;;641:37:90;;;;;;;;;;551:134::o;691:490::-;746:6;;730:35;;-1:-1:-1;;;730:35:90;;-1:-1:-1;;;;;746:6:90;;;730:35;;;1297:51:94;755:9:90;1364:18:94;;;1357:34;250:64:2;;730:7:90;;1270:18:94;;730:35:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;797:6:90;;775:30;;-1:-1:-1;;;775:30:90;;-1:-1:-1;;;;;797:6:90;;;775:30;;;172:51:94;250:64:2;;-1:-1:-1;775:13:90;;-1:-1:-1;145:18:94;;775:30:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;816:7;;;;;;;;;-1:-1:-1;;;;;816:7:90;-1:-1:-1;;;;;816:15:90;;839:9;816:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:43;871:7;;;;;;;;;-1:-1:-1;;;;;871:7:90;-1:-1:-1;;;;;871:20:90;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;895:9;862:8;:43::i;:::-;916:7;;:21;;-1:-1:-1;;;916:21:90;;935:1;916:21;;;1745:25:94;-1:-1:-1;;;;;916:7:90;;;;:18;;1718::94;;916:21:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:43;956:7;;;;;;;;;-1:-1:-1;;;;;956:7:90;-1:-1:-1;;;;;956:20:90;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;980:9;947:8;:43::i;:::-;1009:7;;:27;;;-1:-1:-1;;;1009:27:90;;;;1000:43;;-1:-1:-1;;;;;1009:7:90;;:25;;:27;;;;;;;;;;;;;;:7;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1038:4;1000:8;:43::i;:::-;1062:7;;1086:6;;1062:32;;-1:-1:-1;;;1062:32:90;;-1:-1:-1;;;;;1086:6:90;;;1062:32;;;172:51:94;1053:45:90;;1062:7;;;;;:15;;145:18:94;;1062:32:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1096:1;1053:8;:45::i;:::-;1109:7;;;;;;;;;-1:-1:-1;;;;;1109:7:90;-1:-1:-1;;;;;1109:18:90;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1139:35;1148:7;;;;;;;;;-1:-1:-1;;;;;1148:7:90;-1:-1:-1;;;;;1148:20:90;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1172:1;1139:8;:35::i;:::-;691:490::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1297:51:94;;;-1:-1:-1;;;1364:18:94;;;1357:34;2196:43:0;;;;;;;;;1270:18:94;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;3348:2:94;3330:21;;;3387:2;3367:18;;;3360:30;3426:34;3421:2;3406:18;;3399:62;-1:-1:-1;;;3492:2:94;3477:18;;3470:32;3534:3;3519:19;;3146:398;5286:41:0;;;;;;;;5346:31;;;3761:21:94;;;3818:2;3798:18;;;3791:30;-1:-1:-1;;;3852:2:94;3837:18;;3830:40;3937:4;3922:20;;3915:36;;;5346:31:0;;;;;;;3902:3:94;5346:31:0;;;5396;;;4174:21:94;;;4231:2;4211:18;;;4204:30;-1:-1:-1;;;4265:2:94;4250:18;;4243:40;4350:4;4335:20;;4328:36;;;5396:31:0;;;;;;;4315:3:94;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;4577:51:94;;;-1:-1:-1;;;4644:18:94;;;4637:34;;;;2705:4:0;4687:18:94;;;4680:34;2482:11:0;;1671:64;2579:43;;4550:18:94;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1402:184:94:-;1472:6;1525:2;1513:9;1504:7;1500:23;1496:32;1493:52;;;1541:1;1538;1531:12;1493:52;-1:-1:-1;1564:16:94;;1402:184;-1:-1:-1;1402:184:94:o;2060:322::-;2101:3;2139:5;2133:12;2163:1;2173:128;2187:6;2184:1;2181:13;2173:128;;;2284:4;2269:13;;;2265:24;;2259:31;2246:11;;;2239:52;2202:12;2173:128;;;-1:-1:-1;2356:1:94;2320:16;;2345:13;;;-1:-1:-1;2320:16:94;;2060:322;-1:-1:-1;2060:322:94:o;2387:278::-;-1:-1:-1;;;;;;2572:33:94;;2560:46;;2542:3;2622:37;2656:1;2647:11;;2639:6;2622:37;:::i;:::-;2615:44;2387:278;-1:-1:-1;;;;2387:278:94:o;2670:189::-;2799:3;2824:29;2849:3;2841:6;2824:29;:::i;:::-;2817:36;2670:189;-1:-1:-1;;;2670:189:94:o;2864:277::-;2931:6;2984:2;2972:9;2963:7;2959:23;2955:32;2952:52;;;3000:1;2997;2990:12;2952:52;3032:9;3026:16;3085:5;3078:13;3071:21;3064:5;3061:32;3051:60;;3107:1;3104;3097:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "attack()": "9e5faafc",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAttack()": "6f2db99c",
    "vending()": "aacc04a2",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[{\"internalType\":\"contract Attack\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vending\",\"outputs\":[{\"internalType\":\"contract VendingMachine\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethernautDao/VendingMachine.t.sol\":\"VendingTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"src/ethernautDao/level4/VendingMachine.sol\":{\"keccak256\":\"0xf40394acdd0b2adc7f2ecbd964bca9cc27d346a05b22a4d7a8d52cfacda08503\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa085d2ca5ca21f863b69bbf48619d4b83cbdb72c2c436f41c86fbab72152a75\",\"dweb:/ipfs/QmQSkDY43X6AHc13BXEJEiCSdJkVBhVHfJNiae3cba9vW3\"]},\"test/ethernautDao/VendingMachine.t.sol\":{\"keccak256\":\"0x5e723bba0c82c93e47d6ae2c81381beea51c83ef1ff70128e063136548ddd8f7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e184dd7d8d25dd659e86a67f1e6bae471bf34fc8c5434538db6cebcbdb386f49\",\"dweb:/ipfs/QmNrP5GnB5CeaSf99D6yTzpYEmwHQXL3CStpPiAUDZLe6N\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "attack",
          "outputs": [
            {
              "internalType": "contract Attack",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAttack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vending",
          "outputs": [
            {
              "internalType": "contract VendingMachine",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ethernautDao/VendingMachine.t.sol": "VendingTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "src/ethernautDao/level4/VendingMachine.sol": {
        "keccak256": "0xf40394acdd0b2adc7f2ecbd964bca9cc27d346a05b22a4d7a8d52cfacda08503",
        "urls": [
          "bzz-raw://fa085d2ca5ca21f863b69bbf48619d4b83cbdb72c2c436f41c86fbab72152a75",
          "dweb:/ipfs/QmQSkDY43X6AHc13BXEJEiCSdJkVBhVHfJNiae3cba9vW3"
        ],
        "license": "MIT"
      },
      "test/ethernautDao/VendingMachine.t.sol": {
        "keccak256": "0x5e723bba0c82c93e47d6ae2c81381beea51c83ef1ff70128e063136548ddd8f7",
        "urls": [
          "bzz-raw://e184dd7d8d25dd659e86a67f1e6bae471bf34fc8c5434538db6cebcbdb386f49",
          "dweb:/ipfs/QmNrP5GnB5CeaSf99D6yTzpYEmwHQXL3CStpPiAUDZLe6N"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ethernautDao/VendingMachine.t.sol",
    "id": 21897,
    "exportedSymbols": {
      "Attack": [
        21783
      ],
      "DSTest": [
        44831
      ],
      "Script": [
        22576
      ],
      "StdStorage": [
        25244
      ],
      "Test": [
        25146
      ],
      "VendingMachine": [
        18521
      ],
      "VendingTest": [
        21896
      ],
      "Vm": [
        45611
      ],
      "console": [
        34980
      ],
      "console2": [
        43044
      ],
      "stdError": [
        25216
      ],
      "stdJson": [
        26916
      ],
      "stdMath": [
        26485
      ],
      "stdStorage": [
        26346
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1145:90",
    "nodes": [
      {
        "id": 21749,
        "nodeType": "PragmaDirective",
        "src": "39:24:90",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21750,
        "nodeType": "ImportDirective",
        "src": "65:28:90",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21897,
        "sourceUnit": 26486,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21751,
        "nodeType": "ImportDirective",
        "src": "94:58:90",
        "nodes": [],
        "absolutePath": "src/ethernautDao/level4/VendingMachine.sol",
        "file": "../../src/ethernautDao/level4/VendingMachine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21897,
        "sourceUnit": 18522,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21783,
        "nodeType": "ContractDefinition",
        "src": "154:298:90",
        "nodes": [
          {
            "id": 21753,
            "nodeType": "VariableDeclaration",
            "src": "176:14:90",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "victim",
            "nameLocation": "184:6:90",
            "scope": 21783,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21752,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "176:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21763,
            "nodeType": "FunctionDefinition",
            "src": "197:62:90",
            "nodes": [],
            "body": {
              "id": 21762,
              "nodeType": "Block",
              "src": "226:33:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21758,
                      "name": "victim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21753,
                      "src": "236:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21759,
                      "name": "_victim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21755,
                      "src": "245:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "236:16:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21761,
                  "nodeType": "ExpressionStatement",
                  "src": "236:16:90"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21755,
                  "mutability": "mutable",
                  "name": "_victim",
                  "nameLocation": "217:7:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 21763,
                  "src": "209:15:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "208:17:90"
            },
            "returnParameters": {
              "id": 21757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:90"
            },
            "scope": 21783,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21782,
            "nodeType": "FunctionDefinition",
            "src": "314:136:90",
            "nodes": [],
            "body": {
              "id": 21781,
              "nodeType": "Block",
              "src": "341:109:90",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 21768,
                            "name": "victim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21753,
                            "src": "363:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "355:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "355:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "355:15:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 21770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "371:7:90",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "355:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 21771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "381:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "355:27:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21780,
                  "nodeType": "IfStatement",
                  "src": "351:93:90",
                  "trueBody": {
                    "id": 21779,
                    "nodeType": "Block",
                    "src": "384:60:90",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 21774,
                                  "name": "victim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21753,
                                  "src": "413:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 21773,
                                "name": "VendingMachine",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18521,
                                "src": "398:14:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_VendingMachine_$18521_$",
                                  "typeString": "type(contract VendingMachine)"
                                }
                              },
                              "id": 21775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "398:22:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VendingMachine_$18521",
                                "typeString": "contract VendingMachine"
                              }
                            },
                            "id": 21776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "421:10:90",
                            "memberName": "withdrawal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18490,
                            "src": "398:33:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 21777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "398:35:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21778,
                        "nodeType": "ExpressionStatement",
                        "src": "398:35:90"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:2:90"
            },
            "returnParameters": {
              "id": 21765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:90"
            },
            "scope": 21783,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Attack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21783
        ],
        "name": "Attack",
        "nameLocation": "163:6:90",
        "scope": 21897,
        "usedErrors": []
      },
      {
        "id": 21896,
        "nodeType": "ContractDefinition",
        "src": "454:729:90",
        "nodes": [
          {
            "id": 21788,
            "nodeType": "VariableDeclaration",
            "src": "489:29:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "aacc04a2",
            "mutability": "mutable",
            "name": "vending",
            "nameLocation": "511:7:90",
            "scope": 21896,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VendingMachine_$18521",
              "typeString": "contract VendingMachine"
            },
            "typeName": {
              "id": 21787,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21786,
                "name": "VendingMachine",
                "nameLocations": [
                  "489:14:90"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18521,
                "src": "489:14:90"
              },
              "referencedDeclaration": 18521,
              "src": "489:14:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VendingMachine_$18521",
                "typeString": "contract VendingMachine"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21791,
            "nodeType": "VariableDeclaration",
            "src": "524:20:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "9e5faafc",
            "mutability": "mutable",
            "name": "attack",
            "nameLocation": "538:6:90",
            "scope": 21896,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Attack_$21783",
              "typeString": "contract Attack"
            },
            "typeName": {
              "id": 21790,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21789,
                "name": "Attack",
                "nameLocations": [
                  "524:6:90"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21783,
                "src": "524:6:90"
              },
              "referencedDeclaration": 21783,
              "src": "524:6:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Attack_$21783",
                "typeString": "contract Attack"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21815,
            "nodeType": "FunctionDefinition",
            "src": "551:134:90",
            "nodes": [],
            "body": {
              "id": 21814,
              "nodeType": "Block",
              "src": "575:110:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21794,
                      "name": "vending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21788,
                      "src": "585:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VendingMachine_$18521",
                        "typeString": "contract VendingMachine"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "595:18:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_payable$__$returns$_t_contract$_VendingMachine_$18521_$",
                            "typeString": "function () payable returns (contract VendingMachine)"
                          },
                          "typeName": {
                            "id": 21796,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 21795,
                              "name": "VendingMachine",
                              "nameLocations": [
                                "599:14:90"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 18521,
                              "src": "599:14:90"
                            },
                            "referencedDeclaration": 18521,
                            "src": "599:14:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$18521",
                              "typeString": "contract VendingMachine"
                            }
                          }
                        },
                        "id": 21799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "hexValue": "31",
                            "id": 21798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "621:7:90",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "src": "595:34:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$__$returns$_t_contract$_VendingMachine_$18521_$value",
                          "typeString": "function () payable returns (contract VendingMachine)"
                        }
                      },
                      "id": 21800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "595:36:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VendingMachine_$18521",
                        "typeString": "contract VendingMachine"
                      }
                    },
                    "src": "585:46:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VendingMachine_$18521",
                      "typeString": "contract VendingMachine"
                    }
                  },
                  "id": 21802,
                  "nodeType": "ExpressionStatement",
                  "src": "585:46:90"
                },
                {
                  "expression": {
                    "id": 21812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21803,
                      "name": "attack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21791,
                      "src": "641:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attack_$21783",
                        "typeString": "contract Attack"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21809,
                              "name": "vending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21788,
                              "src": "669:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VendingMachine_$18521",
                                "typeString": "contract VendingMachine"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VendingMachine_$18521",
                                "typeString": "contract VendingMachine"
                              }
                            ],
                            "id": 21808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "661:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21807,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "661:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:16:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "650:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Attack_$21783_$",
                          "typeString": "function (address) returns (contract Attack)"
                        },
                        "typeName": {
                          "id": 21805,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21804,
                            "name": "Attack",
                            "nameLocations": [
                              "654:6:90"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21783,
                            "src": "654:6:90"
                          },
                          "referencedDeclaration": 21783,
                          "src": "654:6:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Attack_$21783",
                            "typeString": "contract Attack"
                          }
                        }
                      },
                      "id": 21811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "650:28:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Attack_$21783",
                        "typeString": "contract Attack"
                      }
                    },
                    "src": "641:37:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Attack_$21783",
                      "typeString": "contract Attack"
                    }
                  },
                  "id": 21813,
                  "nodeType": "ExpressionStatement",
                  "src": "641:37:90"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "560:5:90",
            "parameters": {
              "id": 21792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:2:90"
            },
            "returnParameters": {
              "id": 21793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:90"
            },
            "scope": 21896,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21895,
            "nodeType": "FunctionDefinition",
            "src": "691:490:90",
            "nodes": [],
            "body": {
              "id": 21894,
              "nodeType": "Block",
              "src": "720:461:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21823,
                            "name": "attack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21791,
                            "src": "746:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Attack_$21783",
                              "typeString": "contract Attack"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Attack_$21783",
                              "typeString": "contract Attack"
                            }
                          ],
                          "id": 21822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "738:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21821,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "738:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "738:15:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 21825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "755:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21818,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22344,
                        "src": "730:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$45611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "733:4:90",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45085,
                      "src": "730:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21827,
                  "nodeType": "ExpressionStatement",
                  "src": "730:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21833,
                            "name": "attack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21791,
                            "src": "797:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Attack_$21783",
                              "typeString": "contract Attack"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Attack_$21783",
                              "typeString": "contract Attack"
                            }
                          ],
                          "id": 21832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "789:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "789:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "789:15:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21828,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22344,
                        "src": "775:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$45611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "778:10:90",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45061,
                      "src": "775:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:30:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21836,
                  "nodeType": "ExpressionStatement",
                  "src": "775:30:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 21837,
                          "name": "vending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21788,
                          "src": "816:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VendingMachine_$18521",
                            "typeString": "contract VendingMachine"
                          }
                        },
                        "id": 21839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "824:7:90",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18358,
                        "src": "816:15:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 21841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e35",
                          "id": 21840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "839:9:90",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        }
                      ],
                      "src": "816:33:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 21842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "816:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21843,
                  "nodeType": "ExpressionStatement",
                  "src": "816:35:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21845,
                            "name": "vending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21788,
                            "src": "871:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$18521",
                              "typeString": "contract VendingMachine"
                            }
                          },
                          "id": 21846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "879:12:90",
                          "memberName": "getMyBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18311,
                          "src": "871:20:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "871:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 21848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "895:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 21844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23334,
                        23359,
                        23372,
                        23388,
                        23430,
                        23472,
                        23514,
                        23551,
                        23588,
                        23625,
                        43365,
                        43390,
                        43420,
                        43445,
                        43504,
                        43529,
                        43559,
                        43584,
                        44684,
                        44719
                      ],
                      "referencedDeclaration": 43559,
                      "src": "862:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:43:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21850,
                  "nodeType": "ExpressionStatement",
                  "src": "862:43:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 21854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "935:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 21851,
                        "name": "vending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21788,
                        "src": "916:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VendingMachine_$18521",
                          "typeString": "contract VendingMachine"
                        }
                      },
                      "id": 21853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "924:10:90",
                      "memberName": "getPeanuts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18416,
                      "src": "916:18:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 21855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:21:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21856,
                  "nodeType": "ExpressionStatement",
                  "src": "916:21:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21858,
                            "name": "vending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21788,
                            "src": "956:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$18521",
                              "typeString": "contract VendingMachine"
                            }
                          },
                          "id": 21859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "964:12:90",
                          "memberName": "getMyBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18311,
                          "src": "956:20:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "956:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e33",
                        "id": 21861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:9:90",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000000000000000_by_1",
                          "typeString": "int_const 300000000000000000"
                        },
                        "value": "0.3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300000000000000000_by_1",
                          "typeString": "int_const 300000000000000000"
                        }
                      ],
                      "id": 21857,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23334,
                        23359,
                        23372,
                        23388,
                        23430,
                        23472,
                        23514,
                        23551,
                        23588,
                        23625,
                        43365,
                        43390,
                        43420,
                        43445,
                        43504,
                        43529,
                        43559,
                        43584,
                        44684,
                        44719
                      ],
                      "referencedDeclaration": 43559,
                      "src": "947:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:43:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21863,
                  "nodeType": "ExpressionStatement",
                  "src": "947:43:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21865,
                            "name": "vending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21788,
                            "src": "1009:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$18521",
                              "typeString": "contract VendingMachine"
                            }
                          },
                          "id": 21866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1017:17:90",
                          "memberName": "getPeanutsBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18299,
                          "src": "1009:25:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1009:27:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31393938",
                        "id": 21868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1038:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1998_by_1",
                          "typeString": "int_const 1998"
                        },
                        "value": "1998"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1998_by_1",
                          "typeString": "int_const 1998"
                        }
                      ],
                      "id": 21864,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23334,
                        23359,
                        23372,
                        23388,
                        23430,
                        23472,
                        23514,
                        23551,
                        23588,
                        23625,
                        43365,
                        43390,
                        43420,
                        43445,
                        43504,
                        43529,
                        43559,
                        43584,
                        44684,
                        44719
                      ],
                      "referencedDeclaration": 43559,
                      "src": "1000:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:43:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21870,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:43:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21876,
                                "name": "attack",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21791,
                                "src": "1086:6:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Attack_$21783",
                                  "typeString": "contract Attack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Attack_$21783",
                                  "typeString": "contract Attack"
                                }
                              ],
                              "id": 21875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1078:7:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21874,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1078:7:90",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1078:15:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21872,
                            "name": "vending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21788,
                            "src": "1062:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$18521",
                              "typeString": "contract VendingMachine"
                            }
                          },
                          "id": 21873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1070:7:90",
                          "memberName": "peanuts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18198,
                          "src": "1062:15:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1062:32:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1096:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 21871,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23334,
                        23359,
                        23372,
                        23388,
                        23430,
                        23472,
                        23514,
                        23551,
                        23588,
                        23625,
                        43365,
                        43390,
                        43420,
                        43445,
                        43504,
                        43529,
                        43559,
                        43584,
                        44684,
                        44719
                      ],
                      "referencedDeclaration": 43559,
                      "src": "1053:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:45:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21881,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:45:90"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21882,
                        "name": "vending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21788,
                        "src": "1109:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VendingMachine_$18521",
                          "typeString": "contract VendingMachine"
                        }
                      },
                      "id": 21884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1117:10:90",
                      "memberName": "withdrawal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18490,
                      "src": "1109:18:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:20:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21886,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:20:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21888,
                            "name": "vending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21788,
                            "src": "1148:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$18521",
                              "typeString": "contract VendingMachine"
                            }
                          },
                          "id": 21889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1156:12:90",
                          "memberName": "getMyBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18311,
                          "src": "1148:20:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:22:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 21891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 21887,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23334,
                        23359,
                        23372,
                        23388,
                        23430,
                        23472,
                        23514,
                        23551,
                        23588,
                        23625,
                        43365,
                        43390,
                        43420,
                        43445,
                        43504,
                        43529,
                        43559,
                        43584,
                        44684,
                        44719
                      ],
                      "referencedDeclaration": 43559,
                      "src": "1139:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21893,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:35:90"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "700:10:90",
            "parameters": {
              "id": 21816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:90"
            },
            "returnParameters": {
              "id": 21817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "720:0:90"
            },
            "scope": 21896,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21784,
              "name": "Test",
              "nameLocations": [
                "478:4:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25146,
              "src": "478:4:90"
            },
            "id": 21785,
            "nodeType": "InheritanceSpecifier",
            "src": "478:4:90"
          }
        ],
        "canonicalName": "VendingTest",
        "contractDependencies": [
          18521,
          21783
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21896,
          25146,
          22576,
          44831
        ],
        "name": "VendingTest",
        "nameLocation": "463:11:90",
        "scope": 21897,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 90
}
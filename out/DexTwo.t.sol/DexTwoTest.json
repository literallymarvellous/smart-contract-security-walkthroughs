{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token2",
          "type": "address"
        }
      ],
      "name": "swapMax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50612da3806100316000396000f3fe6080604052600436106200007d5760003560e01c8063ba414fa61162000054578063ba414fa61462000103578063f8ccbf47146200012c578063fa7626d4146200014e578063ff4ee643146200016a57600080fd5b80630a9254e4146200008a5780633a76846314620000a45780636f2db99c14620000eb57600080fd5b366200008557005b600080fd5b3480156200009757600080fd5b50620000a26200018f565b005b348015620000b157600080fd5b50620000ce737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f857600080fd5b50620000a262000634565b3480156200011057600080fd5b506200011b62000be8565b6040519015158152602001620000e2565b3480156200013957600080fd5b506000546200011b9062010000900460ff1681565b3480156200015b57600080fd5b506000546200011b9060ff1681565b3480156200017757600080fd5b50620000a2620001893660046200127f565b62000d1d565b6040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015620001e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020b9190620012bd565b600d80546001600160a01b0319166001600160a01b039290921691909117905560405162000239906200124a565b604051809103906000f08015801562000256573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051606490620002879062001258565b608080825260069082015265546f6b656e3160d01b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620002f2573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03928316179055600854604051911690606490620003269062001258565b6080808252600690820152652a37b5b2b71960d11b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000391573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03928316179055600d5460405191169061271090620003c69062001258565b6080808252600a908201526946616b65546f6b656e3160b01b60a082015260c0602082018190526004908201526346544b3160e01b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000436573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03928316179055600d54604051911690612710906200046b9062001258565b6080808252600a90820152692330b5b2aa37b5b2b71960b11b60a082015260c06020820181905260049082015263232a259960e11b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620004db573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b03928316179055600854600954600a546040516365e3c2a760e11b815291841660048301528316602482015291169063cbc7854e90604401600060405180830381600087803b1580156200054457600080fd5b505af115801562000559573d6000803e3d6000fd5b5050600954600d546040516340c10f1960e01b81526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b158015620005ae57600080fd5b505af1158015620005c3573d6000803e3d6000fd5b5050600a8054600d546040516340c10f1960e01b81526001600160a01b03918216600482015260248101939093521692506340c10f199150604401600060405180830381600087803b1580156200061957600080fd5b505af11580156200062e573d6000803e3d6000fd5b50505050565b600d546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200068e57600080fd5b505af1158015620006a3573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e860248201529116925063095ea7b391506044016020604051808303816000875af1158015620006fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007249190620012e4565b50600a5460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af11580156200077c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a29190620012e4565b50600b5460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af1158015620007fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008209190620012e4565b50600c5460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801562000878573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200089e9190620012e4565b50600b5460085460405163a9059cbb60e01b81526001600160a01b0391821660048201526001602482015291169063a9059cbb906044016020604051808303816000875af1158015620008f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200091b9190620012e4565b50600c5460085460405163a9059cbb60e01b81526001600160a01b0391821660048201526001602482015291169063a9059cbb906044016020604051808303816000875af115801562000972573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009989190620012e4565b50600854600b54600954604051630df791e560e41b81526001600160a01b03928316600482015290821660248201526001604482015291169063df791e5090606401600060405180830381600087803b158015620009f557600080fd5b505af115801562000a0a573d6000803e3d6000fd5b5050600854600c54600a54604051630df791e560e41b81526001600160a01b0392831660048201529082166024820152600160448201529116925063df791e509150606401600060405180830381600087803b15801562000a6a57600080fd5b505af115801562000a7f573d6000803e3d6000fd5b5050505062000a8d62000e0b565b505062000a9962000efe565b50506009546008546040516370a0823160e01b81526001600160a01b03918216600482015262000b9b9291909116906370a0823190602401602060405180830381865afa15801562000aef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b15919062001308565b15801562000b935750600a546008546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562000b6b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b91919062001308565b155b600162000faa565b604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b1580156200061957600080fd5b60008054610100900460ff161562000c095750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d185760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000c9a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001348565b60408051601f198184030181529082905262000cb6916200137b565b6000604051808303816000865af19150503d806000811462000cf5576040519150601f19603f3d011682016040523d82523d6000602084013e62000cfa565b606091505b509150508080602001905181019062000d149190620012e4565b9150505b919050565b600854600d546040516370a0823160e01b81526001600160a01b0391821660048201529181169163df791e5091859185918316906370a0823190602401602060405180830381865afa15801562000d78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d9e919062001308565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801562000dee57600080fd5b505af115801562000e03573d6000803e3d6000fd5b505050505050565b600954600d546040516370a0823160e01b81526001600160a01b039182166004820152600092839216906370a0823190602401602060405180830381865afa15801562000e5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e82919062001308565b600a54600d546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a08231906024015b602060405180830381865afa15801562000ed0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef6919062001308565b915091509091565b6009546008546040516370a0823160e01b81526001600160a01b039182166004820152600092839216906370a0823190602401602060405180830381865afa15801562000f4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f75919062001308565b600a546008546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a082319060240162000eb2565b8015158215151462001133577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010219060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838162001074576040518060400160405280600581526020016466616c736560d81b81525062001092565b604051806040016040528060048152602001637472756560e01b8152505b604051620010a19190620013c7565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382620010f4576040518060400160405280600581526020016466616c736560d81b81525062001112565b604051806040016040528060048152602001637472756560e01b8152505b604051620011219190620013fd565b60405180910390a16200113362001137565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620012395760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620011d4929160200162001348565b60408051601f1981840301815290829052620011f0916200137b565b6000604051808303816000865af19150503d80600081146200122f576040519150601f19603f3d011682016040523d82523d6000602084013e62001234565b606091505b505050505b6000805461ff001916610100179055565b610a15806200143483390190565b610f258062001e4983390190565b6001600160a01b03811681146200127c57600080fd5b50565b600080604083850312156200129357600080fd5b8235620012a08162001266565b91506020830135620012b28162001266565b809150509250929050565b600060208284031215620012d057600080fd5b8151620012dd8162001266565b9392505050565b600060208284031215620012f757600080fd5b81518015158114620012dd57600080fd5b6000602082840312156200131b57600080fd5b5051919050565b60005b838110156200133f57818101518382015260200162001325565b50506000910152565b6001600160e01b03198316815281516000906200136d81600485016020870162001322565b919091016004019392505050565b600082516200138f81846020870162001322565b9190910192915050565b60008151808452620013b381602086016020860162001322565b601f01601f19169290920160200192915050565b60408152600a6040820152690808115e1c1958dd195960b21b6060820152608060208201526000620012dd608083018462001399565b60408152600a604082015269080808081058dd1d585b60b21b6060820152608060208201526000620012dd60808301846200139956fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109978061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461012f578063cbc7854e14610140578063d21220a714610153578063df791e5014610166578063f2fde38b14610179578063f7888aec1461018c57600080fd5b8063095ea7b3146100ae57806325be124e146100c3578063264e8893146100f3578063635bc0c214610106578063715018a614610127575b600080fd5b6100c16100bc366004610800565b61019f565b005b6002546100d6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610101366004610800565b61026f565b61011961011436600461082a565b6102ef565b6040519081526020016100ea565b6100c16103de565b6000546001600160a01b03166100d6565b6100c161014e366004610866565b6103f2565b6001546100d6906001600160a01b031681565b6100c161017436600461082a565b610428565b6100c1610187366004610899565b61064a565b61011961019a366004610866565b6106c3565b60015460405163e1f21c6760e01b81526001600160a01b039091169063e1f21c67906101d3903390869086906004016108b4565b600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505060025460405163e1f21c6760e01b81526001600160a01b03909116925063e1f21c679150610239903390869086906004016108b4565b600060405180830381600087803b15801561025357600080fd5b505af1158015610267573d6000803e3d6000fd5b505050505050565b61027761073a565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906102a7903390309086906004016108b4565b6020604051808303816000875af11580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea91906108d8565b505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610901565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa15801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190610901565b6103cc908461091a565b6103d6919061093f565b949350505050565b6103e661073a565b6103f06000610794565b565b6103fa61073a565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b6040516370a0823160e01b815233600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610901565b10156104da5760405162461bcd60e51b815260206004820152601260248201527104e6f7420656e6f75676820746f20737761760741b60448201526064015b60405180910390fd5b60006104e78484846102ef565b6040516323b872dd60e01b81529091506001600160a01b038516906323b872dd9061051a903390309087906004016108b4565b6020604051808303816000875af1158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d91906108d8565b5060405163095ea7b360e01b8152306004820152602481018290526001600160a01b0384169063095ea7b3906044016020604051808303816000875af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf91906108d8565b506040516323b872dd60e01b81526001600160a01b038416906323b872dd90610600903090339086906004016108b4565b6020604051808303816000875af115801561061f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064391906108d8565b5050505050565b61065261073a565b6001600160a01b0381166106b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d1565b6106c081610794565b50565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa15801561070d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107319190610901565b90505b92915050565b6000546001600160a01b031633146103f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146107fb57600080fd5b919050565b6000806040838503121561081357600080fd5b61081c836107e4565b946020939093013593505050565b60008060006060848603121561083f57600080fd5b610848846107e4565b9250610856602085016107e4565b9150604084013590509250925092565b6000806040838503121561087957600080fd5b610882836107e4565b9150610890602084016107e4565b90509250929050565b6000602082840312156108ab57600080fd5b610731826107e4565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156108ea57600080fd5b815180151581146108fa57600080fd5b9392505050565b60006020828403121561091357600080fd5b5051919050565b808202811582820484141761073457634e487b7160e01b600052601160045260246000fd5b60008261095c57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122008efaa1a95f2dd772ac8390aaaee9324bef5a0c562f1c57e9c9876e93ffdaa2c64736f6c63430008110033608060405260405162000f2538038062000f258339810160408190526200002691620001f4565b8383600362000036838262000315565b50600462000045828262000315565b5050506200005a82826200006460201b60201c565b5050505062000409565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b600093810190920192909252949350505050565b600080600080608085870312156200020b57600080fd5b84516001600160401b03808211156200022357600080fd5b620002318883890162000145565b955060208701519150808211156200024857600080fd5b50620002578782880162000145565b604087015190945090506001600160a01b03811681146200027757600080fd5b6060959095015193969295505050565b600181811c908216806200029c57607f821691505b602082108103620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002ec5750805b601f850160051c820191505b818110156200030d57828155600101620002f8565b505050505050565b81516001600160401b038111156200033157620003316200012f565b620003498162000342845462000287565b84620002c3565b602080601f831160018114620003815760008415620003685750858301515b600019600386901b1c1916600185901b1785556200030d565b600085815260208120601f198616915b82811015620003b25788860151825594840194600190910190840162000391565b5085821015620003d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040357634e487b7160e01b600052601160045260246000fd5b92915050565b610b0c80620004196000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610956565b60405180910390f35b61012b6101263660046109c0565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ea565b6102e6565b005b61012b6101703660046109ea565b6102f6565b6040516012815260200161010f565b61012b6101923660046109c0565b61031a565b6101606101a53660046109c0565b61033c565b6101606101b83660046109ea565b61034a565b61013f6101cb366004610a26565b6001600160a01b031660009081526020819052604090205490565b610102610355565b6101606101fc3660046109c0565b610364565b61012b61020f3660046109c0565b61036e565b61012b6102223660046109c0565b6103ee565b61013f610235366004610a48565b6103fc565b60606003805461024990610a7b565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a7b565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610427565b60019150505b92915050565b6102f183838361054b565b505050565b6000336103048582856106f1565b61030f85858561054b565b506001949350505050565b6000336102da81858561032d83836103fc565b6103379190610ab5565b610427565b6103468282610765565b5050565b6102f1838383610427565b60606004805461024990610a7b565b6103468282610824565b6000338161037c82866103fc565b9050838110156103e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030f8286868403610427565b6000336102da81858561054b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d8565b6001600160a01b0382166104ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d8565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d8565b6001600160a01b038316600090815260208190526040902054818110156106895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fd84846103fc565b905060001981146106eb57818110156107585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d8565b6106eb8484848403610427565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d8565b80600260008282546107cd9190610ab5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d8565b6001600160a01b038216600090815260208190526040902054818110156108f85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098357858101830151858201604001528201610967565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109bb57600080fd5b919050565b600080604083850312156109d357600080fd5b6109dc836109a4565b946020939093013593505050565b6000806000606084860312156109ff57600080fd5b610a08846109a4565b9250610a16602085016109a4565b9150604084013590509250925092565b600060208284031215610a3857600080fd5b610a41826109a4565b9392505050565b60008060408385031215610a5b57600080fd5b610a64836109a4565b9150610a72602084016109a4565b90509250929050565b600181811c90821680610a8f57607f821691505b602082108103610aaf57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e057634e487b7160e01b600052601160045260246000fdfea2646970667358221220fb2a8b33a552942ebe1dd4e137542caea9aeee09a52255f7827693ef0339a2de64736f6c63430008110033a264697066735822122024ffc7dd01d87141b9c329b1932318b49905e7103e9535448a9d7dc6483fd3a964736f6c63430008110033",
    "sourceMap": "199:1977:94:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:2;;;;;199:1977:94;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "199:1977:94:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:518;;;;;;;;;;;;;:::i;:::-;;321:38:2;;;;;;;;;;-1:-1:-1;321:38:2;250:64;321:38;;;;;-1:-1:-1;;;;;190:32:126;;;172:51;;160:2;145:18;321:38:2;;;;;;;;889:809:94;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;399:14:126;;392:22;374:41;;362:2;347:18;1819:584:0;234:187:126;170:28:2;;;;;;;;;;-1:-1:-1;170:28:2;;;;;;;;;;;1572:26:0;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;1704:141:94;;;;;;;;;;-1:-1:-1;1704:141:94;;;;;:::i;:::-;;:::i;365:518::-;407:10;;-1:-1:-1;;;;;;407:10:94;;415:1;407:10;;;1160:25:126;250:64:2;;407:7:94;;1133:18:126;;407:10:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;399:5;:18;;-1:-1:-1;;;;;;399:18:94;-1:-1:-1;;;;;399:18:94;;;;;;;;;;462:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;456:3:94;:18;;-1:-1:-1;;;;;;456:18:94;-1:-1:-1;;;;;456:18:94;;;;;;;;;493:49;;538:3;;493:49;;;:::i;:::-;1828:3:126;1810:22;;;1869:1;1848:19;;;1841:30;-1:-1:-1;;;1902:3:126;1887:19;;1880:37;1955:3;1948:4;1933:20;;1926:33;;;1996:1;1975:19;;;1968:30;-1:-1:-1;;;2029:3:126;2014:19;;2007:34;-1:-1:-1;;;;;2113:32:126;;;2108:2;2093:18;;2086:60;-1:-1:-1;2162:18:126;;2155:34;2073:3;2058:19;493:49:94;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;484:6:94;:58;;-1:-1:-1;;;;;;484:58:94;-1:-1:-1;;;;;484:58:94;;;;;;600:3;;561:49;;600:3;;;606;;561:49;;;:::i;:::-;2569:3:126;2551:22;;;2610:1;2589:19;;;2582:30;-1:-1:-1;;;2643:3:126;2628:19;;2621:37;2696:3;2689:4;2674:20;;2667:33;;;2737:1;2716:19;;;2709:30;-1:-1:-1;;;2770:3:126;2755:19;;2748:34;-1:-1:-1;;;;;2854:32:126;;;2849:2;2834:18;;2827:60;-1:-1:-1;2903:18:126;;2896:34;2814:3;2799:19;561:49:94;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;552:6:94;:58;;-1:-1:-1;;;;;;552:58:94;-1:-1:-1;;;;;552:58:94;;;;;;669:5;;633:49;;669:5;;;676;;633:49;;;:::i;:::-;3312:3:126;3294:22;;;3353:2;3332:19;;;3325:31;-1:-1:-1;;;3387:3:126;3372:19;;3365:41;3444:3;3437:4;3422:20;;3415:33;;;3485:1;3464:19;;;3457:30;-1:-1:-1;;;3518:3:126;3503:19;;3496:35;-1:-1:-1;;;;;3603:32:126;;;3598:2;3583:18;;3576:60;-1:-1:-1;3652:18:126;;3645:34;3563:3;3548:19;633:49:94;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;620:10:94;:62;;-1:-1:-1;;;;;;620:62:94;-1:-1:-1;;;;;620:62:94;;;;;;741:5;;705:49;;741:5;;;748;;705:49;;;:::i;:::-;4061:3:126;4043:22;;;4102:2;4081:19;;;4074:31;-1:-1:-1;;;4136:3:126;4121:19;;4114:41;4193:3;4186:4;4171:20;;4164:33;;;4234:1;4213:19;;;4206:30;-1:-1:-1;;;4267:3:126;4252:19;;4245:35;-1:-1:-1;;;;;4352:32:126;;;4347:2;4332:18;;4325:60;-1:-1:-1;4401:18:126;;4394:34;4312:3;4297:19;705:49:94;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;692:10:94;:62;;-1:-1:-1;;;;;;692:62:94;-1:-1:-1;;;;;692:62:94;;;;;;764:3;;786:6;;803;;764:47;;-1:-1:-1;;;764:47:94;;786:6;;;764:47;;;4651:34:126;803:6:94;;4701:18:126;;;4694:43;764:3:94;;;:13;;4586:18:126;;764:47:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;822:6:94;;834:5;;822:22;;-1:-1:-1;;;822:22:94;;-1:-1:-1;;;;;834:5:94;;;822:22;;;4931:51:126;841:2:94;4998:18:126;;;4991:34;822:6:94;;;-1:-1:-1;822:11:94;;-1:-1:-1;4904:18:126;;822:22:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;854:6:94;;;866:5;;854:22;;-1:-1:-1;;;854:22:94;;-1:-1:-1;;;;;866:5:94;;;854:22;;;4931:51:126;4998:18;;;4991:34;;;;854:6:94;;-1:-1:-1;854:11:94;;-1:-1:-1;4904:18:126;;854:22:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:518::o;889:809::-;942:5;;928:20;;-1:-1:-1;;;928:20:94;;-1:-1:-1;;;;;942:5:94;;;928:20;;;172:51:126;250:64:2;;928:13:94;;145:18:126;;928:20:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;958:6:94;;981:3;;958:34;;-1:-1:-1;;;958:34:94;;-1:-1:-1;;;;;981:3:94;;;958:34;;;4931:51:126;987:4:94;4998:18:126;;;4991:34;958:6:94;;;-1:-1:-1;958:14:94;;-1:-1:-1;4904:18:126;;958:34:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1002:6:94;;1025:3;;1002:34;;-1:-1:-1;;;1002:34:94;;-1:-1:-1;;;;;1025:3:94;;;1002:34;;;4931:51:126;1031:4:94;4998:18:126;;;4991:34;1002:6:94;;;:14;;4904:18:126;;1002:34:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1046:10:94;;1073:3;;1046:38;;-1:-1:-1;;;1046:38:94;;-1:-1:-1;;;;;1073:3:94;;;1046:38;;;4931:51:126;1079:4:94;4998:18:126;;;4991:34;1046:10:94;;;:18;;4904::126;;1046:38:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1094:10:94;;1121:3;;1094:38;;-1:-1:-1;;;1094:38:94;;-1:-1:-1;;;;;1121:3:94;;;1094:38;;;4931:51:126;1127:4:94;4998:18:126;;;4991:34;1094:10:94;;;:18;;4904::126;;1094:38:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1143:10:94;;1171:3;;1143:36;;-1:-1:-1;;;1143:36:94;;-1:-1:-1;;;;;1171:3:94;;;1143:36;;;4931:51:126;1143:10:94;4998:18:126;;;4991:34;1143:10:94;;;:19;;4904:18:126;;1143:36:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1189:10:94;;1217:3;;1189:36;;-1:-1:-1;;;1189:36:94;;-1:-1:-1;;;;;1217:3:94;;;1189:36;;;4931:51:126;1189:10:94;4998:18:126;;;4991:34;1189:10:94;;;:19;;4904:18:126;;1189:36:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1236:3:94;;1253:10;;1274:6;;1236:49;;-1:-1:-1;;;1236:49:94;;-1:-1:-1;;;;;1253:10:94;;;1236:49;;;6351:34:126;1274:6:94;;;6401:18:126;;;6394:43;1236:3:94;6453:18:126;;;6446:34;1236:3:94;;;:8;;6286:18:126;;1236:49:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1295:3:94;;1312:10;;1333:6;;1295:49;;-1:-1:-1;;;1295:49:94;;-1:-1:-1;;;;;1312:10:94;;;1295:49;;;6351:34:126;1333:6:94;;;6401:18:126;;;6394:43;1295:3:94;6453:18:126;;;6446:34;1295:3:94;;;-1:-1:-1;1295:8:94;;-1:-1:-1;6286:18:126;;1295:49:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:15;:13;:15::i;:::-;;;1439:13;:11;:13::i;:::-;-1:-1:-1;;1585:6:94;;1610:3;;1585:30;;-1:-1:-1;;;1585:30:94;;-1:-1:-1;;;;;1610:3:94;;;1585:30;;;172:51:126;1576:90:94;;1585:6;;;;;:16;;145:18:126;;1585:30:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;:74;;;;-1:-1:-1;1624:6:94;;1649:3;;1624:30;;-1:-1:-1;;;1624:30:94;;-1:-1:-1;;;;;1649:3:94;;;1624:30;;;172:51:126;1624:6:94;;;:16;;145:18:126;;1624:30:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;1585:74;1661:4;1576:8;:90::i;:::-;1677:14;;;-1:-1:-1;;;1677:14:94;;;;250:64:2;;1677:12:94;;:14;;;;;274:37:2;;1677:14:94;;;;;;;274:37:2;250:64;1677:14:94;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4931:51:126;;;-1:-1:-1;;;4998:18:126;;;4991:34;2196:43:0;;;;;;;;;4904:18:126;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1704:141:94:-;1768:3;;1831:5;;1813:24;;-1:-1:-1;;;1813:24:94;;-1:-1:-1;;;;;1831:5:94;;;1813:24;;;172:51:126;1768:3:94;;;;:8;;1785:7;;1803;;1813:17;;;;;145:18:126;;1813:24:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1768:70;;-1:-1:-1;;;;;;1768:70:94;;;;;;;-1:-1:-1;;;;;6369:15:126;;;1768:70:94;;;6351:34:126;6421:15;;;;6401:18;;;6394:43;6453:18;;;6446:34;6286:18;;1768:70:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:141;;:::o;1851:135::-;1930:6;;1947:5;;1930:23;;-1:-1:-1;;;1930:23:94;;-1:-1:-1;;;;;1947:5:94;;;1930:23;;;172:51:126;1894:7:94;;;;1930:6;;:16;;145:18:126;;1930:23:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1955:6;;1972:5;;1955:23;;-1:-1:-1;;;1955:23:94;;-1:-1:-1;;;;;1972:5:94;;;1955:23;;;172:51:126;1955:6:94;;;:16;;145:18:126;;1955:23:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1922:57;;;;1851:135;;:::o;1992:147::-;2069:6;;2094:3;;2069:30;;-1:-1:-1;;;2069:30:94;;-1:-1:-1;;;;;2094:3:94;;;2069:30;;;172:51:126;2033:7:94;;;;2069:6;;:16;;145:18:126;;2069:30:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2101:6;;2126:3;;2101:30;;-1:-1:-1;;;2101:30:94;;-1:-1:-1;;;;;2126:3:94;;;2101:30;;;172:51:126;2101:6:94;;;:16;;145:18:126;;2101:30:94;14:215:126;8050:326:4;8112:1;8107:6;;:1;:6;;;8103:267;;8134:57;;;;;8477:2:126;8459:21;;;8516:2;8496:18;;;8489:30;8555:34;8550:2;8535:18;;8528:62;-1:-1:-1;;;8621:2:126;8606:18;;8599:32;8663:3;8648:19;;8275:398;8134:57:4;;;;;;;;8210:55;8244:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;8244:20:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8244:20:4;;;;8210:55;;;;;;:::i;:::-;;;;;;;;8284;8318:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;8318:20:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8318:20:4;;;;8284:55;;;;;;:::i;:::-;;;;;;;;8353:6;:4;:6::i;:::-;8050:326;;:::o;2410:424:0:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;10070:51:126;;;-1:-1:-1;;;10137:18:126;;;10130:34;;;;2705:4:0;10180:18:126;;;10173:34;2482:11:0;;1671:64;2579:43;;10043:18:126;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;426:138:126:-;-1:-1:-1;;;;;508:31:126;;498:42;;488:70;;554:1;551;544:12;488:70;426:138;:::o;569:432::-;667:6;675;728:2;716:9;707:7;703:23;699:32;696:52;;;744:1;741;734:12;696:52;783:9;770:23;802:38;834:5;802:38;:::i;:::-;859:5;-1:-1:-1;916:2:126;901:18;;888:32;929:40;888:32;929:40;:::i;:::-;988:7;978:17;;;569:432;;;;;:::o;1196:258::-;1266:6;1319:2;1307:9;1298:7;1294:23;1290:32;1287:52;;;1335:1;1332;1325:12;1287:52;1367:9;1361:16;1386:38;1418:5;1386:38;:::i;:::-;1443:5;1196:258;-1:-1:-1;;;1196:258:126:o;5534:277::-;5601:6;5654:2;5642:9;5633:7;5629:23;5625:32;5622:52;;;5670:1;5667;5660:12;5622:52;5702:9;5696:16;5755:5;5748:13;5741:21;5734:5;5731:32;5721:60;;5777:1;5774;5767:12;6491:184;6561:6;6614:2;6602:9;6593:7;6589:23;6585:32;6582:52;;;6630:1;6627;6620:12;6582:52;-1:-1:-1;6653:16:126;;6491:184;-1:-1:-1;6491:184:126:o;6959:250::-;7044:1;7054:113;7068:6;7065:1;7062:13;7054:113;;;7144:11;;;7138:18;7125:11;;;7118:39;7090:2;7083:10;7054:113;;;-1:-1:-1;;7201:1:126;7183:16;;7176:27;6959:250::o;7214:384::-;-1:-1:-1;;;;;;7399:33:126;;7387:46;;7456:13;;7369:3;;7478:74;7456:13;7541:1;7532:11;;7525:4;7513:17;;7478:74;:::i;:::-;7572:16;;;;7590:1;7568:24;;7214:384;-1:-1:-1;;;7214:384:126:o;7603:287::-;7732:3;7770:6;7764:13;7786:66;7845:6;7840:3;7833:4;7825:6;7821:17;7786:66;:::i;:::-;7868:16;;;;;7603:287;-1:-1:-1;;7603:287:126:o;8678:271::-;8720:3;8758:5;8752:12;8785:6;8780:3;8773:19;8801:76;8870:6;8863:4;8858:3;8854:14;8847:4;8840:5;8836:16;8801:76;:::i;:::-;8931:2;8910:15;-1:-1:-1;;8906:29:126;8897:39;;;;8938:4;8893:50;;8678:271;-1:-1:-1;;8678:271:126:o;8954:452::-;9204:2;9193:9;9186:21;9243:2;9238;9227:9;9223:18;9216:30;-1:-1:-1;;;9277:2:126;9266:9;9262:18;9255:40;9333:3;9326:4;9315:9;9311:20;9304:33;9167:4;9354:46;9395:3;9384:9;9380:19;9372:6;9354:46;:::i;9411:452::-;9661:2;9650:9;9643:21;9700:2;9695;9684:9;9680:18;9673:30;-1:-1:-1;;;9734:2:126;9723:9;9719:18;9712:40;9790:3;9783:4;9772:9;9768:20;9761:33;9624:4;9811:46;9852:3;9841:9;9837:19;9829:6;9811:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "swapMax(address,address)": "ff4ee643",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token2\",\"type\":\"address\"}],\"name\":\"swapMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethernaut/DexTwo.t.sol\":\"DexTwoTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol\":{\"keccak256\":\"0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27\",\"dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ethernaut/level_23/DexTwo.sol\":{\"keccak256\":\"0x820dfa126e86c67f2c14e595a00e4ff7fcbfcc99a73f63f80974c4ec8eb4f0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e69910a246e5ae35d631fb0aec7b938d15f5f492fc8818477396ff184b659a98\",\"dweb:/ipfs/QmfG3idLbLC5VtmknQUHfR1dfhY6GPSZFvt2qjNAcLRoDw\"]},\"test/ethernaut/DexTwo.t.sol\":{\"keccak256\":\"0x4702a79030db2f922067936ab4c1d3b944a9f31c7b84ff2359a5b8a792f32d92\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1a06827adce14692dfe3debee2c292e4d8d8de5987537ac3245cb53086b8b136\",\"dweb:/ipfs/QmXzysL8CYjowRKJT4AJhyHSsXrQha419C95wXCpBqz6ir\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_token1",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "_token2",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapMax"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAttack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ethernaut/DexTwo.t.sol": "DexTwoTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol": {
        "keccak256": "0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490",
        "urls": [
          "bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27",
          "dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ethernaut/level_23/DexTwo.sol": {
        "keccak256": "0x820dfa126e86c67f2c14e595a00e4ff7fcbfcc99a73f63f80974c4ec8eb4f0ee",
        "urls": [
          "bzz-raw://e69910a246e5ae35d631fb0aec7b938d15f5f492fc8818477396ff184b659a98",
          "dweb:/ipfs/QmfG3idLbLC5VtmknQUHfR1dfhY6GPSZFvt2qjNAcLRoDw"
        ],
        "license": "MIT"
      },
      "test/ethernaut/DexTwo.t.sol": {
        "keccak256": "0x4702a79030db2f922067936ab4c1d3b944a9f31c7b84ff2359a5b8a792f32d92",
        "urls": [
          "bzz-raw://1a06827adce14692dfe3debee2c292e4d8d8de5987537ac3245cb53086b8b136",
          "dweb:/ipfs/QmXzysL8CYjowRKJT4AJhyHSsXrQha419C95wXCpBqz6ir"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ethernaut/DexTwo.t.sol",
    "id": 46243,
    "exportedSymbols": {
      "Context": [
        34671
      ],
      "DSTest": [
        1786
      ],
      "DexTwo": [
        39045
      ],
      "DexTwoTest": [
        46242
      ],
      "ERC20": [
        32858
      ],
      "ERC20Mock": [
        31877
      ],
      "IERC20": [
        32936
      ],
      "IERC20Metadata": [
        33005
      ],
      "Ownable": [
        31792
      ],
      "Script": [
        10113
      ],
      "StdStorage": [
        13141
      ],
      "SwappableTokenTwo": [
        39101
      ],
      "Test": [
        13043
      ],
      "Vm": [
        15162
      ],
      "console": [
        23226
      ],
      "console2": [
        31290
      ],
      "stdError": [
        13113
      ],
      "stdJson": [
        10473
      ],
      "stdMath": [
        14382
      ],
      "stdStorage": [
        14243
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2138:94",
    "nodes": [
      {
        "id": 45919,
        "nodeType": "PragmaDirective",
        "src": "39:24:94",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 45920,
        "nodeType": "ImportDirective",
        "src": "65:28:94",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46243,
        "sourceUnit": 14383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45921,
        "nodeType": "ImportDirective",
        "src": "94:49:94",
        "nodes": [],
        "absolutePath": "src/ethernaut/level_23/DexTwo.sol",
        "file": "../../src/ethernaut/level_23/DexTwo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46243,
        "sourceUnit": 39102,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45922,
        "nodeType": "ImportDirective",
        "src": "144:53:94",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
        "file": "@openzeppelin/contracts/mocks/ERC20Mock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46243,
        "sourceUnit": 31878,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46242,
        "nodeType": "ContractDefinition",
        "src": "199:1977:94",
        "nodes": [
          {
            "id": 45927,
            "nodeType": "VariableDeclaration",
            "src": "233:10:94",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dex",
            "nameLocation": "240:3:94",
            "scope": 46242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DexTwo_$39045",
              "typeString": "contract DexTwo"
            },
            "typeName": {
              "id": 45926,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45925,
                "name": "DexTwo",
                "nameLocations": [
                  "233:6:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39045,
                "src": "233:6:94"
              },
              "referencedDeclaration": 39045,
              "src": "233:6:94",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DexTwo_$39045",
                "typeString": "contract DexTwo"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45930,
            "nodeType": "VariableDeclaration",
            "src": "249:16:94",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "259:6:94",
            "scope": 46242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 45929,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45928,
                "name": "ERC20Mock",
                "nameLocations": [
                  "249:9:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "249:9:94"
              },
              "referencedDeclaration": 31877,
              "src": "249:9:94",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45933,
            "nodeType": "VariableDeclaration",
            "src": "271:16:94",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token2",
            "nameLocation": "281:6:94",
            "scope": 46242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 45932,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45931,
                "name": "ERC20Mock",
                "nameLocations": [
                  "271:9:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "271:9:94"
              },
              "referencedDeclaration": 31877,
              "src": "271:9:94",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45936,
            "nodeType": "VariableDeclaration",
            "src": "293:20:94",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "fakeToken1",
            "nameLocation": "303:10:94",
            "scope": 46242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 45935,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45934,
                "name": "ERC20Mock",
                "nameLocations": [
                  "293:9:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "293:9:94"
              },
              "referencedDeclaration": 31877,
              "src": "293:9:94",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45939,
            "nodeType": "VariableDeclaration",
            "src": "319:20:94",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "fakeToken2",
            "nameLocation": "329:10:94",
            "scope": 46242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 45938,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45937,
                "name": "ERC20Mock",
                "nameLocations": [
                  "319:9:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "319:9:94"
              },
              "referencedDeclaration": 31877,
              "src": "319:9:94",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45941,
            "nodeType": "VariableDeclaration",
            "src": "345:13:94",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "353:5:94",
            "scope": 46242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45940,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:94",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46036,
            "nodeType": "FunctionDefinition",
            "src": "365:518:94",
            "nodes": [],
            "body": {
              "id": 46035,
              "nodeType": "Block",
              "src": "389:494:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45944,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45941,
                      "src": "399:5:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 45947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "415:1:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 45945,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9881,
                          "src": "407:2:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15162",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "410:4:94",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14454,
                        "src": "407:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 45948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "407:10:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "399:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45950,
                  "nodeType": "ExpressionStatement",
                  "src": "399:18:94"
                },
                {
                  "expression": {
                    "id": 45956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45951,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45927,
                      "src": "456:3:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DexTwo_$39045",
                        "typeString": "contract DexTwo"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "462:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DexTwo_$39045_$",
                          "typeString": "function () returns (contract DexTwo)"
                        },
                        "typeName": {
                          "id": 45953,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45952,
                            "name": "DexTwo",
                            "nameLocations": [
                              "466:6:94"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39045,
                            "src": "466:6:94"
                          },
                          "referencedDeclaration": 39045,
                          "src": "466:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DexTwo_$39045",
                            "typeString": "contract DexTwo"
                          }
                        }
                      },
                      "id": 45955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "462:12:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DexTwo_$39045",
                        "typeString": "contract DexTwo"
                      }
                    },
                    "src": "456:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DexTwo_$39045",
                      "typeString": "contract DexTwo"
                    }
                  },
                  "id": 45957,
                  "nodeType": "ExpressionStatement",
                  "src": "456:18:94"
                },
                {
                  "expression": {
                    "id": 45970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45958,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45930,
                      "src": "484:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e31",
                          "id": 45962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "507:8:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6f247d6fd2cb7b6926049e1109fcaad79fd6f20e4e7099fa7d57435ac4635439",
                            "typeString": "literal_string \"Token1\""
                          },
                          "value": "Token1"
                        },
                        {
                          "hexValue": "544b31",
                          "id": 45963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "517:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          "value": "TK1"
                        },
                        {
                          "arguments": [
                            {
                              "id": 45966,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45927,
                              "src": "532:3:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexTwo_$39045",
                                "typeString": "contract DexTwo"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DexTwo_$39045",
                                "typeString": "contract DexTwo"
                              }
                            ],
                            "id": 45965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "524:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45964,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "524:7:94",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "524:12:94",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "313030",
                          "id": 45968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "538:3:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6f247d6fd2cb7b6926049e1109fcaad79fd6f20e4e7099fa7d57435ac4635439",
                            "typeString": "literal_string \"Token1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 45961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "493:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 45960,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45959,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "497:9:94"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "497:9:94"
                          },
                          "referencedDeclaration": 31877,
                          "src": "497:9:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 45969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "493:49:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "484:58:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 45971,
                  "nodeType": "ExpressionStatement",
                  "src": "484:58:94"
                },
                {
                  "expression": {
                    "id": 45984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45972,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45933,
                      "src": "552:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e32",
                          "id": 45976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "575:8:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2c15a7b8cfc5bd79acf3c235976ff8f776eab68c57adce369465398e58654531",
                            "typeString": "literal_string \"Token2\""
                          },
                          "value": "Token2"
                        },
                        {
                          "hexValue": "544b32",
                          "id": 45977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "585:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          "value": "TK2"
                        },
                        {
                          "arguments": [
                            {
                              "id": 45980,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45927,
                              "src": "600:3:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexTwo_$39045",
                                "typeString": "contract DexTwo"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DexTwo_$39045",
                                "typeString": "contract DexTwo"
                              }
                            ],
                            "id": 45979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "592:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45978,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "592:7:94",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "592:12:94",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "313030",
                          "id": 45982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "606:3:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2c15a7b8cfc5bd79acf3c235976ff8f776eab68c57adce369465398e58654531",
                            "typeString": "literal_string \"Token2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 45975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "561:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 45974,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45973,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "565:9:94"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "565:9:94"
                          },
                          "referencedDeclaration": 31877,
                          "src": "565:9:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 45983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "561:49:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "552:58:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 45985,
                  "nodeType": "ExpressionStatement",
                  "src": "552:58:94"
                },
                {
                  "expression": {
                    "id": 45995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45986,
                      "name": "fakeToken1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45936,
                      "src": "620:10:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "46616b65546f6b656e31",
                          "id": 45990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "647:12:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7ea675e63c970def29bd6c401ddcba85329b568dc99a333bdbc1bc8e0e51569f",
                            "typeString": "literal_string \"FakeToken1\""
                          },
                          "value": "FakeToken1"
                        },
                        {
                          "hexValue": "46544b31",
                          "id": 45991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "661:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_51363d2ec09c3d50912f75c2c89623fc1ce15699c4ce8d95c3c79be2808398a4",
                            "typeString": "literal_string \"FTK1\""
                          },
                          "value": "FTK1"
                        },
                        {
                          "id": 45992,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45941,
                          "src": "669:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "3130303030",
                          "id": 45993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "676:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_7ea675e63c970def29bd6c401ddcba85329b568dc99a333bdbc1bc8e0e51569f",
                            "typeString": "literal_string \"FakeToken1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_51363d2ec09c3d50912f75c2c89623fc1ce15699c4ce8d95c3c79be2808398a4",
                            "typeString": "literal_string \"FTK1\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          }
                        ],
                        "id": 45989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "633:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 45988,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45987,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "637:9:94"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "637:9:94"
                          },
                          "referencedDeclaration": 31877,
                          "src": "637:9:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 45994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "633:49:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "620:62:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 45996,
                  "nodeType": "ExpressionStatement",
                  "src": "620:62:94"
                },
                {
                  "expression": {
                    "id": 46006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45997,
                      "name": "fakeToken2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45939,
                      "src": "692:10:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "46616b65546f6b656e32",
                          "id": 46001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "719:12:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_00b85b5a1e910de61f629152a07a3f2078c0023894dc6aebd9a4e8ede9f2394f",
                            "typeString": "literal_string \"FakeToken2\""
                          },
                          "value": "FakeToken2"
                        },
                        {
                          "hexValue": "46544b32",
                          "id": 46002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "733:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_74baacc7d784fc4739c28507c0e7b4c010e1d1df5ec98a304ce08f83719898e8",
                            "typeString": "literal_string \"FTK2\""
                          },
                          "value": "FTK2"
                        },
                        {
                          "id": 46003,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45941,
                          "src": "741:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "3130303030",
                          "id": 46004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "748:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_00b85b5a1e910de61f629152a07a3f2078c0023894dc6aebd9a4e8ede9f2394f",
                            "typeString": "literal_string \"FakeToken2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_74baacc7d784fc4739c28507c0e7b4c010e1d1df5ec98a304ce08f83719898e8",
                            "typeString": "literal_string \"FTK2\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          }
                        ],
                        "id": 46000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "705:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 45999,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45998,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "709:9:94"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "709:9:94"
                          },
                          "referencedDeclaration": 31877,
                          "src": "709:9:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 46005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "705:49:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "692:62:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 46007,
                  "nodeType": "ExpressionStatement",
                  "src": "692:62:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46013,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45930,
                            "src": "786:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 46012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "778:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46011,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "778:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "778:15:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46017,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "803:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 46016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "795:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46015,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "795:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "795:15:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46008,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45927,
                        "src": "764:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DexTwo_$39045",
                          "typeString": "contract DexTwo"
                        }
                      },
                      "id": 46010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "768:9:94",
                      "memberName": "setTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38872,
                      "src": "764:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 46019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:47:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46020,
                  "nodeType": "ExpressionStatement",
                  "src": "764:47:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46024,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45941,
                        "src": "834:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 46025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "841:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 46021,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45930,
                        "src": "822:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "829:4:94",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31831,
                      "src": "822:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 46026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:22:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46027,
                  "nodeType": "ExpressionStatement",
                  "src": "822:22:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46031,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45941,
                        "src": "866:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 46032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "873:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 46028,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "854:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "861:4:94",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31831,
                      "src": "854:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 46033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:22:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46034,
                  "nodeType": "ExpressionStatement",
                  "src": "854:22:94"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "374:5:94",
            "parameters": {
              "id": 45942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:2:94"
            },
            "returnParameters": {
              "id": 45943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:94"
            },
            "scope": 46242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46168,
            "nodeType": "FunctionDefinition",
            "src": "889:809:94",
            "nodes": [],
            "body": {
              "id": 46167,
              "nodeType": "Block",
              "src": "918:780:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46042,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45941,
                        "src": "942:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46039,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "928:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15162",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "931:10:94",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14612,
                      "src": "928:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:20:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46044,
                  "nodeType": "ExpressionStatement",
                  "src": "928:20:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46050,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45927,
                            "src": "981:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          ],
                          "id": 46049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "973:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "973:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "973:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 46045,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45930,
                        "src": "958:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "965:7:94",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32438,
                      "src": "958:14:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:34:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46054,
                  "nodeType": "ExpressionStatement",
                  "src": "958:34:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46060,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45927,
                            "src": "1025:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          ],
                          "id": 46059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1017:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1017:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1017:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1031:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 46055,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45933,
                        "src": "1002:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1009:7:94",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32438,
                      "src": "1002:14:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:34:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46064,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:34:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46070,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45927,
                            "src": "1073:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          ],
                          "id": 46069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1065:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46068,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1065:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1065:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1079:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 46065,
                        "name": "fakeToken1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45936,
                        "src": "1046:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1057:7:94",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32438,
                      "src": "1046:18:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:38:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46074,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:38:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46080,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45927,
                            "src": "1121:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          ],
                          "id": 46079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1113:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46078,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1113:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1113:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 46082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1127:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 46075,
                        "name": "fakeToken2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45939,
                        "src": "1094:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1105:7:94",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32438,
                      "src": "1094:18:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:38:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46084,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:38:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46090,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45927,
                            "src": "1171:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          ],
                          "id": 46089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1163:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46088,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1163:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1163:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 46092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:1:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 46085,
                        "name": "fakeToken1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45936,
                        "src": "1143:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1154:8:94",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32395,
                      "src": "1143:19:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:36:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46094,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:36:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46100,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45927,
                            "src": "1217:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexTwo_$39045",
                              "typeString": "contract DexTwo"
                            }
                          ],
                          "id": 46099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1209:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1209:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1209:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 46102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1223:1:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 46095,
                        "name": "fakeToken2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45939,
                        "src": "1189:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 46097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1200:8:94",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32395,
                      "src": "1189:19:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:36:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46104,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:36:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46110,
                            "name": "fakeToken1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45936,
                            "src": "1253:10:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 46109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1245:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1245:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1245:19:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46114,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45930,
                            "src": "1274:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 46113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1266:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46112,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1266:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1266:15:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 46116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1283:1:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 46105,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45927,
                        "src": "1236:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DexTwo_$39045",
                          "typeString": "contract DexTwo"
                        }
                      },
                      "id": 46107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1240:4:94",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38963,
                      "src": "1236:8:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 46117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:49:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46118,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:49:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46124,
                            "name": "fakeToken2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45939,
                            "src": "1312:10:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 46123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1304:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1304:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1304:19:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46128,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "1333:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 46127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1325:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1325:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1325:15:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 46130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1342:1:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 46119,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45927,
                        "src": "1295:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DexTwo_$39045",
                          "typeString": "contract DexTwo"
                        }
                      },
                      "id": 46121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1299:4:94",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38963,
                      "src": "1295:8:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 46131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:49:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46132,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:49:94"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46133,
                      "name": "tokenBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46213,
                      "src": "1414:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () returns (uint256,uint256)"
                      }
                    },
                    "id": 46134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:15:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 46135,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:15:94"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46136,
                      "name": "dexBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46237,
                      "src": "1439:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () returns (uint256,uint256)"
                      }
                    },
                    "id": 46137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:13:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 46138,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:13:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 46158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 46144,
                                    "name": "dex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45927,
                                    "src": "1610:3:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DexTwo_$39045",
                                      "typeString": "contract DexTwo"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DexTwo_$39045",
                                      "typeString": "contract DexTwo"
                                    }
                                  ],
                                  "id": 46143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1602:7:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 46142,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1602:7:94",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 46145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1602:12:94",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 46140,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45930,
                                "src": "1585:6:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                                  "typeString": "contract ERC20Mock"
                                }
                              },
                              "id": 46141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1592:9:94",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32370,
                              "src": "1585:16:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 46146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1585:30:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 46147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1619:1:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1585:35:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 46157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 46153,
                                    "name": "dex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45927,
                                    "src": "1649:3:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DexTwo_$39045",
                                      "typeString": "contract DexTwo"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DexTwo_$39045",
                                      "typeString": "contract DexTwo"
                                    }
                                  ],
                                  "id": 46152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1641:7:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 46151,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1641:7:94",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 46154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1641:12:94",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 46149,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45933,
                                "src": "1624:6:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                                  "typeString": "contract ERC20Mock"
                                }
                              },
                              "id": 46150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1631:9:94",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32370,
                              "src": "1624:16:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 46155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1624:30:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 46156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1658:1:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1624:35:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1585:74:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 46159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1661:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 46139,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11231,
                        11256,
                        11269,
                        11285,
                        11327,
                        11369,
                        11411,
                        11448,
                        11485,
                        11522,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 11231,
                      "src": "1576:8:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 46160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:90:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46161,
                  "nodeType": "ExpressionStatement",
                  "src": "1576:90:94"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46162,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "1677:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15162",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1680:9:94",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14629,
                      "src": "1677:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:14:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46166,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:14:94"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "898:10:94",
            "parameters": {
              "id": 46037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:2:94"
            },
            "returnParameters": {
              "id": 46038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:0:94"
            },
            "scope": 46242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46195,
            "nodeType": "FunctionDefinition",
            "src": "1704:141:94",
            "nodes": [],
            "body": {
              "id": 46194,
              "nodeType": "Block",
              "src": "1758:87:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46182,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46171,
                            "src": "1785:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 46181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1777:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1777:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1777:16:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46186,
                            "name": "_token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46174,
                            "src": "1803:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 46185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1795:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1795:7:94",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1795:16:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46190,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45941,
                            "src": "1831:5:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46188,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46171,
                            "src": "1813:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 46189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1821:9:94",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1813:17:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1813:24:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46177,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45927,
                        "src": "1768:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DexTwo_$39045",
                          "typeString": "contract DexTwo"
                        }
                      },
                      "id": 46179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1772:4:94",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38963,
                      "src": "1768:8:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 46192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:70:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46193,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:70:94"
                }
              ]
            },
            "functionSelector": "ff4ee643",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapMax",
            "nameLocation": "1713:7:94",
            "parameters": {
              "id": 46175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46171,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "1727:7:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 46195,
                  "src": "1721:13:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$32858",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 46170,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46169,
                      "name": "ERC20",
                      "nameLocations": [
                        "1721:5:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32858,
                      "src": "1721:5:94"
                    },
                    "referencedDeclaration": 32858,
                    "src": "1721:5:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32858",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46174,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nameLocation": "1742:7:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 46195,
                  "src": "1736:13:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$32858",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 46173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46172,
                      "name": "ERC20",
                      "nameLocations": [
                        "1736:5:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32858,
                      "src": "1736:5:94"
                    },
                    "referencedDeclaration": 32858,
                    "src": "1736:5:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32858",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:30:94"
            },
            "returnParameters": {
              "id": 46176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:0:94"
            },
            "scope": 46242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46213,
            "nodeType": "FunctionDefinition",
            "src": "1851:135:94",
            "nodes": [],
            "body": {
              "id": 46212,
              "nodeType": "Block",
              "src": "1912:74:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 46204,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45941,
                            "src": "1947:5:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46202,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45930,
                            "src": "1930:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 46203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1937:9:94",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1930:16:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1930:23:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46208,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45941,
                            "src": "1972:5:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46206,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "1955:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 46207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1962:9:94",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1955:16:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1955:23:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 46210,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1929:50:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 46201,
                  "id": 46211,
                  "nodeType": "Return",
                  "src": "1922:57:94"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenBalances",
            "nameLocation": "1860:13:94",
            "parameters": {
              "id": 46196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1873:2:94"
            },
            "returnParameters": {
              "id": 46201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46213,
                  "src": "1894:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46213,
                  "src": "1903:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1893:18:94"
            },
            "scope": 46242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46237,
            "nodeType": "FunctionDefinition",
            "src": "1992:147:94",
            "nodes": [],
            "body": {
              "id": 46236,
              "nodeType": "Block",
              "src": "2051:88:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46224,
                                "name": "dex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45927,
                                "src": "2094:3:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexTwo_$39045",
                                  "typeString": "contract DexTwo"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexTwo_$39045",
                                  "typeString": "contract DexTwo"
                                }
                              ],
                              "id": 46223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2086:7:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46222,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2086:7:94",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2086:12:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46220,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45930,
                            "src": "2069:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 46221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2076:9:94",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "2069:16:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2069:30:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46231,
                                "name": "dex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45927,
                                "src": "2126:3:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexTwo_$39045",
                                  "typeString": "contract DexTwo"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexTwo_$39045",
                                  "typeString": "contract DexTwo"
                                }
                              ],
                              "id": 46230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2118:7:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46229,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2118:7:94",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2118:12:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46227,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45933,
                            "src": "2101:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 46228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2108:9:94",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "2101:16:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2101:30:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 46234,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2068:64:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 46219,
                  "id": 46235,
                  "nodeType": "Return",
                  "src": "2061:71:94"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dexBalances",
            "nameLocation": "2001:11:94",
            "parameters": {
              "id": 46214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2012:2:94"
            },
            "returnParameters": {
              "id": 46219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46216,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46237,
                  "src": "2033:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2033:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46237,
                  "src": "2042:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:18:94"
            },
            "scope": 46242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46241,
            "nodeType": "FunctionDefinition",
            "src": "2145:29:94",
            "nodes": [],
            "body": {
              "id": 46240,
              "nodeType": "Block",
              "src": "2172:2:94",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2152:2:94"
            },
            "returnParameters": {
              "id": 46239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2172:0:94"
            },
            "scope": 46242,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45923,
              "name": "Test",
              "nameLocations": [
                "222:4:94"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13043,
              "src": "222:4:94"
            },
            "id": 45924,
            "nodeType": "InheritanceSpecifier",
            "src": "222:4:94"
          }
        ],
        "canonicalName": "DexTwoTest",
        "contractDependencies": [
          31877,
          39045
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46242,
          13043,
          10113,
          1786
        ],
        "name": "DexTwoTest",
        "nameLocation": "208:10:94",
        "scope": 46243,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 94
}
{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token2",
          "type": "address"
        }
      ],
      "name": "swapMax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50612963806100316000396000f3fe6080604052600436106200007d5760003560e01c8063ba414fa61162000054578063ba414fa61462000103578063f8ccbf47146200012c578063fa7626d4146200014e578063ff4ee643146200016a57600080fd5b80630a9254e4146200008a5780633a76846314620000a45780636f2db99c14620000eb57600080fd5b366200008557005b600080fd5b3480156200009757600080fd5b50620000a26200018f565b005b348015620000b157600080fd5b50620000ce737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f857600080fd5b50620000a2620004ec565b3480156200011057600080fd5b506200011b620008b0565b6040519015158152602001620000e2565b3480156200013957600080fd5b506000546200011b9062010000900460ff1681565b3480156200015b57600080fd5b506000546200011b9060ff1681565b3480156200017757600080fd5b50620000a26200018936600462000da8565b620009e5565b6040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015620001e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020b919062000de6565b600b80546001600160a01b0319166001600160a01b0392909216919091179055604051620002399062000d73565b604051809103906000f08015801562000256573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051606490620002879062000d81565b608080825260069082015265546f6b656e3160d01b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620002f2573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03928316179055600854604051911690606490620003269062000d81565b6080808252600690820152652a37b5b2b71960d11b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000391573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283169081179091556008546009546040516365e3c2a760e11b8152908416600482015260248101929092529091169063cbc7854e90604401600060405180830381600087803b158015620003fc57600080fd5b505af115801562000411573d6000803e3d6000fd5b5050600954600b546040516340c10f1960e01b81526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b1580156200046657600080fd5b505af11580156200047b573d6000803e3d6000fd5b5050600a8054600b546040516340c10f1960e01b81526001600160a01b03918216600482015260248101939093521692506340c10f199150604401600060405180830381600087803b158015620004d157600080fd5b505af1158015620004e6573d6000803e3d6000fd5b50505050565b600b546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200054657600080fd5b505af11580156200055b573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e860248201529116925063095ea7b391506044016020604051808303816000875af1158015620005b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005dc919062000e0d565b50600a5460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801562000634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200065a919062000e0d565b50600954600a5462000679916001600160a01b039081169116620009e5565b600a5460095462000697916001600160a01b039081169116620009e5565b600954600a54620006b5916001600160a01b039081169116620009e5565b600a54600954620006d3916001600160a01b039081169116620009e5565b600954600a54620006f1916001600160a01b039081169116620009e5565b600854600a54600954604051630df791e560e41b81526001600160a01b0392831660048201529082166024820152602d604482015291169063df791e5090606401600060405180830381600087803b1580156200074d57600080fd5b505af115801562000762573d6000803e3d6000fd5b50506009546008546040516370a0823160e01b81526001600160a01b039182166004820152620008639450911691506370a0823190602401602060405180830381865afa158015620007b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007de919062000e31565b15806200085b5750600a546008546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562000833573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000859919062000e31565b155b600162000ad3565b604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b158015620004d157600080fd5b60008054610100900460ff1615620008d15750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620009e05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000962917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000e71565b60408051601f19818403018152908290526200097e9162000ea4565b6000604051808303816000865af19150503d8060008114620009bd576040519150601f19603f3d011682016040523d82523d6000602084013e620009c2565b606091505b5091505080806020019051810190620009dc919062000e0d565b9150505b919050565b600854600b546040516370a0823160e01b81526001600160a01b0391821660048201529181169163df791e5091859185918316906370a0823190602401602060405180830381865afa15801562000a40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a66919062000e31565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801562000ab657600080fd5b505af115801562000acb573d6000803e3d6000fd5b505050505050565b8015158215151462000c5c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000b4a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838162000b9d576040518060400160405280600581526020016466616c736560d81b81525062000bbb565b604051806040016040528060048152602001637472756560e01b8152505b60405162000bca919062000ef0565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838262000c1d576040518060400160405280600581526020016466616c736560d81b81525062000c3b565b604051806040016040528060048152602001637472756560e01b8152505b60405162000c4a919062000f26565b60405180910390a162000c5c62000c60565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d625760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000cfd929160200162000e71565b60408051601f198184030181529082905262000d199162000ea4565b6000604051808303816000865af19150503d806000811462000d58576040519150601f19603f3d011682016040523d82523d6000602084013e62000d5d565b606091505b505050505b6000805461ff001916610100179055565b610aac8062000f5d83390190565b610f258062001a0983390190565b6001600160a01b038116811462000da557600080fd5b50565b6000806040838503121562000dbc57600080fd5b823562000dc98162000d8f565b9150602083013562000ddb8162000d8f565b809150509250929050565b60006020828403121562000df957600080fd5b815162000e068162000d8f565b9392505050565b60006020828403121562000e2057600080fd5b8151801515811462000e0657600080fd5b60006020828403121562000e4457600080fd5b5051919050565b60005b8381101562000e6857818101518382015260200162000e4e565b50506000910152565b6001600160e01b031983168152815160009062000e9681600485016020870162000e4b565b919091016004019392505050565b6000825162000eb881846020870162000e4b565b9190910192915050565b6000815180845262000edc81602086016020860162000e4b565b601f01601f19169290920160200192915050565b60408152600a6040820152690808115e1c1958dd195960b21b606082015260806020820152600062000e06608083018462000ec2565b60408152600a604082015269080808081058dd1d585b60b21b606082015260806020820152600062000e06608083018462000ec256fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a2e8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bfd7e00d11610071578063bfd7e00d1461011f578063cbc7854e14610140578063d21220a714610153578063df791e5014610166578063f2fde38b14610179578063f7888aec1461018c57600080fd5b8063095ea7b3146100ae57806325be124e146100c357806356688700146100f3578063715018a6146101065780638da5cb5b1461010e575b600080fd5b6100c16100bc366004610897565b61019f565b005b6002546100d6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610101366004610897565b61026f565b6100c16102ef565b6000546001600160a01b03166100d6565b61013261012d3660046108c1565b610303565b6040519081526020016100ea565b6100c161014e3660046108fd565b6103f2565b6001546100d6906001600160a01b031681565b6100c16101743660046108c1565b610428565b6100c1610187366004610930565b6106e1565b61013261019a3660046108fd565b61075a565b60015460405163e1f21c6760e01b81526001600160a01b039091169063e1f21c67906101d39033908690869060040161094b565b600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505060025460405163e1f21c6760e01b81526001600160a01b03909116925063e1f21c6791506102399033908690869060040161094b565b600060405180830381600087803b15801561025357600080fd5b505af1158015610267573d6000803e3d6000fd5b505050505050565b6102776107d1565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906102a79033903090869060040161094b565b6020604051808303816000875af11580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea919061096f565b505050565b6102f76107d1565b610301600061082b565b565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610998565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610998565b6103e090846109b1565b6103ea91906109d6565b949350505050565b6103fa6107d1565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b6001546001600160a01b03848116911614801561045257506002546001600160a01b038381169116145b8061048257506002546001600160a01b03848116911614801561048257506001546001600160a01b038381169116145b6104c45760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420746f6b656e7360901b60448201526064015b60405180910390fd5b6040516370a0823160e01b815233600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610998565b10156105715760405162461bcd60e51b815260206004820152601260248201527104e6f7420656e6f75676820746f20737761760741b60448201526064016104bb565b600061057e848484610303565b6040516323b872dd60e01b81529091506001600160a01b038516906323b872dd906105b19033903090879060040161094b565b6020604051808303816000875af11580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f4919061096f565b5060405163095ea7b360e01b8152306004820152602481018290526001600160a01b0384169063095ea7b3906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610666919061096f565b506040516323b872dd60e01b81526001600160a01b038416906323b872dd906106979030903390869060040161094b565b6020604051808303816000875af11580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da919061096f565b5050505050565b6106e96107d1565b6001600160a01b03811661074e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bb565b6107578161082b565b50565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190610998565b90505b92915050565b6000546001600160a01b031633146103015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461089257600080fd5b919050565b600080604083850312156108aa57600080fd5b6108b38361087b565b946020939093013593505050565b6000806000606084860312156108d657600080fd5b6108df8461087b565b92506108ed6020850161087b565b9150604084013590509250925092565b6000806040838503121561091057600080fd5b6109198361087b565b91506109276020840161087b565b90509250929050565b60006020828403121561094257600080fd5b6107c88261087b565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561098157600080fd5b8151801515811461099157600080fd5b9392505050565b6000602082840312156109aa57600080fd5b5051919050565b80820281158282048414176107cb57634e487b7160e01b600052601160045260246000fd5b6000826109f357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c9f43a190b9c8a0f36110591869c20bccf9ef32227d9391d2674c04266d41d1464736f6c63430008110033608060405260405162000f2538038062000f258339810160408190526200002691620001f4565b8383600362000036838262000315565b50600462000045828262000315565b5050506200005a82826200006460201b60201c565b5050505062000409565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b600093810190920192909252949350505050565b600080600080608085870312156200020b57600080fd5b84516001600160401b03808211156200022357600080fd5b620002318883890162000145565b955060208701519150808211156200024857600080fd5b50620002578782880162000145565b604087015190945090506001600160a01b03811681146200027757600080fd5b6060959095015193969295505050565b600181811c908216806200029c57607f821691505b602082108103620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002ec5750805b601f850160051c820191505b818110156200030d57828155600101620002f8565b505050505050565b81516001600160401b038111156200033157620003316200012f565b620003498162000342845462000287565b84620002c3565b602080601f831160018114620003815760008415620003685750858301515b600019600386901b1c1916600185901b1785556200030d565b600085815260208120601f198616915b82811015620003b25788860151825594840194600190910190840162000391565b5085821015620003d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040357634e487b7160e01b600052601160045260246000fd5b92915050565b610b0c80620004196000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610956565b60405180910390f35b61012b6101263660046109c0565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ea565b6102e6565b005b61012b6101703660046109ea565b6102f6565b6040516012815260200161010f565b61012b6101923660046109c0565b61031a565b6101606101a53660046109c0565b61033c565b6101606101b83660046109ea565b61034a565b61013f6101cb366004610a26565b6001600160a01b031660009081526020819052604090205490565b610102610355565b6101606101fc3660046109c0565b610364565b61012b61020f3660046109c0565b61036e565b61012b6102223660046109c0565b6103ee565b61013f610235366004610a48565b6103fc565b60606003805461024990610a7b565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a7b565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610427565b60019150505b92915050565b6102f183838361054b565b505050565b6000336103048582856106f1565b61030f85858561054b565b506001949350505050565b6000336102da81858561032d83836103fc565b6103379190610ab5565b610427565b6103468282610765565b5050565b6102f1838383610427565b60606004805461024990610a7b565b6103468282610824565b6000338161037c82866103fc565b9050838110156103e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030f8286868403610427565b6000336102da81858561054b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d8565b6001600160a01b0382166104ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d8565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d8565b6001600160a01b038316600090815260208190526040902054818110156106895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fd84846103fc565b905060001981146106eb57818110156107585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d8565b6106eb8484848403610427565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d8565b80600260008282546107cd9190610ab5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d8565b6001600160a01b038216600090815260208190526040902054818110156108f85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098357858101830151858201604001528201610967565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109bb57600080fd5b919050565b600080604083850312156109d357600080fd5b6109dc836109a4565b946020939093013593505050565b6000806000606084860312156109ff57600080fd5b610a08846109a4565b9250610a16602085016109a4565b9150604084013590509250925092565b600060208284031215610a3857600080fd5b610a41826109a4565b9392505050565b60008060408385031215610a5b57600080fd5b610a64836109a4565b9150610a72602084016109a4565b90509250929050565b600181811c90821680610a8f57607f821691505b602082108103610aaf57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e057634e487b7160e01b600052601160045260246000fdfea2646970667358221220fb2a8b33a552942ebe1dd4e137542caea9aeee09a52255f7827693ef0339a2de64736f6c63430008110033a264697066735822122050a17875ef8b2416e5d7c929446a50164b200bdc36d129ac439800dc0777b81a64736f6c63430008110033",
    "sourceMap": "196:1466:93:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:2;;;;;196:1466:93;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200007d5760003560e01c8063ba414fa61162000054578063ba414fa61462000103578063f8ccbf47146200012c578063fa7626d4146200014e578063ff4ee643146200016a57600080fd5b80630a9254e4146200008a5780633a76846314620000a45780636f2db99c14620000eb57600080fd5b366200008557005b600080fd5b3480156200009757600080fd5b50620000a26200018f565b005b348015620000b157600080fd5b50620000ce737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f857600080fd5b50620000a2620004ec565b3480156200011057600080fd5b506200011b620008b0565b6040519015158152602001620000e2565b3480156200013957600080fd5b506000546200011b9062010000900460ff1681565b3480156200015b57600080fd5b506000546200011b9060ff1681565b3480156200017757600080fd5b50620000a26200018936600462000da8565b620009e5565b6040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015620001e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020b919062000de6565b600b80546001600160a01b0319166001600160a01b0392909216919091179055604051620002399062000d73565b604051809103906000f08015801562000256573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604051606490620002879062000d81565b608080825260069082015265546f6b656e3160d01b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620002f2573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03928316179055600854604051911690606490620003269062000d81565b6080808252600690820152652a37b5b2b71960d11b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000391573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283169081179091556008546009546040516365e3c2a760e11b8152908416600482015260248101929092529091169063cbc7854e90604401600060405180830381600087803b158015620003fc57600080fd5b505af115801562000411573d6000803e3d6000fd5b5050600954600b546040516340c10f1960e01b81526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b1580156200046657600080fd5b505af11580156200047b573d6000803e3d6000fd5b5050600a8054600b546040516340c10f1960e01b81526001600160a01b03918216600482015260248101939093521692506340c10f199150604401600060405180830381600087803b158015620004d157600080fd5b505af1158015620004e6573d6000803e3d6000fd5b50505050565b600b546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200054657600080fd5b505af11580156200055b573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e860248201529116925063095ea7b391506044016020604051808303816000875af1158015620005b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005dc919062000e0d565b50600a5460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801562000634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200065a919062000e0d565b50600954600a5462000679916001600160a01b039081169116620009e5565b600a5460095462000697916001600160a01b039081169116620009e5565b600954600a54620006b5916001600160a01b039081169116620009e5565b600a54600954620006d3916001600160a01b039081169116620009e5565b600954600a54620006f1916001600160a01b039081169116620009e5565b600854600a54600954604051630df791e560e41b81526001600160a01b0392831660048201529082166024820152602d604482015291169063df791e5090606401600060405180830381600087803b1580156200074d57600080fd5b505af115801562000762573d6000803e3d6000fd5b50506009546008546040516370a0823160e01b81526001600160a01b039182166004820152620008639450911691506370a0823190602401602060405180830381865afa158015620007b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007de919062000e31565b15806200085b5750600a546008546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562000833573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000859919062000e31565b155b600162000ad3565b604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b158015620004d157600080fd5b60008054610100900460ff1615620008d15750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620009e05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000962917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000e71565b60408051601f19818403018152908290526200097e9162000ea4565b6000604051808303816000865af19150503d8060008114620009bd576040519150601f19603f3d011682016040523d82523d6000602084013e620009c2565b606091505b5091505080806020019051810190620009dc919062000e0d565b9150505b919050565b600854600b546040516370a0823160e01b81526001600160a01b0391821660048201529181169163df791e5091859185918316906370a0823190602401602060405180830381865afa15801562000a40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a66919062000e31565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801562000ab657600080fd5b505af115801562000acb573d6000803e3d6000fd5b505050505050565b8015158215151462000c5c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000b4a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838162000b9d576040518060400160405280600581526020016466616c736560d81b81525062000bbb565b604051806040016040528060048152602001637472756560e01b8152505b60405162000bca919062000ef0565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838262000c1d576040518060400160405280600581526020016466616c736560d81b81525062000c3b565b604051806040016040528060048152602001637472756560e01b8152505b60405162000c4a919062000f26565b60405180910390a162000c5c62000c60565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000d625760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000cfd929160200162000e71565b60408051601f198184030181529082905262000d199162000ea4565b6000604051808303816000865af19150503d806000811462000d58576040519150601f19603f3d011682016040523d82523d6000602084013e62000d5d565b606091505b505050505b6000805461ff001916610100179055565b610aac8062000f5d83390190565b610f258062001a0983390190565b6001600160a01b038116811462000da557600080fd5b50565b6000806040838503121562000dbc57600080fd5b823562000dc98162000d8f565b9150602083013562000ddb8162000d8f565b809150509250929050565b60006020828403121562000df957600080fd5b815162000e068162000d8f565b9392505050565b60006020828403121562000e2057600080fd5b8151801515811462000e0657600080fd5b60006020828403121562000e4457600080fd5b5051919050565b60005b8381101562000e6857818101518382015260200162000e4e565b50506000910152565b6001600160e01b031983168152815160009062000e9681600485016020870162000e4b565b919091016004019392505050565b6000825162000eb881846020870162000e4b565b9190910192915050565b6000815180845262000edc81602086016020860162000e4b565b601f01601f19169290920160200192915050565b60408152600a6040820152690808115e1c1958dd195960b21b606082015260806020820152600062000e06608083018462000ec2565b60408152600a604082015269080808081058dd1d585b60b21b606082015260806020820152600062000e06608083018462000ec256fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a2e8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bfd7e00d11610071578063bfd7e00d1461011f578063cbc7854e14610140578063d21220a714610153578063df791e5014610166578063f2fde38b14610179578063f7888aec1461018c57600080fd5b8063095ea7b3146100ae57806325be124e146100c357806356688700146100f3578063715018a6146101065780638da5cb5b1461010e575b600080fd5b6100c16100bc366004610897565b61019f565b005b6002546100d6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610101366004610897565b61026f565b6100c16102ef565b6000546001600160a01b03166100d6565b61013261012d3660046108c1565b610303565b6040519081526020016100ea565b6100c161014e3660046108fd565b6103f2565b6001546100d6906001600160a01b031681565b6100c16101743660046108c1565b610428565b6100c1610187366004610930565b6106e1565b61013261019a3660046108fd565b61075a565b60015460405163e1f21c6760e01b81526001600160a01b039091169063e1f21c67906101d39033908690869060040161094b565b600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505060025460405163e1f21c6760e01b81526001600160a01b03909116925063e1f21c6791506102399033908690869060040161094b565b600060405180830381600087803b15801561025357600080fd5b505af1158015610267573d6000803e3d6000fd5b505050505050565b6102776107d1565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906102a79033903090869060040161094b565b6020604051808303816000875af11580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea919061096f565b505050565b6102f76107d1565b610301600061082b565b565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610998565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610998565b6103e090846109b1565b6103ea91906109d6565b949350505050565b6103fa6107d1565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b6001546001600160a01b03848116911614801561045257506002546001600160a01b038381169116145b8061048257506002546001600160a01b03848116911614801561048257506001546001600160a01b038381169116145b6104c45760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420746f6b656e7360901b60448201526064015b60405180910390fd5b6040516370a0823160e01b815233600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610998565b10156105715760405162461bcd60e51b815260206004820152601260248201527104e6f7420656e6f75676820746f20737761760741b60448201526064016104bb565b600061057e848484610303565b6040516323b872dd60e01b81529091506001600160a01b038516906323b872dd906105b19033903090879060040161094b565b6020604051808303816000875af11580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f4919061096f565b5060405163095ea7b360e01b8152306004820152602481018290526001600160a01b0384169063095ea7b3906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610666919061096f565b506040516323b872dd60e01b81526001600160a01b038416906323b872dd906106979030903390869060040161094b565b6020604051808303816000875af11580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da919061096f565b5050505050565b6106e96107d1565b6001600160a01b03811661074e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bb565b6107578161082b565b50565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190610998565b90505b92915050565b6000546001600160a01b031633146103015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461089257600080fd5b919050565b600080604083850312156108aa57600080fd5b6108b38361087b565b946020939093013593505050565b6000806000606084860312156108d657600080fd5b6108df8461087b565b92506108ed6020850161087b565b9150604084013590509250925092565b6000806040838503121561091057600080fd5b6109198361087b565b91506109276020840161087b565b90509250929050565b60006020828403121561094257600080fd5b6107c88261087b565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561098157600080fd5b8151801515811461099157600080fd5b9392505050565b6000602082840312156109aa57600080fd5b5051919050565b80820281158282048414176107cb57634e487b7160e01b600052601160045260246000fd5b6000826109f357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c9f43a190b9c8a0f36110591869c20bccf9ef32227d9391d2674c04266d41d1464736f6c63430008110033608060405260405162000f2538038062000f258339810160408190526200002691620001f4565b8383600362000036838262000315565b50600462000045828262000315565b5050506200005a82826200006460201b60201c565b5050505062000409565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b600093810190920192909252949350505050565b600080600080608085870312156200020b57600080fd5b84516001600160401b03808211156200022357600080fd5b620002318883890162000145565b955060208701519150808211156200024857600080fd5b50620002578782880162000145565b604087015190945090506001600160a01b03811681146200027757600080fd5b6060959095015193969295505050565b600181811c908216806200029c57607f821691505b602082108103620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002ec5750805b601f850160051c820191505b818110156200030d57828155600101620002f8565b505050505050565b81516001600160401b038111156200033157620003316200012f565b620003498162000342845462000287565b84620002c3565b602080601f831160018114620003815760008415620003685750858301515b600019600386901b1c1916600185901b1785556200030d565b600085815260208120601f198616915b82811015620003b25788860151825594840194600190910190840162000391565b5085821015620003d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040357634e487b7160e01b600052601160045260246000fd5b92915050565b610b0c80620004196000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610956565b60405180910390f35b61012b6101263660046109c0565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ea565b6102e6565b005b61012b6101703660046109ea565b6102f6565b6040516012815260200161010f565b61012b6101923660046109c0565b61031a565b6101606101a53660046109c0565b61033c565b6101606101b83660046109ea565b61034a565b61013f6101cb366004610a26565b6001600160a01b031660009081526020819052604090205490565b610102610355565b6101606101fc3660046109c0565b610364565b61012b61020f3660046109c0565b61036e565b61012b6102223660046109c0565b6103ee565b61013f610235366004610a48565b6103fc565b60606003805461024990610a7b565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a7b565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610427565b60019150505b92915050565b6102f183838361054b565b505050565b6000336103048582856106f1565b61030f85858561054b565b506001949350505050565b6000336102da81858561032d83836103fc565b6103379190610ab5565b610427565b6103468282610765565b5050565b6102f1838383610427565b60606004805461024990610a7b565b6103468282610824565b6000338161037c82866103fc565b9050838110156103e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030f8286868403610427565b6000336102da81858561054b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d8565b6001600160a01b0382166104ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d8565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d8565b6001600160a01b038316600090815260208190526040902054818110156106895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fd84846103fc565b905060001981146106eb57818110156107585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d8565b6106eb8484848403610427565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d8565b80600260008282546107cd9190610ab5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d8565b6001600160a01b038216600090815260208190526040902054818110156108f85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098357858101830151858201604001528201610967565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109bb57600080fd5b919050565b600080604083850312156109d357600080fd5b6109dc836109a4565b946020939093013593505050565b6000806000606084860312156109ff57600080fd5b610a08846109a4565b9250610a16602085016109a4565b9150604084013590509250925092565b600060208284031215610a3857600080fd5b610a41826109a4565b9392505050565b60008060408385031215610a5b57600080fd5b610a64836109a4565b9150610a72602084016109a4565b90509250929050565b600181811c90821680610a8f57607f821691505b602082108103610aaf57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e057634e487b7160e01b600052601160045260246000fdfea2646970667358221220fb2a8b33a552942ebe1dd4e137542caea9aeee09a52255f7827693ef0339a2de64736f6c63430008110033a264697066735822122050a17875ef8b2416e5d7c929446a50164b200bdc36d129ac439800dc0777b81a64736f6c63430008110033",
    "sourceMap": "196:1466:93:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:371;;;;;;;;;;;;;:::i;:::-;;321:38:2;;;;;;;;;;-1:-1:-1;321:38:2;250:64;321:38;;;;;-1:-1:-1;;;;;190:32:126;;;172:51;;160:2;145:18;321:38:2;;;;;;;;681:503:93;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;399:14:126;;392:22;374:41;;362:2;347:18;1819:584:0;234:187:126;170:28:2;;;;;;;;;;-1:-1:-1;170:28:2;;;;;;;;;;;1572:26:0;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;1190:141:93;;;;;;;;;;-1:-1:-1;1190:141:93;;;;;:::i;:::-;;:::i;304:371::-;346:10;;-1:-1:-1;;;;;;346:10:93;;354:1;346:10;;;1160:25:126;250:64:2;;346:7:93;;1133:18:126;;346:10:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;338:5;:18;;-1:-1:-1;;;;;;338:18:93;-1:-1:-1;;;;;338:18:93;;;;;;;;;;401:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;395:3:93;:15;;-1:-1:-1;;;;;;395:15:93;-1:-1:-1;;;;;395:15:93;;;;;;;;;429:49;;474:3;;429:49;;;:::i;:::-;1828:3:126;1810:22;;;1869:1;1848:19;;;1841:30;-1:-1:-1;;;1902:3:126;1887:19;;1880:37;1955:3;1948:4;1933:20;;1926:33;;;1996:1;1975:19;;;1968:30;-1:-1:-1;;;2029:3:126;2014:19;;2007:34;-1:-1:-1;;;;;2113:32:126;;;2108:2;2093:18;;2086:60;-1:-1:-1;2162:18:126;;2155:34;2073:3;2058:19;429:49:93;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;420:6:93;:58;;-1:-1:-1;;;;;;420:58:93;-1:-1:-1;;;;;420:58:93;;;;;;536:3;;497:49;;536:3;;;542;;497:49;;;:::i;:::-;2569:3:126;2551:22;;;2610:1;2589:19;;;2582:30;-1:-1:-1;;;2643:3:126;2628:19;;2621:37;2696:3;2689:4;2674:20;;2667:33;;;2737:1;2716:19;;;2709:30;-1:-1:-1;;;2770:3:126;2755:19;;2748:34;-1:-1:-1;;;;;2854:32:126;;;2849:2;2834:18;;2827:60;-1:-1:-1;2903:18:126;;2896:34;2814:3;2799:19;497:49:93;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;488:6:93;:58;;-1:-1:-1;;;;;;488:58:93;-1:-1:-1;;;;;488:58:93;;;;;;;;;556:3;;578:6;;556:47;;-1:-1:-1;;;556:47:93;;578:6;;;556:47;;;3153:34:126;3203:18;;;3196:43;;;;556:3:93;;;;:13;;3088:18:126;;556:47:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;614:6:93;;626:5;;614:22;;-1:-1:-1;;;614:22:93;;-1:-1:-1;;;;;626:5:93;;;614:22;;;3433:51:126;633:2:93;3500:18:126;;;3493:34;614:6:93;;;-1:-1:-1;614:11:93;;-1:-1:-1;3406:18:126;;614:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;646:6:93;;;658:5;;646:22;;-1:-1:-1;;;646:22:93;;-1:-1:-1;;;;;658:5:93;;;646:22;;;3433:51:126;3500:18;;;3493:34;;;;646:6:93;;-1:-1:-1;646:11:93;;-1:-1:-1;3406:18:126;;646:22:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:371::o;681:503::-;734:5;;720:20;;-1:-1:-1;;;720:20:93;;-1:-1:-1;;;;;734:5:93;;;720:20;;;172:51:126;250:64:2;;720:13:93;;145:18:126;;720:20:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;750:6:93;;773:3;;750:34;;-1:-1:-1;;;750:34:93;;-1:-1:-1;;;;;773:3:93;;;750:34;;;3433:51:126;779:4:93;3500:18:126;;;3493:34;750:6:93;;;-1:-1:-1;750:14:93;;-1:-1:-1;3406:18:126;;750:34:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;794:6:93;;817:3;;794:34;;-1:-1:-1;;;794:34:93;;-1:-1:-1;;;;;817:3:93;;;794:34;;;3433:51:126;823:4:93;3500:18:126;;;3493:34;794:6:93;;;:14;;3406:18:126;;794:34:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;847:6:93;;855;;839:23;;-1:-1:-1;;;;;847:6:93;;;;855;839:7;:23::i;:::-;880:6;;888;;872:23;;-1:-1:-1;;;;;880:6:93;;;;888;872:7;:23::i;:::-;913:6;;921;;905:23;;-1:-1:-1;;;;;913:6:93;;;;921;905:7;:23::i;:::-;946:6;;954;;938:23;;-1:-1:-1;;;;;946:6:93;;;;954;938:7;:23::i;:::-;979:6;;987;;971:23;;-1:-1:-1;;;;;979:6:93;;;;987;971:7;:23::i;:::-;1005:3;;1022:6;;1039;;1005:46;;-1:-1:-1;;;1005:46:93;;-1:-1:-1;;;;;1022:6:93;;;1005:46;;;4567:34:126;1039:6:93;;;4617:18:126;;;4610:43;1048:2:93;4669:18:126;;;4662:34;1005:3:93;;;:8;;4502:18:126;;1005:46:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1071:6:93;;1096:3;;1071:30;;-1:-1:-1;;;1071:30:93;;-1:-1:-1;;;;;1096:3:93;;;1071:30;;;172:51:126;1062:90:93;;-1:-1:-1;1071:6:93;;;-1:-1:-1;1071:16:93;;145:18:126;;1071:30:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;:74;;-1:-1:-1;1110:6:93;;1135:3;;1110:30;;-1:-1:-1;;;1110:30:93;;-1:-1:-1;;;;;1135:3:93;;;1110:30;;;172:51:126;1110:6:93;;;:16;;145:18:126;;1110:30:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;1071:74;1147:4;1062:8;:90::i;:::-;1163:14;;;-1:-1:-1;;;1163:14:93;;;;250:64:2;;1163:12:93;;:14;;;;;274:37:2;;1163:14:93;;;;;;;274:37:2;250:64;1163:14:93;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;3433:51:126;;;-1:-1:-1;;;3500:18:126;;;3493:34;2196:43:0;;;;;;;;;3406:18:126;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1190:141:93:-;1254:3;;1317:5;;1299:24;;-1:-1:-1;;;1299:24:93;;-1:-1:-1;;;;;1317:5:93;;;1299:24;;;172:51:126;1254:3:93;;;;:8;;1271:7;;1289;;1299:17;;;;;145:18:126;;1299:24:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1254:70;;-1:-1:-1;;;;;;1254:70:93;;;;;;;-1:-1:-1;;;;;4585:15:126;;;1254:70:93;;;4567:34:126;4637:15;;;;4617:18;;;4610:43;4669:18;;;4662:34;4502:18;;1254:70:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:141;;:::o;8050:326:4:-;8112:1;8107:6;;:1;:6;;;8103:267;;8134:57;;;;;6693:2:126;6675:21;;;6732:2;6712:18;;;6705:30;6771:34;6766:2;6751:18;;6744:62;-1:-1:-1;;;6837:2:126;6822:18;;6815:32;6879:3;6864:19;;6491:398;8134:57:4;;;;;;;;8210:55;8244:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;8244:20:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8244:20:4;;;;8210:55;;;;;;:::i;:::-;;;;;;;;8284;8318:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;8318:20:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8318:20:4;;;;8284:55;;;;;;:::i;:::-;;;;;;;;8353:6;:4;:6::i;:::-;8050:326;;:::o;2410:424:0:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;8286:51:126;;;-1:-1:-1;;;8353:18:126;;;8346:34;;;;2705:4:0;8396:18:126;;;8389:34;2482:11:0;;1671:64;2579:43;;8259:18:126;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;426:138:126:-;-1:-1:-1;;;;;508:31:126;;498:42;;488:70;;554:1;551;544:12;488:70;426:138;:::o;569:432::-;667:6;675;728:2;716:9;707:7;703:23;699:32;696:52;;;744:1;741;734:12;696:52;783:9;770:23;802:38;834:5;802:38;:::i;:::-;859:5;-1:-1:-1;916:2:126;901:18;;888:32;929:40;888:32;929:40;:::i;:::-;988:7;978:17;;;569:432;;;;;:::o;1196:258::-;1266:6;1319:2;1307:9;1298:7;1294:23;1290:32;1287:52;;;1335:1;1332;1325:12;1287:52;1367:9;1361:16;1386:38;1418:5;1386:38;:::i;:::-;1443:5;1196:258;-1:-1:-1;;;1196:258:126:o;4036:277::-;4103:6;4156:2;4144:9;4135:7;4131:23;4127:32;4124:52;;;4172:1;4169;4162:12;4124:52;4204:9;4198:16;4257:5;4250:13;4243:21;4236:5;4233:32;4223:60;;4279:1;4276;4269:12;4707:184;4777:6;4830:2;4818:9;4809:7;4805:23;4801:32;4798:52;;;4846:1;4843;4836:12;4798:52;-1:-1:-1;4869:16:126;;4707:184;-1:-1:-1;4707:184:126:o;5175:250::-;5260:1;5270:113;5284:6;5281:1;5278:13;5270:113;;;5360:11;;;5354:18;5341:11;;;5334:39;5306:2;5299:10;5270:113;;;-1:-1:-1;;5417:1:126;5399:16;;5392:27;5175:250::o;5430:384::-;-1:-1:-1;;;;;;5615:33:126;;5603:46;;5672:13;;5585:3;;5694:74;5672:13;5757:1;5748:11;;5741:4;5729:17;;5694:74;:::i;:::-;5788:16;;;;5806:1;5784:24;;5430:384;-1:-1:-1;;;5430:384:126:o;5819:287::-;5948:3;5986:6;5980:13;6002:66;6061:6;6056:3;6049:4;6041:6;6037:17;6002:66;:::i;:::-;6084:16;;;;;5819:287;-1:-1:-1;;5819:287:126:o;6894:271::-;6936:3;6974:5;6968:12;7001:6;6996:3;6989:19;7017:76;7086:6;7079:4;7074:3;7070:14;7063:4;7056:5;7052:16;7017:76;:::i;:::-;7147:2;7126:15;-1:-1:-1;;7122:29:126;7113:39;;;;7154:4;7109:50;;6894:271;-1:-1:-1;;6894:271:126:o;7170:452::-;7420:2;7409:9;7402:21;7459:2;7454;7443:9;7439:18;7432:30;-1:-1:-1;;;7493:2:126;7482:9;7478:18;7471:40;7549:3;7542:4;7531:9;7527:20;7520:33;7383:4;7570:46;7611:3;7600:9;7596:19;7588:6;7570:46;:::i;7627:452::-;7877:2;7866:9;7859:21;7916:2;7911;7900:9;7896:18;7889:30;-1:-1:-1;;;7950:2:126;7939:9;7935:18;7928:40;8006:3;7999:4;7988:9;7984:20;7977:33;7840:4;8027:46;8068:3;8057:9;8053:19;8045:6;8027:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "swapMax(address,address)": "ff4ee643",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token2\",\"type\":\"address\"}],\"name\":\"swapMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethernaut/Dex.t.sol\":\"DexTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol\":{\"keccak256\":\"0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27\",\"dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ethernaut/level_22/Dex.sol\":{\"keccak256\":\"0xd66ad03f984f8c8f52d5b51041ab26518be750bae4d28ed0c08fd11135f7b0a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7076e107b81565ecff972fa7380a3faadc1a49533eeb5d2b5e45e3c40be192d6\",\"dweb:/ipfs/QmXQTLmRwZ47iNoDD4xXoQdPbZQmLJTVi7aNf68y6z8DDc\"]},\"test/ethernaut/Dex.t.sol\":{\"keccak256\":\"0x4ec8db1be77d48355fb81585c8bad771bc7e66e794f3c5a08b3fcf955fb0731d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2c8ea9643d7b25a051ff7e8fd3847c1f74cd4faee9a0cc9b572a77ab481ce2b1\",\"dweb:/ipfs/QmQAQPovGWgrJk1hEMhBDfgGyHidQcE2eKDGhKQf7oVrvj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_token1",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "_token2",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapMax"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAttack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ethernaut/Dex.t.sol": "DexTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol": {
        "keccak256": "0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490",
        "urls": [
          "bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27",
          "dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ethernaut/level_22/Dex.sol": {
        "keccak256": "0xd66ad03f984f8c8f52d5b51041ab26518be750bae4d28ed0c08fd11135f7b0a2",
        "urls": [
          "bzz-raw://7076e107b81565ecff972fa7380a3faadc1a49533eeb5d2b5e45e3c40be192d6",
          "dweb:/ipfs/QmXQTLmRwZ47iNoDD4xXoQdPbZQmLJTVi7aNf68y6z8DDc"
        ],
        "license": "MIT"
      },
      "test/ethernaut/Dex.t.sol": {
        "keccak256": "0x4ec8db1be77d48355fb81585c8bad771bc7e66e794f3c5a08b3fcf955fb0731d",
        "urls": [
          "bzz-raw://2c8ea9643d7b25a051ff7e8fd3847c1f74cd4faee9a0cc9b572a77ab481ce2b1",
          "dweb:/ipfs/QmQAQPovGWgrJk1hEMhBDfgGyHidQcE2eKDGhKQf7oVrvj"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ethernaut/Dex.t.sol",
    "id": 45918,
    "exportedSymbols": {
      "Context": [
        34671
      ],
      "DSTest": [
        1786
      ],
      "Dex": [
        38783
      ],
      "DexTest": [
        45917
      ],
      "ERC20": [
        32858
      ],
      "ERC20Mock": [
        31877
      ],
      "IERC20": [
        32936
      ],
      "IERC20Metadata": [
        33005
      ],
      "Ownable": [
        31792
      ],
      "Script": [
        10113
      ],
      "StdStorage": [
        13141
      ],
      "SwappableToken": [
        38839
      ],
      "Test": [
        13043
      ],
      "Vm": [
        15162
      ],
      "console": [
        23226
      ],
      "console2": [
        31290
      ],
      "stdError": [
        13113
      ],
      "stdJson": [
        10473
      ],
      "stdMath": [
        14382
      ],
      "stdStorage": [
        14243
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1624:93",
    "nodes": [
      {
        "id": 45657,
        "nodeType": "PragmaDirective",
        "src": "39:24:93",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 45658,
        "nodeType": "ImportDirective",
        "src": "65:28:93",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45918,
        "sourceUnit": 14383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45659,
        "nodeType": "ImportDirective",
        "src": "94:46:93",
        "nodes": [],
        "absolutePath": "src/ethernaut/level_22/Dex.sol",
        "file": "../../src/ethernaut/level_22/Dex.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45918,
        "sourceUnit": 38840,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45660,
        "nodeType": "ImportDirective",
        "src": "141:53:93",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
        "file": "@openzeppelin/contracts/mocks/ERC20Mock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45918,
        "sourceUnit": 31878,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45917,
        "nodeType": "ContractDefinition",
        "src": "196:1466:93",
        "nodes": [
          {
            "id": 45665,
            "nodeType": "VariableDeclaration",
            "src": "227:7:93",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dex",
            "nameLocation": "231:3:93",
            "scope": 45917,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Dex_$38783",
              "typeString": "contract Dex"
            },
            "typeName": {
              "id": 45664,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45663,
                "name": "Dex",
                "nameLocations": [
                  "227:3:93"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38783,
                "src": "227:3:93"
              },
              "referencedDeclaration": 38783,
              "src": "227:3:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dex_$38783",
                "typeString": "contract Dex"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45668,
            "nodeType": "VariableDeclaration",
            "src": "240:16:93",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "250:6:93",
            "scope": 45917,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 45667,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45666,
                "name": "ERC20Mock",
                "nameLocations": [
                  "240:9:93"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "240:9:93"
              },
              "referencedDeclaration": 31877,
              "src": "240:9:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45671,
            "nodeType": "VariableDeclaration",
            "src": "262:16:93",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token2",
            "nameLocation": "272:6:93",
            "scope": 45917,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 45670,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45669,
                "name": "ERC20Mock",
                "nameLocations": [
                  "262:9:93"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "262:9:93"
              },
              "referencedDeclaration": 31877,
              "src": "262:9:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45673,
            "nodeType": "VariableDeclaration",
            "src": "284:13:93",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "292:5:93",
            "scope": 45917,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45672,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 45746,
            "nodeType": "FunctionDefinition",
            "src": "304:371:93",
            "nodes": [],
            "body": {
              "id": 45745,
              "nodeType": "Block",
              "src": "328:347:93",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45676,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45673,
                      "src": "338:5:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 45679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "354:1:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 45677,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9881,
                          "src": "346:2:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15162",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "349:4:93",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14454,
                        "src": "346:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 45680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "346:10:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "338:18:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45682,
                  "nodeType": "ExpressionStatement",
                  "src": "338:18:93"
                },
                {
                  "expression": {
                    "id": 45688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45683,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45665,
                      "src": "395:3:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dex_$38783",
                        "typeString": "contract Dex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "401:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Dex_$38783_$",
                          "typeString": "function () returns (contract Dex)"
                        },
                        "typeName": {
                          "id": 45685,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45684,
                            "name": "Dex",
                            "nameLocations": [
                              "405:3:93"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38783,
                            "src": "405:3:93"
                          },
                          "referencedDeclaration": 38783,
                          "src": "405:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Dex_$38783",
                            "typeString": "contract Dex"
                          }
                        }
                      },
                      "id": 45687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "401:9:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dex_$38783",
                        "typeString": "contract Dex"
                      }
                    },
                    "src": "395:15:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dex_$38783",
                      "typeString": "contract Dex"
                    }
                  },
                  "id": 45689,
                  "nodeType": "ExpressionStatement",
                  "src": "395:15:93"
                },
                {
                  "expression": {
                    "id": 45702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45690,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45668,
                      "src": "420:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e31",
                          "id": 45694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "443:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6f247d6fd2cb7b6926049e1109fcaad79fd6f20e4e7099fa7d57435ac4635439",
                            "typeString": "literal_string \"Token1\""
                          },
                          "value": "Token1"
                        },
                        {
                          "hexValue": "544b31",
                          "id": 45695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "453:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          "value": "TK1"
                        },
                        {
                          "arguments": [
                            {
                              "id": 45698,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45665,
                              "src": "468:3:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dex_$38783",
                                "typeString": "contract Dex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dex_$38783",
                                "typeString": "contract Dex"
                              }
                            ],
                            "id": 45697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "460:7:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45696,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "460:7:93",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "460:12:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "313030",
                          "id": 45700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "474:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6f247d6fd2cb7b6926049e1109fcaad79fd6f20e4e7099fa7d57435ac4635439",
                            "typeString": "literal_string \"Token1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 45693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "429:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 45692,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45691,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "433:9:93"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "433:9:93"
                          },
                          "referencedDeclaration": 31877,
                          "src": "433:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 45701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "429:49:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "420:58:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 45703,
                  "nodeType": "ExpressionStatement",
                  "src": "420:58:93"
                },
                {
                  "expression": {
                    "id": 45716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45704,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45671,
                      "src": "488:6:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e32",
                          "id": 45708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "511:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2c15a7b8cfc5bd79acf3c235976ff8f776eab68c57adce369465398e58654531",
                            "typeString": "literal_string \"Token2\""
                          },
                          "value": "Token2"
                        },
                        {
                          "hexValue": "544b32",
                          "id": 45709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "521:5:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          "value": "TK2"
                        },
                        {
                          "arguments": [
                            {
                              "id": 45712,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45665,
                              "src": "536:3:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dex_$38783",
                                "typeString": "contract Dex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dex_$38783",
                                "typeString": "contract Dex"
                              }
                            ],
                            "id": 45711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "528:7:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45710,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "528:7:93",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "528:12:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "313030",
                          "id": 45714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "542:3:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2c15a7b8cfc5bd79acf3c235976ff8f776eab68c57adce369465398e58654531",
                            "typeString": "literal_string \"Token2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 45707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "497:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 45706,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45705,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "501:9:93"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "501:9:93"
                          },
                          "referencedDeclaration": 31877,
                          "src": "501:9:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 45715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "497:49:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "488:58:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 45717,
                  "nodeType": "ExpressionStatement",
                  "src": "488:58:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45723,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45668,
                            "src": "578:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 45722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "570:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "570:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "570:15:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45727,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45671,
                            "src": "595:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 45726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "587:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45725,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "587:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "587:15:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45718,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45665,
                        "src": "556:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dex_$38783",
                          "typeString": "contract Dex"
                        }
                      },
                      "id": 45720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "560:9:93",
                      "memberName": "setTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38589,
                      "src": "556:13:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 45729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:47:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45730,
                  "nodeType": "ExpressionStatement",
                  "src": "556:47:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45734,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45673,
                        "src": "626:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 45735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "633:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 45731,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45668,
                        "src": "614:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 45733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "621:4:93",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31831,
                      "src": "614:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45737,
                  "nodeType": "ExpressionStatement",
                  "src": "614:22:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45741,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45673,
                        "src": "658:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 45742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "665:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 45738,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45671,
                        "src": "646:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 45740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "653:4:93",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31831,
                      "src": "646:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:22:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45744,
                  "nodeType": "ExpressionStatement",
                  "src": "646:22:93"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "313:5:93",
            "parameters": {
              "id": 45674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:93"
            },
            "returnParameters": {
              "id": 45675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:93"
            },
            "scope": 45917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45843,
            "nodeType": "FunctionDefinition",
            "src": "681:503:93",
            "nodes": [],
            "body": {
              "id": 45842,
              "nodeType": "Block",
              "src": "710:474:93",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45752,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45673,
                        "src": "734:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45749,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "720:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15162",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "723:10:93",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14612,
                      "src": "720:13:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "720:20:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45754,
                  "nodeType": "ExpressionStatement",
                  "src": "720:20:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45760,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45665,
                            "src": "773:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$38783",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$38783",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 45759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "765:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "765:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "765:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 45762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "779:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 45755,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45668,
                        "src": "750:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 45757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "757:7:93",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32438,
                      "src": "750:14:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "750:34:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45764,
                  "nodeType": "ExpressionStatement",
                  "src": "750:34:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45770,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45665,
                            "src": "817:3:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$38783",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$38783",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 45769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "809:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45768,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "809:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "809:12:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 45772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "823:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 45765,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45671,
                        "src": "794:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 45767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "801:7:93",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32438,
                      "src": "794:14:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:34:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45774,
                  "nodeType": "ExpressionStatement",
                  "src": "794:34:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45776,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45668,
                        "src": "847:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 45777,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45671,
                        "src": "855:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 45775,
                      "name": "swapMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45870,
                      "src": "839:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$32858_$_t_contract$_ERC20_$32858_$returns$__$",
                        "typeString": "function (contract ERC20,contract ERC20)"
                      }
                    },
                    "id": 45778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "839:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45779,
                  "nodeType": "ExpressionStatement",
                  "src": "839:23:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45781,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45671,
                        "src": "880:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 45782,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45668,
                        "src": "888:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 45780,
                      "name": "swapMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45870,
                      "src": "872:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$32858_$_t_contract$_ERC20_$32858_$returns$__$",
                        "typeString": "function (contract ERC20,contract ERC20)"
                      }
                    },
                    "id": 45783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45784,
                  "nodeType": "ExpressionStatement",
                  "src": "872:23:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45786,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45668,
                        "src": "913:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 45787,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45671,
                        "src": "921:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 45785,
                      "name": "swapMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45870,
                      "src": "905:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$32858_$_t_contract$_ERC20_$32858_$returns$__$",
                        "typeString": "function (contract ERC20,contract ERC20)"
                      }
                    },
                    "id": 45788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45789,
                  "nodeType": "ExpressionStatement",
                  "src": "905:23:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45791,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45671,
                        "src": "946:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 45792,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45668,
                        "src": "954:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 45790,
                      "name": "swapMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45870,
                      "src": "938:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$32858_$_t_contract$_ERC20_$32858_$returns$__$",
                        "typeString": "function (contract ERC20,contract ERC20)"
                      }
                    },
                    "id": 45793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45794,
                  "nodeType": "ExpressionStatement",
                  "src": "938:23:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45796,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45668,
                        "src": "979:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 45797,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45671,
                        "src": "987:6:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 45795,
                      "name": "swapMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45870,
                      "src": "971:7:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$32858_$_t_contract$_ERC20_$32858_$returns$__$",
                        "typeString": "function (contract ERC20,contract ERC20)"
                      }
                    },
                    "id": 45798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:23:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45799,
                  "nodeType": "ExpressionStatement",
                  "src": "971:23:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45805,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45671,
                            "src": "1022:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 45804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1014:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1014:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1014:15:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45809,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45668,
                            "src": "1039:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 45808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1031:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1031:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1031:15:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3435",
                        "id": 45811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1048:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_45_by_1",
                          "typeString": "int_const 45"
                        },
                        "value": "45"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_45_by_1",
                          "typeString": "int_const 45"
                        }
                      ],
                      "expression": {
                        "id": 45800,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45665,
                        "src": "1005:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dex_$38783",
                          "typeString": "contract Dex"
                        }
                      },
                      "id": 45802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1009:4:93",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38701,
                      "src": "1005:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 45812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:46:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45813,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:46:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 45833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 45819,
                                    "name": "dex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45665,
                                    "src": "1096:3:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Dex_$38783",
                                      "typeString": "contract Dex"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Dex_$38783",
                                      "typeString": "contract Dex"
                                    }
                                  ],
                                  "id": 45818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1088:7:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 45817,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1088:7:93",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 45820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1088:12:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 45815,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45668,
                                "src": "1071:6:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                                  "typeString": "contract ERC20Mock"
                                }
                              },
                              "id": 45816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1078:9:93",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32370,
                              "src": "1071:16:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 45821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1071:30:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 45822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1105:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1071:35:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 45828,
                                    "name": "dex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45665,
                                    "src": "1135:3:93",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Dex_$38783",
                                      "typeString": "contract Dex"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Dex_$38783",
                                      "typeString": "contract Dex"
                                    }
                                  ],
                                  "id": 45827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1127:7:93",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 45826,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1127:7:93",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 45829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1127:12:93",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 45824,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45671,
                                "src": "1110:6:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                                  "typeString": "contract ERC20Mock"
                                }
                              },
                              "id": 45825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1117:9:93",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32370,
                              "src": "1110:16:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 45830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1110:30:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 45831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1144:1:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1110:35:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1071:74:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:4:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45814,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11231,
                        11256,
                        11269,
                        11285,
                        11327,
                        11369,
                        11411,
                        11448,
                        11485,
                        11522,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 11231,
                      "src": "1062:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 45835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:90:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45836,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:90:93"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45837,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "1163:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15162",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1166:9:93",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14629,
                      "src": "1163:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:14:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45841,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:14:93"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "690:10:93",
            "parameters": {
              "id": 45747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:2:93"
            },
            "returnParameters": {
              "id": 45748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:93"
            },
            "scope": 45917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45870,
            "nodeType": "FunctionDefinition",
            "src": "1190:141:93",
            "nodes": [],
            "body": {
              "id": 45869,
              "nodeType": "Block",
              "src": "1244:87:93",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45857,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45846,
                            "src": "1271:7:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 45856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1263:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1263:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1263:16:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45861,
                            "name": "_token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45849,
                            "src": "1289:7:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 45860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1281:7:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1281:7:93",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1281:16:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45865,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45673,
                            "src": "1317:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45863,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45846,
                            "src": "1299:7:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32858",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 45864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1307:9:93",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1299:17:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:24:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45852,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45665,
                        "src": "1254:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dex_$38783",
                          "typeString": "contract Dex"
                        }
                      },
                      "id": 45854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1258:4:93",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38701,
                      "src": "1254:8:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 45867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:70:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45868,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:70:93"
                }
              ]
            },
            "functionSelector": "ff4ee643",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapMax",
            "nameLocation": "1199:7:93",
            "parameters": {
              "id": 45850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45846,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "1213:7:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 45870,
                  "src": "1207:13:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$32858",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 45845,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45844,
                      "name": "ERC20",
                      "nameLocations": [
                        "1207:5:93"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32858,
                      "src": "1207:5:93"
                    },
                    "referencedDeclaration": 32858,
                    "src": "1207:5:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32858",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45849,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nameLocation": "1228:7:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 45870,
                  "src": "1222:13:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$32858",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 45848,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45847,
                      "name": "ERC20",
                      "nameLocations": [
                        "1222:5:93"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32858,
                      "src": "1222:5:93"
                    },
                    "referencedDeclaration": 32858,
                    "src": "1222:5:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32858",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:30:93"
            },
            "returnParameters": {
              "id": 45851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:0:93"
            },
            "scope": 45917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45888,
            "nodeType": "FunctionDefinition",
            "src": "1337:135:93",
            "nodes": [],
            "body": {
              "id": 45887,
              "nodeType": "Block",
              "src": "1398:74:93",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 45879,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45673,
                            "src": "1433:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45877,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45668,
                            "src": "1416:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 45878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1423:9:93",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1416:16:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1416:23:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45883,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45673,
                            "src": "1458:5:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45881,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45671,
                            "src": "1441:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 45882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1448:9:93",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1441:16:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1441:23:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 45885,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1415:50:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 45876,
                  "id": 45886,
                  "nodeType": "Return",
                  "src": "1408:57:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenBalances",
            "nameLocation": "1346:13:93",
            "parameters": {
              "id": 45871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1359:2:93"
            },
            "returnParameters": {
              "id": 45876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45888,
                  "src": "1380:7:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45888,
                  "src": "1389:7:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1379:18:93"
            },
            "scope": 45917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45912,
            "nodeType": "FunctionDefinition",
            "src": "1478:147:93",
            "nodes": [],
            "body": {
              "id": 45911,
              "nodeType": "Block",
              "src": "1537:88:93",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45899,
                                "name": "dex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45665,
                                "src": "1580:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dex_$38783",
                                  "typeString": "contract Dex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Dex_$38783",
                                  "typeString": "contract Dex"
                                }
                              ],
                              "id": 45898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1572:7:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45897,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1572:7:93",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1572:12:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45895,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45668,
                            "src": "1555:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 45896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1562:9:93",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1555:16:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1555:30:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45906,
                                "name": "dex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45665,
                                "src": "1612:3:93",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dex_$38783",
                                  "typeString": "contract Dex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Dex_$38783",
                                  "typeString": "contract Dex"
                                }
                              ],
                              "id": 45905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1604:7:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45904,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1604:7:93",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1604:12:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45902,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45671,
                            "src": "1587:6:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 45903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1594:9:93",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32370,
                          "src": "1587:16:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1587:30:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 45909,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1554:64:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 45894,
                  "id": 45910,
                  "nodeType": "Return",
                  "src": "1547:71:93"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dexBalances",
            "nameLocation": "1487:11:93",
            "parameters": {
              "id": 45889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1498:2:93"
            },
            "returnParameters": {
              "id": 45894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45912,
                  "src": "1519:7:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45912,
                  "src": "1528:7:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1518:18:93"
            },
            "scope": 45917,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45916,
            "nodeType": "FunctionDefinition",
            "src": "1631:29:93",
            "nodes": [],
            "body": {
              "id": 45915,
              "nodeType": "Block",
              "src": "1658:2:93",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:2:93"
            },
            "returnParameters": {
              "id": 45914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:0:93"
            },
            "scope": 45917,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45661,
              "name": "Test",
              "nameLocations": [
                "216:4:93"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13043,
              "src": "216:4:93"
            },
            "id": 45662,
            "nodeType": "InheritanceSpecifier",
            "src": "216:4:93"
          }
        ],
        "canonicalName": "DexTest",
        "contractDependencies": [
          31877,
          38783
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45917,
          13043,
          10113,
          1786
        ],
        "name": "DexTest",
        "nameLocation": "205:7:93",
        "scope": 45918,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 93
}
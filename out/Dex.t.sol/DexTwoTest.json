{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token2",
          "type": "address"
        }
      ],
      "name": "swapMax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50612481806100316000396000f3fe6080604052600436106200007d5760003560e01c8063ba414fa61162000054578063ba414fa61462000103578063f8ccbf47146200012c578063fa7626d4146200014e578063ff4ee643146200016a57600080fd5b80630a9254e4146200008a5780633a76846314620000a45780636f2db99c14620000eb57600080fd5b366200008557005b600080fd5b3480156200009757600080fd5b50620000a26200018f565b005b348015620000b157600080fd5b50620000ce737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f857600080fd5b50620000a2620004ec565b3480156200011057600080fd5b506200011b62000719565b6040519015158152602001620000e2565b3480156200013957600080fd5b506000546200011b9062010000900460ff1681565b3480156200015b57600080fd5b506000546200011b9060ff1681565b3480156200017757600080fd5b50620000a26200018936600462000971565b6200084e565b6040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015620001e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020b9190620009af565b600b80546001600160a01b0319166001600160a01b039290921691909117905560405162000239906200093c565b604051809103906000f08015801562000256573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560405160649062000287906200094a565b608080825260069082015265546f6b656e3160d01b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620002f2573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392831617905560085460405191169060649062000326906200094a565b6080808252600690820152652a37b5b2b71960d11b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000391573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283169081179091556008546009546040516365e3c2a760e11b8152908416600482015260248101929092529091169063cbc7854e90604401600060405180830381600087803b158015620003fc57600080fd5b505af115801562000411573d6000803e3d6000fd5b5050600954600b546040516340c10f1960e01b81526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b1580156200046657600080fd5b505af11580156200047b573d6000803e3d6000fd5b5050600a8054600b546040516340c10f1960e01b81526001600160a01b03918216600482015260248101939093521692506340c10f199150604401600060405180830381600087803b158015620004d157600080fd5b505af1158015620004e6573d6000803e3d6000fd5b50505050565b600b546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200054657600080fd5b505af11580156200055b573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e860248201529116925063095ea7b391506044016020604051808303816000875af1158015620005b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005dc9190620009d6565b50600a5460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801562000634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200065a9190620009d6565b50600854600954604051630df791e560e41b81526001600160a01b039182166004820181905260248201526001604482015291169063df791e5090606401600060405180830381600087803b158015620006b357600080fd5b505af1158015620006c8573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d93506390c5013b9250600480830192600092919082900301818387803b158015620004d157600080fd5b60008054610100900460ff16156200073a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620008495760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091620007cb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000a2c565b60408051601f1981840301815290829052620007e79162000a52565b6000604051808303816000865af19150503d806000811462000826576040519150601f19603f3d011682016040523d82523d6000602084013e6200082b565b606091505b5091505080806020019051810190620008459190620009d6565b9150505b919050565b600854600b546040516370a0823160e01b81526001600160a01b0391821660048201529181169163df791e5091859185918316906370a0823190602401602060405180830381865afa158015620008a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008cf919062000a60565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156200091f57600080fd5b505af115801562000934573d6000803e3d6000fd5b505050505050565b610aac8062000a7b83390190565b610f25806200152783390190565b6001600160a01b03811681146200096e57600080fd5b50565b600080604083850312156200098557600080fd5b8235620009928162000958565b91506020830135620009a48162000958565b809150509250929050565b600060208284031215620009c257600080fd5b8151620009cf8162000958565b9392505050565b600060208284031215620009e957600080fd5b81518015158114620009cf57600080fd5b6000815160005b8181101562000a1d576020818501810151868301520162000a01565b50600093019283525090919050565b6001600160e01b031983168152600062000a4a6004830184620009fa565b949350505050565b6000620009cf8284620009fa565b60006020828403121562000a7357600080fd5b505191905056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a2e8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bfd7e00d11610071578063bfd7e00d1461011f578063cbc7854e14610140578063d21220a714610153578063df791e5014610166578063f2fde38b14610179578063f7888aec1461018c57600080fd5b8063095ea7b3146100ae57806325be124e146100c357806356688700146100f3578063715018a6146101065780638da5cb5b1461010e575b600080fd5b6100c16100bc366004610897565b61019f565b005b6002546100d6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610101366004610897565b61026f565b6100c16102ef565b6000546001600160a01b03166100d6565b61013261012d3660046108c1565b610303565b6040519081526020016100ea565b6100c161014e3660046108fd565b6103f2565b6001546100d6906001600160a01b031681565b6100c16101743660046108c1565b610428565b6100c1610187366004610930565b6106e1565b61013261019a3660046108fd565b61075a565b60015460405163e1f21c6760e01b81526001600160a01b039091169063e1f21c67906101d39033908690869060040161094b565b600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505060025460405163e1f21c6760e01b81526001600160a01b03909116925063e1f21c6791506102399033908690869060040161094b565b600060405180830381600087803b15801561025357600080fd5b505af1158015610267573d6000803e3d6000fd5b505050505050565b6102776107d1565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906102a79033903090869060040161094b565b6020604051808303816000875af11580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea919061096f565b505050565b6102f76107d1565b610301600061082b565b565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610998565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610998565b6103e090846109b1565b6103ea91906109d6565b949350505050565b6103fa6107d1565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b6001546001600160a01b03848116911614801561045257506002546001600160a01b038381169116145b8061048257506002546001600160a01b03848116911614801561048257506001546001600160a01b038381169116145b6104c45760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420746f6b656e7360901b60448201526064015b60405180910390fd5b6040516370a0823160e01b815233600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610998565b10156105715760405162461bcd60e51b815260206004820152601260248201527104e6f7420656e6f75676820746f20737761760741b60448201526064016104bb565b600061057e848484610303565b6040516323b872dd60e01b81529091506001600160a01b038516906323b872dd906105b19033903090879060040161094b565b6020604051808303816000875af11580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f4919061096f565b5060405163095ea7b360e01b8152306004820152602481018290526001600160a01b0384169063095ea7b3906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610666919061096f565b506040516323b872dd60e01b81526001600160a01b038416906323b872dd906106979030903390869060040161094b565b6020604051808303816000875af11580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da919061096f565b5050505050565b6106e96107d1565b6001600160a01b03811661074e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bb565b6107578161082b565b50565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190610998565b90505b92915050565b6000546001600160a01b031633146103015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461089257600080fd5b919050565b600080604083850312156108aa57600080fd5b6108b38361087b565b946020939093013593505050565b6000806000606084860312156108d657600080fd5b6108df8461087b565b92506108ed6020850161087b565b9150604084013590509250925092565b6000806040838503121561091057600080fd5b6109198361087b565b91506109276020840161087b565b90509250929050565b60006020828403121561094257600080fd5b6107c88261087b565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561098157600080fd5b8151801515811461099157600080fd5b9392505050565b6000602082840312156109aa57600080fd5b5051919050565b80820281158282048414176107cb57634e487b7160e01b600052601160045260246000fd5b6000826109f357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c9f43a190b9c8a0f36110591869c20bccf9ef32227d9391d2674c04266d41d1464736f6c63430008110033608060405260405162000f2538038062000f258339810160408190526200002691620001f4565b8383600362000036838262000315565b50600462000045828262000315565b5050506200005a82826200006460201b60201c565b5050505062000409565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b600093810190920192909252949350505050565b600080600080608085870312156200020b57600080fd5b84516001600160401b03808211156200022357600080fd5b620002318883890162000145565b955060208701519150808211156200024857600080fd5b50620002578782880162000145565b604087015190945090506001600160a01b03811681146200027757600080fd5b6060959095015193969295505050565b600181811c908216806200029c57607f821691505b602082108103620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002ec5750805b601f850160051c820191505b818110156200030d57828155600101620002f8565b505050505050565b81516001600160401b038111156200033157620003316200012f565b620003498162000342845462000287565b84620002c3565b602080601f831160018114620003815760008415620003685750858301515b600019600386901b1c1916600185901b1785556200030d565b600085815260208120601f198616915b82811015620003b25788860151825594840194600190910190840162000391565b5085821015620003d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040357634e487b7160e01b600052601160045260246000fd5b92915050565b610b0c80620004196000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610956565b60405180910390f35b61012b6101263660046109c0565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ea565b6102e6565b005b61012b6101703660046109ea565b6102f6565b6040516012815260200161010f565b61012b6101923660046109c0565b61031a565b6101606101a53660046109c0565b61033c565b6101606101b83660046109ea565b61034a565b61013f6101cb366004610a26565b6001600160a01b031660009081526020819052604090205490565b610102610355565b6101606101fc3660046109c0565b610364565b61012b61020f3660046109c0565b61036e565b61012b6102223660046109c0565b6103ee565b61013f610235366004610a48565b6103fc565b60606003805461024990610a7b565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a7b565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610427565b60019150505b92915050565b6102f183838361054b565b505050565b6000336103048582856106f1565b61030f85858561054b565b506001949350505050565b6000336102da81858561032d83836103fc565b6103379190610ab5565b610427565b6103468282610765565b5050565b6102f1838383610427565b60606004805461024990610a7b565b6103468282610824565b6000338161037c82866103fc565b9050838110156103e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030f8286868403610427565b6000336102da81858561054b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d8565b6001600160a01b0382166104ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d8565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d8565b6001600160a01b038316600090815260208190526040902054818110156106895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fd84846103fc565b905060001981146106eb57818110156107585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d8565b6106eb8484848403610427565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d8565b80600260008282546107cd9190610ab5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d8565b6001600160a01b038216600090815260208190526040902054818110156108f85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098357858101830151858201604001528201610967565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109bb57600080fd5b919050565b600080604083850312156109d357600080fd5b6109dc836109a4565b946020939093013593505050565b6000806000606084860312156109ff57600080fd5b610a08846109a4565b9250610a16602085016109a4565b9150604084013590509250925092565b600060208284031215610a3857600080fd5b610a41826109a4565b9392505050565b60008060408385031215610a5b57600080fd5b610a64836109a4565b9150610a72602084016109a4565b90509250929050565b600181811c90821680610a8f57607f821691505b602082108103610aaf57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e057634e487b7160e01b600052601160045260246000fdfea2646970667358221220fb2a8b33a552942ebe1dd4e137542caea9aeee09a52255f7827693ef0339a2de64736f6c63430008110033a26469706673582212206ee152beef8dbd98e9a252831ad2e18e159dd84b30c5b86d4cb77c19bfd2f9fa64736f6c63430008110033",
    "sourceMap": "196:1486:86:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:2;;;;;196:1486:86;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200007d5760003560e01c8063ba414fa61162000054578063ba414fa61462000103578063f8ccbf47146200012c578063fa7626d4146200014e578063ff4ee643146200016a57600080fd5b80630a9254e4146200008a5780633a76846314620000a45780636f2db99c14620000eb57600080fd5b366200008557005b600080fd5b3480156200009757600080fd5b50620000a26200018f565b005b348015620000b157600080fd5b50620000ce737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f857600080fd5b50620000a2620004ec565b3480156200011057600080fd5b506200011b62000719565b6040519015158152602001620000e2565b3480156200013957600080fd5b506000546200011b9062010000900460ff1681565b3480156200015b57600080fd5b506000546200011b9060ff1681565b3480156200017757600080fd5b50620000a26200018936600462000971565b6200084e565b6040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015620001e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020b9190620009af565b600b80546001600160a01b0319166001600160a01b039290921691909117905560405162000239906200093c565b604051809103906000f08015801562000256573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560405160649062000287906200094a565b608080825260069082015265546f6b656e3160d01b60a082015260c06020820181905260039082015262544b3160e81b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f080158015620002f2573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392831617905560085460405191169060649062000326906200094a565b6080808252600690820152652a37b5b2b71960d11b60a082015260c060208201819052600390820152622a259960e91b60e08201526001600160a01b039092166040830152606082015261010001604051809103906000f08015801562000391573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283169081179091556008546009546040516365e3c2a760e11b8152908416600482015260248101929092529091169063cbc7854e90604401600060405180830381600087803b158015620003fc57600080fd5b505af115801562000411573d6000803e3d6000fd5b5050600954600b546040516340c10f1960e01b81526001600160a01b039182166004820152600a6024820152911692506340c10f199150604401600060405180830381600087803b1580156200046657600080fd5b505af11580156200047b573d6000803e3d6000fd5b5050600a8054600b546040516340c10f1960e01b81526001600160a01b03918216600482015260248101939093521692506340c10f199150604401600060405180830381600087803b158015620004d157600080fd5b505af1158015620004e6573d6000803e3d6000fd5b50505050565b600b546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200054657600080fd5b505af11580156200055b573d6000803e3d6000fd5b505060095460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e860248201529116925063095ea7b391506044016020604051808303816000875af1158015620005b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005dc9190620009d6565b50600a5460085460405163095ea7b360e01b81526001600160a01b0391821660048201526103e8602482015291169063095ea7b3906044016020604051808303816000875af115801562000634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200065a9190620009d6565b50600854600954604051630df791e560e41b81526001600160a01b039182166004820181905260248201526001604482015291169063df791e5090606401600060405180830381600087803b158015620006b357600080fd5b505af1158015620006c8573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d93506390c5013b9250600480830192600092919082900301818387803b158015620004d157600080fd5b60008054610100900460ff16156200073a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620008495760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091620007cb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000a2c565b60408051601f1981840301815290829052620007e79162000a52565b6000604051808303816000865af19150503d806000811462000826576040519150601f19603f3d011682016040523d82523d6000602084013e6200082b565b606091505b5091505080806020019051810190620008459190620009d6565b9150505b919050565b600854600b546040516370a0823160e01b81526001600160a01b0391821660048201529181169163df791e5091859185918316906370a0823190602401602060405180830381865afa158015620008a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008cf919062000a60565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156200091f57600080fd5b505af115801562000934573d6000803e3d6000fd5b505050505050565b610aac8062000a7b83390190565b610f25806200152783390190565b6001600160a01b03811681146200096e57600080fd5b50565b600080604083850312156200098557600080fd5b8235620009928162000958565b91506020830135620009a48162000958565b809150509250929050565b600060208284031215620009c257600080fd5b8151620009cf8162000958565b9392505050565b600060208284031215620009e957600080fd5b81518015158114620009cf57600080fd5b6000815160005b8181101562000a1d576020818501810151868301520162000a01565b50600093019283525090919050565b6001600160e01b031983168152600062000a4a6004830184620009fa565b949350505050565b6000620009cf8284620009fa565b60006020828403121562000a7357600080fd5b505191905056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a2e8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bfd7e00d11610071578063bfd7e00d1461011f578063cbc7854e14610140578063d21220a714610153578063df791e5014610166578063f2fde38b14610179578063f7888aec1461018c57600080fd5b8063095ea7b3146100ae57806325be124e146100c357806356688700146100f3578063715018a6146101065780638da5cb5b1461010e575b600080fd5b6100c16100bc366004610897565b61019f565b005b6002546100d6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610101366004610897565b61026f565b6100c16102ef565b6000546001600160a01b03166100d6565b61013261012d3660046108c1565b610303565b6040519081526020016100ea565b6100c161014e3660046108fd565b6103f2565b6001546100d6906001600160a01b031681565b6100c16101743660046108c1565b610428565b6100c1610187366004610930565b6106e1565b61013261019a3660046108fd565b61075a565b60015460405163e1f21c6760e01b81526001600160a01b039091169063e1f21c67906101d39033908690869060040161094b565b600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505060025460405163e1f21c6760e01b81526001600160a01b03909116925063e1f21c6791506102399033908690869060040161094b565b600060405180830381600087803b15801561025357600080fd5b505af1158015610267573d6000803e3d6000fd5b505050505050565b6102776107d1565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906102a79033903090869060040161094b565b6020604051808303816000875af11580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea919061096f565b505050565b6102f76107d1565b610301600061082b565b565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610998565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d69190610998565b6103e090846109b1565b6103ea91906109d6565b949350505050565b6103fa6107d1565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b6001546001600160a01b03848116911614801561045257506002546001600160a01b038381169116145b8061048257506002546001600160a01b03848116911614801561048257506001546001600160a01b038381169116145b6104c45760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420746f6b656e7360901b60448201526064015b60405180910390fd5b6040516370a0823160e01b815233600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610998565b10156105715760405162461bcd60e51b815260206004820152601260248201527104e6f7420656e6f75676820746f20737761760741b60448201526064016104bb565b600061057e848484610303565b6040516323b872dd60e01b81529091506001600160a01b038516906323b872dd906105b19033903090879060040161094b565b6020604051808303816000875af11580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f4919061096f565b5060405163095ea7b360e01b8152306004820152602481018290526001600160a01b0384169063095ea7b3906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610666919061096f565b506040516323b872dd60e01b81526001600160a01b038416906323b872dd906106979030903390869060040161094b565b6020604051808303816000875af11580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da919061096f565b5050505050565b6106e96107d1565b6001600160a01b03811661074e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bb565b6107578161082b565b50565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190610998565b90505b92915050565b6000546001600160a01b031633146103015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461089257600080fd5b919050565b600080604083850312156108aa57600080fd5b6108b38361087b565b946020939093013593505050565b6000806000606084860312156108d657600080fd5b6108df8461087b565b92506108ed6020850161087b565b9150604084013590509250925092565b6000806040838503121561091057600080fd5b6109198361087b565b91506109276020840161087b565b90509250929050565b60006020828403121561094257600080fd5b6107c88261087b565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561098157600080fd5b8151801515811461099157600080fd5b9392505050565b6000602082840312156109aa57600080fd5b5051919050565b80820281158282048414176107cb57634e487b7160e01b600052601160045260246000fd5b6000826109f357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c9f43a190b9c8a0f36110591869c20bccf9ef32227d9391d2674c04266d41d1464736f6c63430008110033608060405260405162000f2538038062000f258339810160408190526200002691620001f4565b8383600362000036838262000315565b50600462000045828262000315565b5050506200005a82826200006460201b60201c565b5050505062000409565b6001600160a01b038216620000bf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000d39190620003e1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b600093810190920192909252949350505050565b600080600080608085870312156200020b57600080fd5b84516001600160401b03808211156200022357600080fd5b620002318883890162000145565b955060208701519150808211156200024857600080fd5b50620002578782880162000145565b604087015190945090506001600160a01b03811681146200027757600080fd5b6060959095015193969295505050565b600181811c908216806200029c57607f821691505b602082108103620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012a57600081815260208120601f850160051c81016020861015620002ec5750805b601f850160051c820191505b818110156200030d57828155600101620002f8565b505050505050565b81516001600160401b038111156200033157620003316200012f565b620003498162000342845462000287565b84620002c3565b602080601f831160018114620003815760008415620003685750858301515b600019600386901b1c1916600185901b1785556200030d565b600085815260208120601f198616915b82811015620003b25788860151825594840194600190910190840162000391565b5085821015620003d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200040357634e487b7160e01b600052601160045260246000fd5b92915050565b610b0c80620004196000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101ee578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e1461022757600080fd5b806340c10f191461019757806356189cb4146101aa57806370a08231146101bd57806395d89b41146101e657600080fd5b8063222f5be0116100d3578063222f5be01461014d57806323b872dd14610162578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610956565b60405180910390f35b61012b6101263660046109c0565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b3660046109ea565b6102e6565b005b61012b6101703660046109ea565b6102f6565b6040516012815260200161010f565b61012b6101923660046109c0565b61031a565b6101606101a53660046109c0565b61033c565b6101606101b83660046109ea565b61034a565b61013f6101cb366004610a26565b6001600160a01b031660009081526020819052604090205490565b610102610355565b6101606101fc3660046109c0565b610364565b61012b61020f3660046109c0565b61036e565b61012b6102223660046109c0565b6103ee565b61013f610235366004610a48565b6103fc565b60606003805461024990610a7b565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610a7b565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da818585610427565b60019150505b92915050565b6102f183838361054b565b505050565b6000336103048582856106f1565b61030f85858561054b565b506001949350505050565b6000336102da81858561032d83836103fc565b6103379190610ab5565b610427565b6103468282610765565b5050565b6102f1838383610427565b60606004805461024990610a7b565b6103468282610824565b6000338161037c82866103fc565b9050838110156103e15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030f8286868403610427565b6000336102da81858561054b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d8565b6001600160a01b0382166104ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d8565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d8565b6001600160a01b038316600090815260208190526040902054818110156106895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b60006106fd84846103fc565b905060001981146106eb57818110156107585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d8565b6106eb8484848403610427565b6001600160a01b0382166107bb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d8565b80600260008282546107cd9190610ab5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d8565b6001600160a01b038216600090815260208190526040902054818110156108f85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600060208083528351808285015260005b8181101561098357858101830151858201604001528201610967565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109bb57600080fd5b919050565b600080604083850312156109d357600080fd5b6109dc836109a4565b946020939093013593505050565b6000806000606084860312156109ff57600080fd5b610a08846109a4565b9250610a16602085016109a4565b9150604084013590509250925092565b600060208284031215610a3857600080fd5b610a41826109a4565b9392505050565b60008060408385031215610a5b57600080fd5b610a64836109a4565b9150610a72602084016109a4565b90509250929050565b600181811c90821680610a8f57607f821691505b602082108103610aaf57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e057634e487b7160e01b600052601160045260246000fdfea2646970667358221220fb2a8b33a552942ebe1dd4e137542caea9aeee09a52255f7827693ef0339a2de64736f6c63430008110033a26469706673582212206ee152beef8dbd98e9a252831ad2e18e159dd84b30c5b86d4cb77c19bfd2f9fa64736f6c63430008110033",
    "sourceMap": "196:1486:86:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:371;;;;;;;;;;;;;:::i;:::-;;321:38:2;;;;;;;;;;-1:-1:-1;321:38:2;250:64;321:38;;;;;-1:-1:-1;;;;;190:32:115;;;172:51;;160:2;145:18;321:38:2;;;;;;;;684:520:86;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;399:14:115;;392:22;374:41;;362:2;347:18;1819:584:0;234:187:115;170:28:2;;;;;;;;;;-1:-1:-1;170:28:2;;;;;;;;;;;1572:26:0;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;1210:141:86;;;;;;;;;;-1:-1:-1;1210:141:86;;;;;:::i;:::-;;:::i;307:371::-;349:10;;-1:-1:-1;;;;;;349:10:86;;357:1;349:10;;;1160:25:115;250:64:2;;349:7:86;;1133:18:115;;349:10:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;341:5;:18;;-1:-1:-1;;;;;;341:18:86;-1:-1:-1;;;;;341:18:86;;;;;;;;;;404:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;398:3:86;:15;;-1:-1:-1;;;;;;398:15:86;-1:-1:-1;;;;;398:15:86;;;;;;;;;432:49;;477:3;;432:49;;;:::i;:::-;1828:3:115;1810:22;;;1869:1;1848:19;;;1841:30;-1:-1:-1;;;1902:3:115;1887:19;;1880:37;1955:3;1948:4;1933:20;;1926:33;;;1996:1;1975:19;;;1968:30;-1:-1:-1;;;2029:3:115;2014:19;;2007:34;-1:-1:-1;;;;;2113:32:115;;;2108:2;2093:18;;2086:60;-1:-1:-1;2162:18:115;;2155:34;2073:3;2058:19;432:49:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;423:6:86;:58;;-1:-1:-1;;;;;;423:58:86;-1:-1:-1;;;;;423:58:86;;;;;;539:3;;500:49;;539:3;;;545;;500:49;;;:::i;:::-;2569:3:115;2551:22;;;2610:1;2589:19;;;2582:30;-1:-1:-1;;;2643:3:115;2628:19;;2621:37;2696:3;2689:4;2674:20;;2667:33;;;2737:1;2716:19;;;2709:30;-1:-1:-1;;;2770:3:115;2755:19;;2748:34;-1:-1:-1;;;;;2854:32:115;;;2849:2;2834:18;;2827:60;-1:-1:-1;2903:18:115;;2896:34;2814:3;2799:19;500:49:86;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;491:6:86;:58;;-1:-1:-1;;;;;;491:58:86;-1:-1:-1;;;;;491:58:86;;;;;;;;;559:3;;581:6;;559:47;;-1:-1:-1;;;559:47:86;;581:6;;;559:47;;;3153:34:115;3203:18;;;3196:43;;;;559:3:86;;;;:13;;3088:18:115;;559:47:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;617:6:86;;629:5;;617:22;;-1:-1:-1;;;617:22:86;;-1:-1:-1;;;;;629:5:86;;;617:22;;;3433:51:115;636:2:86;3500:18:115;;;3493:34;617:6:86;;;-1:-1:-1;617:11:86;;-1:-1:-1;3406:18:115;;617:22:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;649:6:86;;;661:5;;649:22;;-1:-1:-1;;;649:22:86;;-1:-1:-1;;;;;661:5:86;;;649:22;;;3433:51:115;3500:18;;;3493:34;;;;649:6:86;;-1:-1:-1;649:11:86;;-1:-1:-1;3406:18:115;;649:22:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:371::o;684:520::-;737:5;;723:20;;-1:-1:-1;;;723:20:86;;-1:-1:-1;;;;;737:5:86;;;723:20;;;172:51:115;250:64:2;;723:13:86;;145:18:115;;723:20:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;753:6:86;;776:3;;753:34;;-1:-1:-1;;;753:34:86;;-1:-1:-1;;;;;776:3:86;;;753:34;;;3433:51:115;782:4:86;3500:18:115;;;3493:34;753:6:86;;;-1:-1:-1;753:14:86;;-1:-1:-1;3406:18:115;;753:34:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;797:6:86;;820:3;;797:34;;-1:-1:-1;;;797:34:86;;-1:-1:-1;;;;;820:3:86;;;797:34;;;3433:51:115;826:4:86;3500:18:115;;;3493:34;797:6:86;;;:14;;3406:18:115;;797:34:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1023:3:86;;1040:6;;1023:45;;-1:-1:-1;;;1023:45:86;;-1:-1:-1;;;;;1040:6:86;;;1023:45;;;4566:34:115;;;4616:18;;;4609:43;1023:3:86;4668:18:115;;;4661:34;1023:3:86;;;:8;;4501:18:115;;1023:45:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1183:14:86;;;-1:-1:-1;;;1183:14:86;;;;250:64:2;;-1:-1:-1;1183:12:86;;-1:-1:-1;1183:14:86;;;;;274:37:2;;1183:14:86;;;;;;;274:37:2;250:64;1183:14:86;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;3433:51:115;;;-1:-1:-1;;;3500:18:115;;;3493:34;2196:43:0;;;;;;;;;3406:18:115;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1210:141:86:-;1274:3;;1337:5;;1319:24;;-1:-1:-1;;;1319:24:86;;-1:-1:-1;;;;;1337:5:86;;;1319:24;;;172:51:115;1274:3:86;;;;:8;;1291:7;;1309;;1319:17;;;;;145:18:115;;1319:24:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1274:70;;-1:-1:-1;;;;;;1274:70:86;;;;;;;-1:-1:-1;;;;;4584:15:115;;;1274:70:86;;;4566:34:115;4636:15;;;;4616:18;;;4609:43;4668:18;;;4661:34;4501:18;;1274:70:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1210:141;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;426:138:115:-;-1:-1:-1;;;;;508:31:115;;498:42;;488:70;;554:1;551;544:12;488:70;426:138;:::o;569:432::-;667:6;675;728:2;716:9;707:7;703:23;699:32;696:52;;;744:1;741;734:12;696:52;783:9;770:23;802:38;834:5;802:38;:::i;:::-;859:5;-1:-1:-1;916:2:115;901:18;;888:32;929:40;888:32;929:40;:::i;:::-;988:7;978:17;;;569:432;;;;;:::o;1196:258::-;1266:6;1319:2;1307:9;1298:7;1294:23;1290:32;1287:52;;;1335:1;1332;1325:12;1287:52;1367:9;1361:16;1386:38;1418:5;1386:38;:::i;:::-;1443:5;1196:258;-1:-1:-1;;;1196:258:115:o;4036:277::-;4103:6;4156:2;4144:9;4135:7;4131:23;4127:32;4124:52;;;4172:1;4169;4162:12;4124:52;4204:9;4198:16;4257:5;4250:13;4243:21;4236:5;4233:32;4223:60;;4279:1;4276;4269:12;4985:322;5026:3;5064:5;5058:12;5088:1;5098:128;5112:6;5109:1;5106:13;5098:128;;;5209:4;5194:13;;;5190:24;;5184:31;5171:11;;;5164:52;5127:12;5098:128;;;-1:-1:-1;5281:1:115;5245:16;;5270:13;;;-1:-1:-1;5245:16:115;;4985:322;-1:-1:-1;4985:322:115:o;5312:278::-;-1:-1:-1;;;;;;5497:33:115;;5485:46;;5467:3;5547:37;5581:1;5572:11;;5564:6;5547:37;:::i;:::-;5540:44;5312:278;-1:-1:-1;;;;5312:278:115:o;5595:189::-;5724:3;5749:29;5774:3;5766:6;5749:29;:::i;5789:184::-;5859:6;5912:2;5900:9;5891:7;5887:23;5883:32;5880:52;;;5928:1;5925;5918:12;5880:52;-1:-1:-1;5951:16:115;;5789:184;-1:-1:-1;5789:184:115:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "swapMax(address,address)": "ff4ee643",
    "testAttack()": "6f2db99c",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token2\",\"type\":\"address\"}],\"name\":\"swapMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethernaut/Dex.t.sol\":\"DexTwoTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol\":{\"keccak256\":\"0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27\",\"dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ethernaut/level_22/Dex.sol\":{\"keccak256\":\"0xd66ad03f984f8c8f52d5b51041ab26518be750bae4d28ed0c08fd11135f7b0a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7076e107b81565ecff972fa7380a3faadc1a49533eeb5d2b5e45e3c40be192d6\",\"dweb:/ipfs/QmXQTLmRwZ47iNoDD4xXoQdPbZQmLJTVi7aNf68y6z8DDc\"]},\"test/ethernaut/Dex.t.sol\":{\"keccak256\":\"0xe9260ac7a64a01ddd4d32a91a869b6265b7af17e8781de8e95fd6a942b5be023\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3357be59f5ac3cd72b412ca1f7ab0747d0dbb5556154d37d174f439fb8b9ca15\",\"dweb:/ipfs/QmW38UZSEqx6JjersHD1mWrJxLH8YVwEqNhivvxGcHxjBh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_token1",
              "type": "address"
            },
            {
              "internalType": "contract ERC20",
              "name": "_token2",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapMax"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAttack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ethernaut/Dex.t.sol": "DexTwoTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol": {
        "keccak256": "0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490",
        "urls": [
          "bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27",
          "dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ethernaut/level_22/Dex.sol": {
        "keccak256": "0xd66ad03f984f8c8f52d5b51041ab26518be750bae4d28ed0c08fd11135f7b0a2",
        "urls": [
          "bzz-raw://7076e107b81565ecff972fa7380a3faadc1a49533eeb5d2b5e45e3c40be192d6",
          "dweb:/ipfs/QmXQTLmRwZ47iNoDD4xXoQdPbZQmLJTVi7aNf68y6z8DDc"
        ],
        "license": "MIT"
      },
      "test/ethernaut/Dex.t.sol": {
        "keccak256": "0xe9260ac7a64a01ddd4d32a91a869b6265b7af17e8781de8e95fd6a942b5be023",
        "urls": [
          "bzz-raw://3357be59f5ac3cd72b412ca1f7ab0747d0dbb5556154d37d174f439fb8b9ca15",
          "dweb:/ipfs/QmW38UZSEqx6JjersHD1mWrJxLH8YVwEqNhivvxGcHxjBh"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ethernaut/Dex.t.sol",
    "id": 44378,
    "exportedSymbols": {
      "Context": [
        34450
      ],
      "DSTest": [
        1786
      ],
      "Dex": [
        38562
      ],
      "DexTwoTest": [
        44377
      ],
      "ERC20": [
        32637
      ],
      "ERC20Mock": [
        31877
      ],
      "IERC20": [
        32715
      ],
      "IERC20Metadata": [
        32784
      ],
      "Ownable": [
        31792
      ],
      "Script": [
        10113
      ],
      "StdStorage": [
        13141
      ],
      "SwappableToken": [
        38618
      ],
      "Test": [
        13043
      ],
      "Vm": [
        15162
      ],
      "console": [
        23226
      ],
      "console2": [
        31290
      ],
      "stdError": [
        13113
      ],
      "stdJson": [
        10473
      ],
      "stdMath": [
        14382
      ],
      "stdStorage": [
        14243
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1644:86",
    "nodes": [
      {
        "id": 44165,
        "nodeType": "PragmaDirective",
        "src": "39:24:86",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 44166,
        "nodeType": "ImportDirective",
        "src": "65:28:86",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44378,
        "sourceUnit": 14383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44167,
        "nodeType": "ImportDirective",
        "src": "94:46:86",
        "nodes": [],
        "absolutePath": "src/ethernaut/level_22/Dex.sol",
        "file": "../../src/ethernaut/level_22/Dex.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44378,
        "sourceUnit": 38619,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44168,
        "nodeType": "ImportDirective",
        "src": "141:53:86",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
        "file": "@openzeppelin/contracts/mocks/ERC20Mock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44378,
        "sourceUnit": 31878,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44377,
        "nodeType": "ContractDefinition",
        "src": "196:1486:86",
        "nodes": [
          {
            "id": 44173,
            "nodeType": "VariableDeclaration",
            "src": "230:7:86",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dex",
            "nameLocation": "234:3:86",
            "scope": 44377,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Dex_$38562",
              "typeString": "contract Dex"
            },
            "typeName": {
              "id": 44172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44171,
                "name": "Dex",
                "nameLocations": [
                  "230:3:86"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38562,
                "src": "230:3:86"
              },
              "referencedDeclaration": 38562,
              "src": "230:3:86",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dex_$38562",
                "typeString": "contract Dex"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44176,
            "nodeType": "VariableDeclaration",
            "src": "243:16:86",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "253:6:86",
            "scope": 44377,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 44175,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44174,
                "name": "ERC20Mock",
                "nameLocations": [
                  "243:9:86"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "243:9:86"
              },
              "referencedDeclaration": 31877,
              "src": "243:9:86",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44179,
            "nodeType": "VariableDeclaration",
            "src": "265:16:86",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token2",
            "nameLocation": "275:6:86",
            "scope": 44377,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 44178,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44177,
                "name": "ERC20Mock",
                "nameLocations": [
                  "265:9:86"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31877,
                "src": "265:9:86"
              },
              "referencedDeclaration": 31877,
              "src": "265:9:86",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44181,
            "nodeType": "VariableDeclaration",
            "src": "287:13:86",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "295:5:86",
            "scope": 44377,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44180,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:86",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44254,
            "nodeType": "FunctionDefinition",
            "src": "307:371:86",
            "nodes": [],
            "body": {
              "id": 44253,
              "nodeType": "Block",
              "src": "331:347:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44184,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44181,
                      "src": "341:5:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 44187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "357:1:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 44185,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9881,
                          "src": "349:2:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$15162",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 44186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "352:4:86",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14454,
                        "src": "349:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 44188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "349:10:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "341:18:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44190,
                  "nodeType": "ExpressionStatement",
                  "src": "341:18:86"
                },
                {
                  "expression": {
                    "id": 44196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44191,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44173,
                      "src": "398:3:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dex_$38562",
                        "typeString": "contract Dex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "404:7:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Dex_$38562_$",
                          "typeString": "function () returns (contract Dex)"
                        },
                        "typeName": {
                          "id": 44193,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44192,
                            "name": "Dex",
                            "nameLocations": [
                              "408:3:86"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38562,
                            "src": "408:3:86"
                          },
                          "referencedDeclaration": 38562,
                          "src": "408:3:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Dex_$38562",
                            "typeString": "contract Dex"
                          }
                        }
                      },
                      "id": 44195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "404:9:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dex_$38562",
                        "typeString": "contract Dex"
                      }
                    },
                    "src": "398:15:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dex_$38562",
                      "typeString": "contract Dex"
                    }
                  },
                  "id": 44197,
                  "nodeType": "ExpressionStatement",
                  "src": "398:15:86"
                },
                {
                  "expression": {
                    "id": 44210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44198,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44176,
                      "src": "423:6:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e31",
                          "id": 44202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "446:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6f247d6fd2cb7b6926049e1109fcaad79fd6f20e4e7099fa7d57435ac4635439",
                            "typeString": "literal_string \"Token1\""
                          },
                          "value": "Token1"
                        },
                        {
                          "hexValue": "544b31",
                          "id": 44203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "456:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          "value": "TK1"
                        },
                        {
                          "arguments": [
                            {
                              "id": 44206,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44173,
                              "src": "471:3:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dex_$38562",
                                "typeString": "contract Dex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dex_$38562",
                                "typeString": "contract Dex"
                              }
                            ],
                            "id": 44205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "463:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44204,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "463:7:86",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "463:12:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "313030",
                          "id": 44208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "477:3:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6f247d6fd2cb7b6926049e1109fcaad79fd6f20e4e7099fa7d57435ac4635439",
                            "typeString": "literal_string \"Token1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5b8aad1af7a7755755e7bb029b1842c4b2be55785a56f5cdd5c01bcfa66dcc99",
                            "typeString": "literal_string \"TK1\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 44201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "432:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 44200,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44199,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "436:9:86"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "436:9:86"
                          },
                          "referencedDeclaration": 31877,
                          "src": "436:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 44209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "432:49:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "423:58:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 44211,
                  "nodeType": "ExpressionStatement",
                  "src": "423:58:86"
                },
                {
                  "expression": {
                    "id": 44224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44212,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44179,
                      "src": "491:6:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e32",
                          "id": 44216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "514:8:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2c15a7b8cfc5bd79acf3c235976ff8f776eab68c57adce369465398e58654531",
                            "typeString": "literal_string \"Token2\""
                          },
                          "value": "Token2"
                        },
                        {
                          "hexValue": "544b32",
                          "id": 44217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "524:5:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          "value": "TK2"
                        },
                        {
                          "arguments": [
                            {
                              "id": 44220,
                              "name": "dex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44173,
                              "src": "539:3:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Dex_$38562",
                                "typeString": "contract Dex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Dex_$38562",
                                "typeString": "contract Dex"
                              }
                            ],
                            "id": 44219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "531:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44218,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "531:7:86",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "531:12:86",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "313030",
                          "id": 44222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "545:3:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2c15a7b8cfc5bd79acf3c235976ff8f776eab68c57adce369465398e58654531",
                            "typeString": "literal_string \"Token2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4920950a4ac3f0a942c5d360e7c2a1d6ac16f7927b94c5d1ace156c93112a152",
                            "typeString": "literal_string \"TK2\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "id": 44215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "500:13:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_ERC20Mock_$31877_$",
                          "typeString": "function (string memory,string memory,address,uint256) payable returns (contract ERC20Mock)"
                        },
                        "typeName": {
                          "id": 44214,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44213,
                            "name": "ERC20Mock",
                            "nameLocations": [
                              "504:9:86"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31877,
                            "src": "504:9:86"
                          },
                          "referencedDeclaration": 31877,
                          "src": "504:9:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      },
                      "id": 44223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "500:49:86",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "491:58:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 44225,
                  "nodeType": "ExpressionStatement",
                  "src": "491:58:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44231,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44176,
                            "src": "581:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 44230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "573:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44229,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "573:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "573:15:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44235,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44179,
                            "src": "598:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 44234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "590:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44233,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "590:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "590:15:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44226,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44173,
                        "src": "559:3:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dex_$38562",
                          "typeString": "contract Dex"
                        }
                      },
                      "id": 44228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "563:9:86",
                      "memberName": "setTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38368,
                      "src": "559:13:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 44237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:47:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44238,
                  "nodeType": "ExpressionStatement",
                  "src": "559:47:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44242,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44181,
                        "src": "629:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "636:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 44239,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44176,
                        "src": "617:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 44241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "624:4:86",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31831,
                      "src": "617:11:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:22:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44245,
                  "nodeType": "ExpressionStatement",
                  "src": "617:22:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44249,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44181,
                        "src": "661:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 44246,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44179,
                        "src": "649:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 44248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "656:4:86",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31831,
                      "src": "649:11:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:22:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44252,
                  "nodeType": "ExpressionStatement",
                  "src": "649:22:86"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "316:5:86",
            "parameters": {
              "id": 44182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:2:86"
            },
            "returnParameters": {
              "id": 44183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:86"
            },
            "scope": 44377,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44303,
            "nodeType": "FunctionDefinition",
            "src": "684:520:86",
            "nodes": [],
            "body": {
              "id": 44302,
              "nodeType": "Block",
              "src": "713:491:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44260,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44181,
                        "src": "737:5:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44257,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "723:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15162",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "726:10:86",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14612,
                      "src": "723:13:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:20:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44262,
                  "nodeType": "ExpressionStatement",
                  "src": "723:20:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44268,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44173,
                            "src": "776:3:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$38562",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$38562",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 44267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "768:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44266,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "768:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "768:12:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "782:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44263,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44176,
                        "src": "753:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 44265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "760:7:86",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32217,
                      "src": "753:14:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:34:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44272,
                  "nodeType": "ExpressionStatement",
                  "src": "753:34:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44278,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44173,
                            "src": "820:3:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Dex_$38562",
                              "typeString": "contract Dex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Dex_$38562",
                              "typeString": "contract Dex"
                            }
                          ],
                          "id": 44277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "812:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "812:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "812:12:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 44280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "826:4:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 44273,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44179,
                        "src": "797:6:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 44275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "804:7:86",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32217,
                      "src": "797:14:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:34:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44282,
                  "nodeType": "ExpressionStatement",
                  "src": "797:34:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44288,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44176,
                            "src": "1040:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 44287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1032:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44286,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1032:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1032:15:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44292,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44176,
                            "src": "1057:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 44291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1049:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1049:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1049:15:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1066:1:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 44283,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44173,
                        "src": "1023:3:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dex_$38562",
                          "typeString": "contract Dex"
                        }
                      },
                      "id": 44285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1027:4:86",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38480,
                      "src": "1023:8:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 44295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:45:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44296,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:45:86"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44297,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "1183:2:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15162",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1186:9:86",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14629,
                      "src": "1183:12:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 44300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:14:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44301,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:14:86"
                }
              ]
            },
            "functionSelector": "6f2db99c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAttack",
            "nameLocation": "693:10:86",
            "parameters": {
              "id": 44255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "703:2:86"
            },
            "returnParameters": {
              "id": 44256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:0:86"
            },
            "scope": 44377,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44330,
            "nodeType": "FunctionDefinition",
            "src": "1210:141:86",
            "nodes": [],
            "body": {
              "id": 44329,
              "nodeType": "Block",
              "src": "1264:87:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44317,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44306,
                            "src": "1291:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32637",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$32637",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 44316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1283:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44315,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1283:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:16:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44321,
                            "name": "_token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44309,
                            "src": "1309:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32637",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$32637",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 44320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1301:7:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1301:7:86",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1301:16:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44325,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44181,
                            "src": "1337:5:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44323,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44306,
                            "src": "1319:7:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$32637",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 44324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1327:9:86",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32149,
                          "src": "1319:17:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1319:24:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44312,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44173,
                        "src": "1274:3:86",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Dex_$38562",
                          "typeString": "contract Dex"
                        }
                      },
                      "id": 44314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1278:4:86",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38480,
                      "src": "1274:8:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 44327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:70:86",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44328,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:70:86"
                }
              ]
            },
            "functionSelector": "ff4ee643",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapMax",
            "nameLocation": "1219:7:86",
            "parameters": {
              "id": 44310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44306,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "1233:7:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 44330,
                  "src": "1227:13:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$32637",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 44305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44304,
                      "name": "ERC20",
                      "nameLocations": [
                        "1227:5:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32637,
                      "src": "1227:5:86"
                    },
                    "referencedDeclaration": 32637,
                    "src": "1227:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32637",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44309,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nameLocation": "1248:7:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 44330,
                  "src": "1242:13:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$32637",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 44308,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44307,
                      "name": "ERC20",
                      "nameLocations": [
                        "1242:5:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32637,
                      "src": "1242:5:86"
                    },
                    "referencedDeclaration": 32637,
                    "src": "1242:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32637",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:30:86"
            },
            "returnParameters": {
              "id": 44311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:86"
            },
            "scope": 44377,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44348,
            "nodeType": "FunctionDefinition",
            "src": "1357:135:86",
            "nodes": [],
            "body": {
              "id": 44347,
              "nodeType": "Block",
              "src": "1418:74:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 44339,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44181,
                            "src": "1453:5:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44337,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44176,
                            "src": "1436:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 44338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1443:9:86",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32149,
                          "src": "1436:16:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1436:23:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44343,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44181,
                            "src": "1478:5:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44341,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44179,
                            "src": "1461:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 44342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1468:9:86",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32149,
                          "src": "1461:16:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1461:23:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 44345,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1435:50:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 44336,
                  "id": 44346,
                  "nodeType": "Return",
                  "src": "1428:57:86"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenBalances",
            "nameLocation": "1366:13:86",
            "parameters": {
              "id": 44331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1379:2:86"
            },
            "returnParameters": {
              "id": 44336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44348,
                  "src": "1400:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44335,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44348,
                  "src": "1409:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1399:18:86"
            },
            "scope": 44377,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44372,
            "nodeType": "FunctionDefinition",
            "src": "1498:147:86",
            "nodes": [],
            "body": {
              "id": 44371,
              "nodeType": "Block",
              "src": "1557:88:86",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44359,
                                "name": "dex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44173,
                                "src": "1600:3:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dex_$38562",
                                  "typeString": "contract Dex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Dex_$38562",
                                  "typeString": "contract Dex"
                                }
                              ],
                              "id": 44358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1592:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44357,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1592:7:86",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1592:12:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44355,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44176,
                            "src": "1575:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 44356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1582:9:86",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32149,
                          "src": "1575:16:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1575:30:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44366,
                                "name": "dex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44173,
                                "src": "1632:3:86",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Dex_$38562",
                                  "typeString": "contract Dex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Dex_$38562",
                                  "typeString": "contract Dex"
                                }
                              ],
                              "id": 44365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1624:7:86",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44364,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1624:7:86",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1624:12:86",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44362,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44179,
                            "src": "1607:6:86",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$31877",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 44363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1614:9:86",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32149,
                          "src": "1607:16:86",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1607:30:86",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 44369,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1574:64:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 44354,
                  "id": 44370,
                  "nodeType": "Return",
                  "src": "1567:71:86"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dexBalances",
            "nameLocation": "1507:11:86",
            "parameters": {
              "id": 44349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:2:86"
            },
            "returnParameters": {
              "id": 44354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44372,
                  "src": "1539:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44372,
                  "src": "1548:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:18:86"
            },
            "scope": 44377,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44376,
            "nodeType": "FunctionDefinition",
            "src": "1651:29:86",
            "nodes": [],
            "body": {
              "id": 44375,
              "nodeType": "Block",
              "src": "1678:2:86",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:2:86"
            },
            "returnParameters": {
              "id": 44374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:0:86"
            },
            "scope": 44377,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44169,
              "name": "Test",
              "nameLocations": [
                "219:4:86"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13043,
              "src": "219:4:86"
            },
            "id": 44170,
            "nodeType": "InheritanceSpecifier",
            "src": "219:4:86"
          }
        ],
        "canonicalName": "DexTwoTest",
        "contractDependencies": [
          31877,
          38562
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44377,
          13043,
          10113,
          1786
        ],
        "name": "DexTwoTest",
        "nameLocation": "205:10:86",
        "scope": 44378,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 86
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_carToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "carMarket",
      "outputs": [
        {
          "internalType": "contract ICarMarket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_carOwner",
          "type": "address"
        }
      ],
      "name": "getCarCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCarFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCarToken",
      "outputs": [
        {
          "internalType": "contract ICarToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "isExistingCustomer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_color",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_model",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_plateNumber",
          "type": "string"
        }
      ],
      "name": "purchaseCar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "purchasedCars",
      "outputs": [
        {
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "model",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "plateNumber",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setCarFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604051610ddf380380610ddf83398101604081905261002f916100ad565b6100383361005d565b600280546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610cf3806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806396eef7d81161007157806396eef7d8146102e7578063a3e3fa8614610322578063ccaa46d514610335578063d93e8a9514610357578063e74e6a3914610368578063f2fde38b1461037b576100a9565b80630c96ff9c1461025a5780633a2deef314610284578063578aaba4146102bb578063715018a6146102ce5780638da5cb5b146102d6575b600380546001600160a01b031916309081179091556002546001546040516370a0823160e01b815260048101939093526001600160a01b039182169263095ea7b3929091169083906370a0823190602401602060405180830381865afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b91906108eb565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa9190610904565b506001546040516000916001600160a01b0316906101cb908390369061092d565b600060405180830381855af49150503d8060008114610206576040519150601f19603f3d011682016040523d82523d6000602084013e61020b565b606091505b50509050806102585760405162461bcd60e51b815260206004820152601460248201527311195b1959d85d194818d85b1b0819985a5b195960621b60448201526064015b60405180910390fd5b005b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6102ad610292366004610954565b6001600160a01b031660009081526004602052604090205490565b60405190815260200161027b565b6102586102c9366004610954565b61038e565b6102586103b8565b6000546001600160a01b0316610267565b6103126102f5366004610954565b6001600160a01b0316600090815260046020526040902054151590565b604051901515815260200161027b565b610258610330366004610a12565b6103cc565b610348610343366004610a9a565b6105bf565b60405161027b93929190610b0a565b6002546001600160a01b0316610267565b600354610267906001600160a01b031681565b610258610389366004610954565b610784565b6103966107fd565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103c06107fd565b6103ca6000610857565b565b6103d5336108a7565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561041d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044191906108eb565b10156104825760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f756768206d6f6e657960801b604482015260640161024f565b6002546001600160a01b03166323b872dd336104a66000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152670de0b6b3a764000060448201526064016020604051808303816000875af1158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610904565b503360009081526004602052604081208054829061054290610b4d565b9182905550604080516060810182528681526020808201879052818301869052336000908152600582528381208582529091529190912081519293509091819061058c9082610bfd565b50602082015160018201906105a19082610bfd565b50604082015160028201906105b69082610bfd565b50505050505050565b60056020908152600092835260408084209091529082529020805481906105e590610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461061190610b74565b801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b50505050509080600101805461067390610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90610b74565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b50505050509080600201805461070190610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461072d90610b74565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050505050905083565b61078c6107fd565b6001600160a01b0381166107f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161024f565b6107fa81610857565b50565b6000546001600160a01b031633146103ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526004602052604081205481036108d55750670de0b6b3a7640000919050565b5069152d02c7e14af6800000919050565b919050565b6000602082840312156108fd57600080fd5b5051919050565b60006020828403121561091657600080fd5b8151801515811461092657600080fd5b9392505050565b8183823760009101908152919050565b80356001600160a01b03811681146108e657600080fd5b60006020828403121561096657600080fd5b6109268261093d565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813567ffffffffffffffff808211156109b1576109b161096f565b604051601f8301601f19908116603f011681019082821181831017156109d9576109d961096f565b816040528381528660208588010111156109f257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a2757600080fd5b833567ffffffffffffffff80821115610a3f57600080fd5b610a4b87838801610985565b94506020860135915080821115610a6157600080fd5b610a6d87838801610985565b93506040860135915080821115610a8357600080fd5b50610a9086828701610985565b9150509250925092565b60008060408385031215610aad57600080fd5b610ab68361093d565b946020939093013593505050565b6000815180845260005b81811015610aea57602081850181015186830182015201610ace565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610b1d6060830186610ac4565b8281036020840152610b2f8186610ac4565b90508281036040840152610b438185610ac4565b9695505050505050565b600060018201610b6d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610b8857607f821691505b602082108103610ba857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bf857600081815260208120601f850160051c81016020861015610bd55750805b601f850160051c820191505b81811015610bf457828155600101610be1565b5050505b505050565b815167ffffffffffffffff811115610c1757610c1761096f565b610c2b81610c258454610b74565b84610bae565b602080601f831160018114610c605760008415610c485750858301515b600019600386901b1c1916600185901b178555610bf4565b600085815260208120601f198616915b82811015610c8f57888601518255948401946001909101908401610c70565b5085821015610cad5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200f073793a1242137aa59a402e6cde741fee2288fa8ecc6535025b2d64bb79e5c64736f6c63430008110033",
    "sourceMap": "754:3442:16:-:0;;;1298:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:7;719:10:11;936:18:7;:32::i;:::-;1339:8:16;:31;;-1:-1:-1;;;;;;1339:31:16;-1:-1:-1;;;;;1339:31:16;;;;;;;;;;754:3442;;2433:187:7;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:7;;;-1:-1:-1;;;;;;2541:17:7;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:23:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:23;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:23:o;:::-;754:3442:16;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806396eef7d81161007157806396eef7d8146102e7578063a3e3fa8614610322578063ccaa46d514610335578063d93e8a9514610357578063e74e6a3914610368578063f2fde38b1461037b576100a9565b80630c96ff9c1461025a5780633a2deef314610284578063578aaba4146102bb578063715018a6146102ce5780638da5cb5b146102d6575b600380546001600160a01b031916309081179091556002546001546040516370a0823160e01b815260048101939093526001600160a01b039182169263095ea7b3929091169083906370a0823190602401602060405180830381865afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b91906108eb565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa9190610904565b506001546040516000916001600160a01b0316906101cb908390369061092d565b600060405180830381855af49150503d8060008114610206576040519150601f19603f3d011682016040523d82523d6000602084013e61020b565b606091505b50509050806102585760405162461bcd60e51b815260206004820152601460248201527311195b1959d85d194818d85b1b0819985a5b195960621b60448201526064015b60405180910390fd5b005b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6102ad610292366004610954565b6001600160a01b031660009081526004602052604090205490565b60405190815260200161027b565b6102586102c9366004610954565b61038e565b6102586103b8565b6000546001600160a01b0316610267565b6103126102f5366004610954565b6001600160a01b0316600090815260046020526040902054151590565b604051901515815260200161027b565b610258610330366004610a12565b6103cc565b610348610343366004610a9a565b6105bf565b60405161027b93929190610b0a565b6002546001600160a01b0316610267565b600354610267906001600160a01b031681565b610258610389366004610954565b610784565b6103966107fd565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103c06107fd565b6103ca6000610857565b565b6103d5336108a7565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561041d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044191906108eb565b10156104825760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f756768206d6f6e657960801b604482015260640161024f565b6002546001600160a01b03166323b872dd336104a66000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152670de0b6b3a764000060448201526064016020604051808303816000875af1158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610904565b503360009081526004602052604081208054829061054290610b4d565b9182905550604080516060810182528681526020808201879052818301869052336000908152600582528381208582529091529190912081519293509091819061058c9082610bfd565b50602082015160018201906105a19082610bfd565b50604082015160028201906105b69082610bfd565b50505050505050565b60056020908152600092835260408084209091529082529020805481906105e590610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461061190610b74565b801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b50505050509080600101805461067390610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90610b74565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b50505050509080600201805461070190610b74565b80601f016020809104026020016040519081016040528092919081815260200182805461072d90610b74565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050505050905083565b61078c6107fd565b6001600160a01b0381166107f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161024f565b6107fa81610857565b50565b6000546001600160a01b031633146103ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526004602052604081205481036108d55750670de0b6b3a7640000919050565b5069152d02c7e14af6800000919050565b919050565b6000602082840312156108fd57600080fd5b5051919050565b60006020828403121561091657600080fd5b8151801515811461092657600080fd5b9392505050565b8183823760009101908152919050565b80356001600160a01b03811681146108e657600080fd5b60006020828403121561096657600080fd5b6109268261093d565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261099657600080fd5b813567ffffffffffffffff808211156109b1576109b161096f565b604051601f8301601f19908116603f011681019082821181831017156109d9576109d961096f565b816040528381528660208588010111156109f257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a2757600080fd5b833567ffffffffffffffff80821115610a3f57600080fd5b610a4b87838801610985565b94506020860135915080821115610a6157600080fd5b610a6d87838801610985565b93506040860135915080821115610a8357600080fd5b50610a9086828701610985565b9150509250925092565b60008060408385031215610aad57600080fd5b610ab68361093d565b946020939093013593505050565b6000815180845260005b81811015610aea57602081850181015186830182015201610ace565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610b1d6060830186610ac4565b8281036020840152610b2f8186610ac4565b90508281036040840152610b438185610ac4565b9695505050505050565b600060018201610b6d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610b8857607f821691505b602082108103610ba857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bf857600081815260208120601f850160051c81016020861015610bd55750805b601f850160051c820191505b81811015610bf457828155600101610be1565b5050505b505050565b815167ffffffffffffffff811115610c1757610c1761096f565b610c2b81610c258454610b74565b84610bae565b602080601f831160018114610c605760008415610c485750858301515b600019600386901b1c1916600185901b178555610bf4565b600085815260208120601f198616915b82811015610c8f57888601518255948401946001909101908401610c70565b5085821015610cad5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200f073793a1242137aa59a402e6cde741fee2288fa8ecc6535025b2d64bb79e5c64736f6c63430008110033",
    "sourceMap": "754:3442:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3965:9;:37;;-1:-1:-1;;;;;;3965:37:16;3996:4;3965:37;;;;;;4012:8;;-1:-1:-1;4029:10:16;4041:33;;-1:-1:-1;;;4041:33:16;;;;;160:51:23;;;;-1:-1:-1;;;;;4012:8:16;;;;:16;;4029:10;;;;4012:8;;4041:18;;133::23;;4041:33:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4012:63;;-1:-1:-1;;;;;;4012:63:16;;;;;;;-1:-1:-1;;;;;603:32:23;;;4012:63:16;;;585:51:23;652:18;;;645:34;558:18;;4012:63:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4104:10:16;;:33;;4086:12;;-1:-1:-1;;;;;4104:10:16;;:33;;4086:12;;4128:8;;4104:33;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4085:52;;;4155:7;4147:40;;;;-1:-1:-1;;;4147:40:16;;1450:2:23;4147:40:16;;;1432:21:23;1489:2;1469:18;;;1462:30;-1:-1:-1;;;1508:18:23;;;1501:50;1568:18;;4147:40:16;;;;;;;;;3955:239;3414:91;3488:10;;-1:-1:-1;;;;;3488:10:16;3414:91;;;-1:-1:-1;;;;;178:32:23;;;160:51;;148:2;133:18;3414:91:16;;;;;;;;3728:115;;;;;;:::i;:::-;-1:-1:-1;;;;;3817:19:16;3791:7;3817:19;;;:8;:19;;;;;;;3728:115;;;;2112:25:23;;;2100:2;2085:18;3728:115:16;1966:177:23;1508:98:16;;;;;;:::i;:::-;;:::i;1831:101:7:-;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:7;1201:85;;3223:121:16;;;;;;:::i;:::-;-1:-1:-1;;;;;3314:19:16;3291:4;3314:19;;;:8;:19;;;;;;:23;;;3223:121;;;;2313:14:23;;2306:22;2288:41;;2276:2;2261:18;3223:121:16;2148:187:23;2224:865:16;;;;;;:::i;:::-;;:::i;1102:64::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3561:89::-;3635:8;;-1:-1:-1;;;;;3635:8:16;3561:89;;874:27;;;;;-1:-1:-1;;;;;874:27:16;;;2081:198:7;;;;;;:::i;:::-;;:::i;1508:98:16:-;1094:13:7;:11;:13::i;:::-;1578:10:16::1;:21:::0;;-1:-1:-1;;;;;;1578:21:16::1;-1:-1:-1::0;;;;;1578:21:16;;;::::1;::::0;;;::::1;::::0;;1508:98::o;1831:101:7:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2224:865:16:-;2487:20;2496:10;2487:8;:20::i;:::-;2453:8;;:30;;-1:-1:-1;;;2453:30:16;;2472:10;2453:30;;;160:51:23;-1:-1:-1;;;;;2453:8:16;;;;:18;;133::23;;2453:30:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;2432:117;;;;-1:-1:-1;;;2432:117:16;;5839:2:23;2432:117:16;;;5821:21:23;5878:2;5858:18;;;5851:30;-1:-1:-1;;;5897:18:23;;;5890:46;5953:18;;2432:117:16;5637:340:23;2432:117:16;2687:8;;-1:-1:-1;;;;;2687:8:16;:21;2709:10;2721:7;1247::7;1273:6;-1:-1:-1;;;;;1273:6:7;;1201:85;2721:7:16;2687:51;;-1:-1:-1;;;;;;2687:51:16;;;;;;;-1:-1:-1;;;;;6240:15:23;;;2687:51:16;;;6222:34:23;6292:15;;6272:18;;;6265:43;942:7:16;6324:18:23;;;6317:34;6157:18;;2687:51:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2840:10:16;2809:17;2831:20;;;:8;:20;;;;;2829:22;;2809:17;;2829:22;;;:::i;:::-;;;;;-1:-1:-1;2974:108:16;;;;;;;;;;;;;;;;;;;;;;;;2949:10;-1:-1:-1;2935:25:16;;;:13;:25;;;;;:36;;;;;;;;;;:147;;2829:22;;-1:-1:-1;2974:108:16;;2935:36;;:147;;:36;:147;:::i;:::-;-1:-1:-1;2935:147:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2935:147:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;2224:865:16:o;1102:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2081:198:7:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:7;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:7;;9390:2:23;2161:73:7::1;::::0;::::1;9372:21:23::0;9429:2;9409:18;;;9402:30;9468:34;9448:18;;;9441:62;-1:-1:-1;;;9519:18:23;;;9512:36;9565:19;;2161:73:7::1;9188:402:23::0;2161:73:7::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:7;719:10:11;1422:23:7;1414:68;;;;-1:-1:-1;;;1414:68:7;;9797:2:23;1414:68:7;;;9779:21:23;;;9816:18;;;9809:30;9875:34;9855:18;;;9848:62;9927:18;;1414:68:7;9595:356:23;2433:187:7;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:7;;;-1:-1:-1;;;;;;2541:17:7;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1736:235:16:-;-1:-1:-1;;;;;1852:16:16;;1792:7;1852:16;;;:8;:16;;;;;;:21;;1848:117;;-1:-1:-1;942:7:16;;1736:235;-1:-1:-1;1736:235:16:o;1848:117::-;-1:-1:-1;1941:13:16;;1736:235;-1:-1:-1;1736:235:16:o;1848:117::-;1736:235;;;:::o;222:184:23:-;292:6;345:2;333:9;324:7;320:23;316:32;313:52;;;361:1;358;351:12;313:52;-1:-1:-1;384:16:23;;222:184;-1:-1:-1;222:184:23:o;690:277::-;757:6;810:2;798:9;789:7;785:23;781:32;778:52;;;826:1;823;816:12;778:52;858:9;852:16;911:5;904:13;897:21;890:5;887:32;877:60;;933:1;930;923:12;877:60;956:5;690:277;-1:-1:-1;;;690:277:23:o;972:271::-;1155:6;1147;1142:3;1129:33;1111:3;1181:16;;1206:13;;;1181:16;972:271;-1:-1:-1;972:271:23:o;1597:173::-;1665:20;;-1:-1:-1;;;;;1714:31:23;;1704:42;;1694:70;;1760:1;1757;1750:12;1775:186;1834:6;1887:2;1875:9;1866:7;1862:23;1858:32;1855:52;;;1903:1;1900;1893:12;1855:52;1926:29;1945:9;1926:29;:::i;2340:127::-;2401:10;2396:3;2392:20;2389:1;2382:31;2432:4;2429:1;2422:15;2456:4;2453:1;2446:15;2472:719;2515:5;2568:3;2561:4;2553:6;2549:17;2545:27;2535:55;;2586:1;2583;2576:12;2535:55;2622:6;2609:20;2648:18;2685:2;2681;2678:10;2675:36;;;2691:18;;:::i;:::-;2766:2;2760:9;2734:2;2820:13;;-1:-1:-1;;2816:22:23;;;2840:2;2812:31;2808:40;2796:53;;;2864:18;;;2884:22;;;2861:46;2858:72;;;2910:18;;:::i;:::-;2950:10;2946:2;2939:22;2985:2;2977:6;2970:18;3031:3;3024:4;3019:2;3011:6;3007:15;3003:26;3000:35;2997:55;;;3048:1;3045;3038:12;2997:55;3112:2;3105:4;3097:6;3093:17;3086:4;3078:6;3074:17;3061:54;3159:1;3152:4;3147:2;3139:6;3135:15;3131:26;3124:37;3179:6;3170:15;;;;;;2472:719;;;;:::o;3196:743::-;3303:6;3311;3319;3372:2;3360:9;3351:7;3347:23;3343:32;3340:52;;;3388:1;3385;3378:12;3340:52;3428:9;3415:23;3457:18;3498:2;3490:6;3487:14;3484:34;;;3514:1;3511;3504:12;3484:34;3537:50;3579:7;3570:6;3559:9;3555:22;3537:50;:::i;:::-;3527:60;;3640:2;3629:9;3625:18;3612:32;3596:48;;3669:2;3659:8;3656:16;3653:36;;;3685:1;3682;3675:12;3653:36;3708:52;3752:7;3741:8;3730:9;3726:24;3708:52;:::i;:::-;3698:62;;3813:2;3802:9;3798:18;3785:32;3769:48;;3842:2;3832:8;3829:16;3826:36;;;3858:1;3855;3848:12;3826:36;;3881:52;3925:7;3914:8;3903:9;3899:24;3881:52;:::i;:::-;3871:62;;;3196:743;;;;;:::o;3944:254::-;4012:6;4020;4073:2;4061:9;4052:7;4048:23;4044:32;4041:52;;;4089:1;4086;4079:12;4041:52;4112:29;4131:9;4112:29;:::i;:::-;4102:39;4188:2;4173:18;;;;4160:32;;-1:-1:-1;;;3944:254:23:o;4203:423::-;4245:3;4283:5;4277:12;4310:6;4305:3;4298:19;4335:1;4345:162;4359:6;4356:1;4353:13;4345:162;;;4421:4;4477:13;;;4473:22;;4467:29;4449:11;;;4445:20;;4438:59;4374:12;4345:162;;;4349:3;4552:1;4545:4;4536:6;4531:3;4527:16;4523:27;4516:38;4615:4;4608:2;4604:7;4599:2;4591:6;4587:15;4583:29;4578:3;4574:39;4570:50;4563:57;;;4203:423;;;;:::o;4631:546::-;4876:2;4865:9;4858:21;4839:4;4902:45;4943:2;4932:9;4928:18;4920:6;4902:45;:::i;:::-;4995:9;4987:6;4983:22;4978:2;4967:9;4963:18;4956:50;5029:33;5055:6;5047;5029:33;:::i;:::-;5015:47;;5110:9;5102:6;5098:22;5093:2;5082:9;5078:18;5071:50;5138:33;5164:6;5156;5138:33;:::i;:::-;5130:41;4631:546;-1:-1:-1;;;;;;4631:546:23:o;6362:232::-;6401:3;6422:17;;;6419:140;;6481:10;6476:3;6472:20;6469:1;6462:31;6516:4;6513:1;6506:15;6544:4;6541:1;6534:15;6419:140;-1:-1:-1;6586:1:23;6575:13;;6362:232::o;6599:380::-;6678:1;6674:12;;;;6721;;;6742:61;;6796:4;6788:6;6784:17;6774:27;;6742:61;6849:2;6841:6;6838:14;6818:18;6815:38;6812:161;;6895:10;6890:3;6886:20;6883:1;6876:31;6930:4;6927:1;6920:15;6958:4;6955:1;6948:15;6812:161;;6599:380;;;:::o;7110:545::-;7212:2;7207:3;7204:11;7201:448;;;7248:1;7273:5;7269:2;7262:17;7318:4;7314:2;7304:19;7388:2;7376:10;7372:19;7369:1;7365:27;7359:4;7355:38;7424:4;7412:10;7409:20;7406:47;;;-1:-1:-1;7447:4:23;7406:47;7502:2;7497:3;7493:12;7490:1;7486:20;7480:4;7476:31;7466:41;;7557:82;7575:2;7568:5;7565:13;7557:82;;;7620:17;;;7601:1;7590:13;7557:82;;;7561:3;;;7201:448;7110:545;;;:::o;7831:1352::-;7957:3;7951:10;7984:18;7976:6;7973:30;7970:56;;;8006:18;;:::i;:::-;8035:97;8125:6;8085:38;8117:4;8111:11;8085:38;:::i;:::-;8079:4;8035:97;:::i;:::-;8187:4;;8251:2;8240:14;;8268:1;8263:663;;;;8970:1;8987:6;8984:89;;;-1:-1:-1;9039:19:23;;;9033:26;8984:89;-1:-1:-1;;7788:1:23;7784:11;;;7780:24;7776:29;7766:40;7812:1;7808:11;;;7763:57;9086:81;;8233:944;;8263:663;7057:1;7050:14;;;7094:4;7081:18;;-1:-1:-1;;8299:20:23;;;8417:236;8431:7;8428:1;8425:14;8417:236;;;8520:19;;;8514:26;8499:42;;8612:27;;;;8580:1;8568:14;;;;8447:19;;8417:236;;;8421:3;8681:6;8672:7;8669:19;8666:201;;;8742:19;;;8736:26;-1:-1:-1;;8825:1:23;8821:14;;;8837:3;8817:24;8813:37;8809:42;8794:58;8779:74;;8666:201;-1:-1:-1;;;;;8913:1:23;8897:14;;;8893:22;8880:36;;-1:-1:-1;7831:1352:23:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "carMarket()": "e74e6a39",
    "getCarCount(address)": "3a2deef3",
    "getCarFactory()": "0c96ff9c",
    "getCarToken()": "d93e8a95",
    "isExistingCustomer(address)": "96eef7d8",
    "owner()": "8da5cb5b",
    "purchaseCar(string,string,string)": "a3e3fa86",
    "purchasedCars(address,uint256)": "ccaa46d5",
    "renounceOwnership()": "715018a6",
    "setCarFactory(address)": "578aaba4",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_carToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"carMarket\",\"outputs\":[{\"internalType\":\"contract ICarMarket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_carOwner\",\"type\":\"address\"}],\"name\":\"getCarCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCarFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCarToken\",\"outputs\":[{\"internalType\":\"contract ICarToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customer\",\"type\":\"address\"}],\"name\":\"isExistingCustomer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_plateNumber\",\"type\":\"string\"}],\"name\":\"purchaseCar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"purchasedCars\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"plateNumber\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setCarFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jelo\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_carToken\":\"The token used to purchase cars\"}},\"getCarCount(address)\":{\"details\":\"Returns the amount of cars a car owner has.\"},\"getCarFactory()\":{\"details\":\"Gets the address of the Car factory\"},\"getCarToken()\":{\"details\":\"Returns the car token\"},\"isExistingCustomer(address)\":{\"details\":\"Checks if a customer has previously purchased a car\",\"params\":{\"_customer\":\"Address of the customer\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"purchaseCar(string,string,string)\":{\"details\":\"Enables a user to purchase a car\",\"params\":{\"_color\":\"The color of the car to be purchased\",\"_model\":\"The model of the car to be purchased\",\"_plateNumber\":\"The plateNumber of the car to be purchased\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCarFactory(address)\":{\"params\":{\"_factory\":\"The address of the car factory.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CarMarket\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets the car token during deployment.\"},\"setCarFactory(address)\":{\"notice\":\"Sets the car factory after deployment.\"}},\"notice\":\"CarMarket is a marketplace where people interested in cars can buy directly from the company.         To grow her userbase, the company allows first time users to purchase cars for free.         Getting a free car involves, using the company's tokens which is given to first timers for free.         There is a problem however, malicious users have discovered how to get a second car for free.         Your job is to figure out how to purchase a second car in a clever and ingenious way.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ethernautDao/level3/CarMarket.sol\":\"CarMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ethernautDao/level3/CarMarket.sol\":{\"keccak256\":\"0x93c46212637ec1a8e631d197489fd45342d0e3422f0a73d2b4bd51404ee71647\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b38e963872f2ad853f5a1780ab5d08bc70abb689e6d27a968b9ccad70d59bbb9\",\"dweb:/ipfs/QmcGEMWNEmXNTA7kDWyLB5YJowLq6agbfT4HcZN2CmeUpu\"]},\"src/ethernautDao/level3/interfaces/ICarMarket.sol\":{\"keccak256\":\"0x415034cc2cc2bc710f438d251af98b9cb2c66006463eb0272a7db14956288b45\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://509bb427c23217d8357ead61219dfa82964a71b6784a2918927f79958d278cbf\",\"dweb:/ipfs/QmWGSabKX3zdeNoyB3uocUvjBzhmxbbxCXgUthAR5hDNiH\"]},\"src/ethernautDao/level3/interfaces/ICarToken.sol\":{\"keccak256\":\"0x3422b68b1d87abb2b3aa766362fa84306c9d9055550f421e826919cb5bf5e7ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b1cfcd24a2c5320e26a786b57555b2dbeed51ebb212beb46d982d97ed2a9eb8\",\"dweb:/ipfs/QmdErdqMW26QLwVduHbXqa9KJ5sTZmNAnYscTTu3d2S584\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_carToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "carMarket",
          "outputs": [
            {
              "internalType": "contract ICarMarket",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_carOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCarCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCarFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCarToken",
          "outputs": [
            {
              "internalType": "contract ICarToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_customer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExistingCustomer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_color",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_model",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_plateNumber",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "purchaseCar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "purchasedCars",
          "outputs": [
            {
              "internalType": "string",
              "name": "color",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "model",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "plateNumber",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCarFactory"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_carToken": "The token used to purchase cars"
            }
          },
          "getCarCount(address)": {
            "details": "Returns the amount of cars a car owner has."
          },
          "getCarFactory()": {
            "details": "Gets the address of the Car factory"
          },
          "getCarToken()": {
            "details": "Returns the car token"
          },
          "isExistingCustomer(address)": {
            "details": "Checks if a customer has previously purchased a car",
            "params": {
              "_customer": "Address of the customer"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "purchaseCar(string,string,string)": {
            "details": "Enables a user to purchase a car",
            "params": {
              "_color": "The color of the car to be purchased",
              "_model": "The model of the car to be purchased",
              "_plateNumber": "The plateNumber of the car to be purchased"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setCarFactory(address)": {
            "params": {
              "_factory": "The address of the car factory."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Sets the car token during deployment."
          },
          "setCarFactory(address)": {
            "notice": "Sets the car factory after deployment."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ethernautDao/level3/CarMarket.sol": "CarMarket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ethernautDao/level3/CarMarket.sol": {
        "keccak256": "0x93c46212637ec1a8e631d197489fd45342d0e3422f0a73d2b4bd51404ee71647",
        "urls": [
          "bzz-raw://b38e963872f2ad853f5a1780ab5d08bc70abb689e6d27a968b9ccad70d59bbb9",
          "dweb:/ipfs/QmcGEMWNEmXNTA7kDWyLB5YJowLq6agbfT4HcZN2CmeUpu"
        ],
        "license": "GPL-3.0"
      },
      "src/ethernautDao/level3/interfaces/ICarMarket.sol": {
        "keccak256": "0x415034cc2cc2bc710f438d251af98b9cb2c66006463eb0272a7db14956288b45",
        "urls": [
          "bzz-raw://509bb427c23217d8357ead61219dfa82964a71b6784a2918927f79958d278cbf",
          "dweb:/ipfs/QmWGSabKX3zdeNoyB3uocUvjBzhmxbbxCXgUthAR5hDNiH"
        ],
        "license": "GPL-3.0"
      },
      "src/ethernautDao/level3/interfaces/ICarToken.sol": {
        "keccak256": "0x3422b68b1d87abb2b3aa766362fa84306c9d9055550f421e826919cb5bf5e7ab",
        "urls": [
          "bzz-raw://5b1cfcd24a2c5320e26a786b57555b2dbeed51ebb212beb46d982d97ed2a9eb8",
          "dweb:/ipfs/QmdErdqMW26QLwVduHbXqa9KJ5sTZmNAnYscTTu3d2S584"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ethernautDao/level3/CarMarket.sol",
    "id": 25102,
    "exportedSymbols": {
      "CarMarket": [
        25101
      ],
      "Context": [
        24051
      ],
      "ICarMarket": [
        25232
      ],
      "ICarToken": [
        25242
      ],
      "IERC20": [
        24004
      ],
      "Ownable": [
        23339
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4160:16",
    "nodes": [
      {
        "id": 24875,
        "nodeType": "PragmaDirective",
        "src": "37:31:16",
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 24876,
        "nodeType": "ImportDirective",
        "src": "70:37:16",
        "absolutePath": "src/ethernautDao/level3/interfaces/ICarMarket.sol",
        "file": "./interfaces/ICarMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25102,
        "sourceUnit": 25233,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24877,
        "nodeType": "ImportDirective",
        "src": "108:36:16",
        "absolutePath": "src/ethernautDao/level3/interfaces/ICarToken.sol",
        "file": "./interfaces/ICarToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25102,
        "sourceUnit": 25243,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24878,
        "nodeType": "ImportDirective",
        "src": "145:52:16",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25102,
        "sourceUnit": 23340,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25101,
        "nodeType": "ContractDefinition",
        "src": "754:3442:16",
        "nodes": [
          {
            "id": 24883,
            "nodeType": "VariableDeclaration",
            "src": "810:26:16",
            "constant": false,
            "mutability": "mutable",
            "name": "carFactory",
            "nameLocation": "826:10:16",
            "scope": 25101,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24882,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 24886,
            "nodeType": "VariableDeclaration",
            "src": "842:26:16",
            "constant": false,
            "mutability": "mutable",
            "name": "carToken",
            "nameLocation": "860:8:16",
            "scope": 25101,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICarToken_$25242",
              "typeString": "contract ICarToken"
            },
            "typeName": {
              "id": 24885,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24884,
                "name": "ICarToken",
                "nameLocations": [
                  "842:9:16"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25242,
                "src": "842:9:16"
              },
              "referencedDeclaration": 25242,
              "src": "842:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICarToken_$25242",
                "typeString": "contract ICarToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 24889,
            "nodeType": "VariableDeclaration",
            "src": "874:27:16",
            "constant": false,
            "functionSelector": "e74e6a39",
            "mutability": "mutable",
            "name": "carMarket",
            "nameLocation": "892:9:16",
            "scope": 25101,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICarMarket_$25232",
              "typeString": "contract ICarMarket"
            },
            "typeName": {
              "id": 24888,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24887,
                "name": "ICarMarket",
                "nameLocations": [
                  "874:10:16"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25232,
                "src": "874:10:16"
              },
              "referencedDeclaration": 25232,
              "src": "874:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICarMarket_$25232",
                "typeString": "contract ICarMarket"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24892,
            "nodeType": "VariableDeclaration",
            "src": "907:42:16",
            "constant": true,
            "mutability": "constant",
            "name": "CARCOST",
            "nameLocation": "932:7:16",
            "scope": 25101,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24890,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "907:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 24891,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "942:7:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 24899,
            "nodeType": "StructDefinition",
            "src": "956:90:16",
            "canonicalName": "CarMarket.Car",
            "members": [
              {
                "constant": false,
                "id": 24894,
                "mutability": "mutable",
                "name": "color",
                "nameLocation": "984:5:16",
                "nodeType": "VariableDeclaration",
                "scope": 24899,
                "src": "977:12:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24893,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "977:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24896,
                "mutability": "mutable",
                "name": "model",
                "nameLocation": "1006:5:16",
                "nodeType": "VariableDeclaration",
                "scope": 24899,
                "src": "999:12:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24895,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "999:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24898,
                "mutability": "mutable",
                "name": "plateNumber",
                "nameLocation": "1028:11:16",
                "nodeType": "VariableDeclaration",
                "scope": 24899,
                "src": "1021:18:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24897,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1021:6:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Car",
            "nameLocation": "963:3:16",
            "scope": 25101,
            "visibility": "public"
          },
          {
            "id": 24903,
            "nodeType": "VariableDeclaration",
            "src": "1052:44:16",
            "constant": false,
            "mutability": "mutable",
            "name": "carCount",
            "nameLocation": "1088:8:16",
            "scope": 25101,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 24902,
              "keyType": {
                "id": 24900,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1060:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1052:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 24901,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1071:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 24910,
            "nodeType": "VariableDeclaration",
            "src": "1102:64:16",
            "constant": false,
            "functionSelector": "ccaa46d5",
            "mutability": "mutable",
            "name": "purchasedCars",
            "nameLocation": "1153:13:16",
            "scope": 25101,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Car_$24899_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct CarMarket.Car))"
            },
            "typeName": {
              "id": 24909,
              "keyType": {
                "id": 24904,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1110:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1102:43:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Car_$24899_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct CarMarket.Car))"
              },
              "valueType": {
                "id": 24908,
                "keyType": {
                  "id": 24905,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1129:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1121:23:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Car_$24899_storage_$",
                  "typeString": "mapping(uint256 => struct CarMarket.Car)"
                },
                "valueType": {
                  "id": 24907,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24906,
                    "name": "Car",
                    "nameLocations": [
                      "1140:3:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 24899,
                    "src": "1140:3:16"
                  },
                  "referencedDeclaration": 24899,
                  "src": "1140:3:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Car_$24899_storage_ptr",
                    "typeString": "struct CarMarket.Car"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 24923,
            "nodeType": "FunctionDefinition",
            "src": "1298:79:16",
            "body": {
              "id": 24922,
              "nodeType": "Block",
              "src": "1329:48:16",
              "statements": [
                {
                  "expression": {
                    "id": 24920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24916,
                      "name": "carToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24886,
                      "src": "1339:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarToken_$25242",
                        "typeString": "contract ICarToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24918,
                          "name": "_carToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24913,
                          "src": "1360:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24917,
                        "name": "ICarToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25242,
                        "src": "1350:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICarToken_$25242_$",
                          "typeString": "type(contract ICarToken)"
                        }
                      },
                      "id": 24919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1350:20:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarToken_$25242",
                        "typeString": "contract ICarToken"
                      }
                    },
                    "src": "1339:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICarToken_$25242",
                      "typeString": "contract ICarToken"
                    }
                  },
                  "id": 24921,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:31:16"
                }
              ]
            },
            "documentation": {
              "id": 24911,
              "nodeType": "StructuredDocumentation",
              "src": "1173:120:16",
              "text": " @notice Sets the car token during deployment.\n @param _carToken The token used to purchase cars"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 24914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24913,
                  "mutability": "mutable",
                  "name": "_carToken",
                  "nameLocation": "1318:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 24923,
                  "src": "1310:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1309:19:16"
            },
            "returnParameters": {
              "id": 24915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:0:16"
            },
            "scope": 25101,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24936,
            "nodeType": "FunctionDefinition",
            "src": "1508:98:16",
            "body": {
              "id": 24935,
              "nodeType": "Block",
              "src": "1568:38:16",
              "statements": [
                {
                  "expression": {
                    "id": 24933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24931,
                      "name": "carFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24883,
                      "src": "1578:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24932,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24926,
                      "src": "1591:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1578:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24934,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:21:16"
                }
              ]
            },
            "documentation": {
              "id": 24924,
              "nodeType": "StructuredDocumentation",
              "src": "1383:120:16",
              "text": " @notice Sets the car factory after deployment.\n @param _factory The address of the car factory."
            },
            "functionSelector": "578aaba4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24929,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24928,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1558:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23258,
                  "src": "1558:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1558:9:16"
              }
            ],
            "name": "setCarFactory",
            "nameLocation": "1517:13:16",
            "parameters": {
              "id": 24927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24926,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "1539:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 24936,
                  "src": "1531:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:18:16"
            },
            "returnParameters": {
              "id": 24930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:0:16"
            },
            "scope": 25101,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24957,
            "nodeType": "FunctionDefinition",
            "src": "1736:235:16",
            "body": {
              "id": 24956,
              "nodeType": "Block",
              "src": "1801:170:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 24944,
                        "name": "carCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24903,
                        "src": "1852:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 24946,
                      "indexExpression": {
                        "id": 24945,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24939,
                        "src": "1861:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1852:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 24947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1872:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1852:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24954,
                    "nodeType": "Block",
                    "src": "1920:45:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3130305f303030",
                          "id": 24952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1941:13:16",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000"
                          },
                          "value": "100_000"
                        },
                        "functionReturnParameters": 24943,
                        "id": 24953,
                        "nodeType": "Return",
                        "src": "1934:20:16"
                      }
                    ]
                  },
                  "id": 24955,
                  "nodeType": "IfStatement",
                  "src": "1848:117:16",
                  "trueBody": {
                    "id": 24951,
                    "nodeType": "Block",
                    "src": "1875:39:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 24949,
                          "name": "CARCOST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24892,
                          "src": "1896:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 24943,
                        "id": 24950,
                        "nodeType": "Return",
                        "src": "1889:14:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 24937,
              "nodeType": "StructuredDocumentation",
              "src": "1612:119:16",
              "text": "@notice Gets the current cost of a car for a particular buyer.\n @param _buyer The buyer to check for."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_carCost",
            "nameLocation": "1745:8:16",
            "parameters": {
              "id": 24940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24939,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "1762:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 24957,
                  "src": "1754:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:16:16"
            },
            "returnParameters": {
              "id": 24943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24957,
                  "src": "1792:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1791:9:16"
            },
            "scope": 25101,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 25013,
            "nodeType": "FunctionDefinition",
            "src": "2224:865:16",
            "body": {
              "id": 25012,
              "nodeType": "Block",
              "src": "2356:733:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24970,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2472:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2476:6:16",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2472:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24968,
                              "name": "carToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24886,
                              "src": "2453:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICarToken_$25242",
                                "typeString": "contract ICarToken"
                              }
                            },
                            "id": 24969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2462:9:16",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23961,
                            "src": "2453:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2453:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24974,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2496:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2500:6:16",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2496:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24973,
                            "name": "_carCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24957,
                            "src": "2487:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 24976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2487:20:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2453:54:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206d6f6e6579",
                        "id": 24978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2521:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080ca61c2933522200e65a0d03ee58527025020c246b50ad1da1ba1d60cacdc7",
                          "typeString": "literal_string \"Not enough money\""
                        },
                        "value": "Not enough money"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080ca61c2933522200e65a0d03ee58527025020c246b50ad1da1ba1d60cacdc7",
                          "typeString": "literal_string \"Not enough money\""
                        }
                      ],
                      "id": 24967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2432:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:117:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24980,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:117:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24984,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2709:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2713:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2709:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24986,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23267,
                          "src": "2721:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2721:7:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24988,
                        "name": "CARCOST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24892,
                        "src": "2730:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24981,
                        "name": "carToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24886,
                        "src": "2687:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICarToken_$25242",
                          "typeString": "contract ICarToken"
                        }
                      },
                      "id": 24983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2696:12:16",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24003,
                      "src": "2687:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2687:51:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24990,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:51:16"
                },
                {
                  "assignments": [
                    24992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24992,
                      "mutability": "mutable",
                      "name": "_carCount",
                      "nameLocation": "2817:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25012,
                      "src": "2809:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24991,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2809:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24998,
                  "initialValue": {
                    "id": 24997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "2829:22:16",
                    "subExpression": {
                      "baseExpression": {
                        "id": 24993,
                        "name": "carCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24903,
                        "src": "2831:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 24996,
                      "indexExpression": {
                        "expression": {
                          "id": 24994,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2840:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2844:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2840:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2831:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2809:42:16"
                },
                {
                  "expression": {
                    "id": 25010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 24999,
                          "name": "purchasedCars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24910,
                          "src": "2935:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Car_$24899_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct CarMarket.Car storage ref))"
                          }
                        },
                        "id": 25003,
                        "indexExpression": {
                          "expression": {
                            "id": 25000,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2949:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2953:6:16",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2949:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2935:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Car_$24899_storage_$",
                          "typeString": "mapping(uint256 => struct CarMarket.Car storage ref)"
                        }
                      },
                      "id": 25004,
                      "indexExpression": {
                        "id": 25002,
                        "name": "_carCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24992,
                        "src": "2961:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2935:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Car_$24899_storage",
                        "typeString": "struct CarMarket.Car storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25006,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24960,
                          "src": "2999:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 25007,
                          "name": "_model",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24962,
                          "src": "3026:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 25008,
                          "name": "_plateNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24964,
                          "src": "3059:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 25005,
                        "name": "Car",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24899,
                        "src": "2974:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Car_$24899_storage_ptr_$",
                          "typeString": "type(struct CarMarket.Car storage pointer)"
                        }
                      },
                      "id": 25009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "2992:5:16",
                        "3019:5:16",
                        "3046:11:16"
                      ],
                      "names": [
                        "color",
                        "model",
                        "plateNumber"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2974:108:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Car_$24899_memory_ptr",
                        "typeString": "struct CarMarket.Car memory"
                      }
                    },
                    "src": "2935:147:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Car_$24899_storage",
                      "typeString": "struct CarMarket.Car storage ref"
                    }
                  },
                  "id": 25011,
                  "nodeType": "ExpressionStatement",
                  "src": "2935:147:16"
                }
              ]
            },
            "documentation": {
              "id": 24958,
              "nodeType": "StructuredDocumentation",
              "src": "1977:242:16",
              "text": " @dev Enables a user to purchase a car\n @param _color The color of the car to be purchased\n @param _model The model of the car to be purchased\n @param _plateNumber The plateNumber of the car to be purchased"
            },
            "functionSelector": "a3e3fa86",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseCar",
            "nameLocation": "2233:11:16",
            "parameters": {
              "id": 24965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24960,
                  "mutability": "mutable",
                  "name": "_color",
                  "nameLocation": "2268:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25013,
                  "src": "2254:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24959,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24962,
                  "mutability": "mutable",
                  "name": "_model",
                  "nameLocation": "2298:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25013,
                  "src": "2284:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24961,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24964,
                  "mutability": "mutable",
                  "name": "_plateNumber",
                  "nameLocation": "2328:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25013,
                  "src": "2314:26:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24963,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2244:102:16"
            },
            "returnParameters": {
              "id": 24966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2356:0:16"
            },
            "scope": 25101,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25028,
            "nodeType": "FunctionDefinition",
            "src": "3223:121:16",
            "body": {
              "id": 25027,
              "nodeType": "Block",
              "src": "3297:47:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 25021,
                        "name": "carCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24903,
                        "src": "3314:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25023,
                      "indexExpression": {
                        "id": 25022,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25016,
                        "src": "3323:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3314:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 25024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3336:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3314:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 25020,
                  "id": 25026,
                  "nodeType": "Return",
                  "src": "3307:30:16"
                }
              ]
            },
            "documentation": {
              "id": 25014,
              "nodeType": "StructuredDocumentation",
              "src": "3095:123:16",
              "text": " @dev Checks if a customer has previously purchased a car\n @param _customer Address of the customer"
            },
            "functionSelector": "96eef7d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExistingCustomer",
            "nameLocation": "3232:18:16",
            "parameters": {
              "id": 25017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25016,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "3259:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25028,
                  "src": "3251:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3250:19:16"
            },
            "returnParameters": {
              "id": 25020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25028,
                  "src": "3291:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25018,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3291:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3290:6:16"
            },
            "scope": 25101,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25037,
            "nodeType": "FunctionDefinition",
            "src": "3414:91:16",
            "body": {
              "id": 25036,
              "nodeType": "Block",
              "src": "3471:34:16",
              "statements": [
                {
                  "expression": {
                    "id": 25034,
                    "name": "carFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24883,
                    "src": "3488:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 25033,
                  "id": 25035,
                  "nodeType": "Return",
                  "src": "3481:17:16"
                }
              ]
            },
            "documentation": {
              "id": 25029,
              "nodeType": "StructuredDocumentation",
              "src": "3350:59:16",
              "text": " @dev Gets the address of the Car factory"
            },
            "functionSelector": "0c96ff9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCarFactory",
            "nameLocation": "3423:13:16",
            "parameters": {
              "id": 25030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3436:2:16"
            },
            "returnParameters": {
              "id": 25033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25032,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25037,
                  "src": "3462:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3461:9:16"
            },
            "scope": 25101,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25047,
            "nodeType": "FunctionDefinition",
            "src": "3561:89:16",
            "body": {
              "id": 25046,
              "nodeType": "Block",
              "src": "3618:32:16",
              "statements": [
                {
                  "expression": {
                    "id": 25044,
                    "name": "carToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24886,
                    "src": "3635:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICarToken_$25242",
                      "typeString": "contract ICarToken"
                    }
                  },
                  "functionReturnParameters": 25043,
                  "id": 25045,
                  "nodeType": "Return",
                  "src": "3628:15:16"
                }
              ]
            },
            "documentation": {
              "id": 25038,
              "nodeType": "StructuredDocumentation",
              "src": "3511:45:16",
              "text": " @dev Returns the car token"
            },
            "functionSelector": "d93e8a95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCarToken",
            "nameLocation": "3570:11:16",
            "parameters": {
              "id": 25039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3581:2:16"
            },
            "returnParameters": {
              "id": 25043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25047,
                  "src": "3607:9:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICarToken_$25242",
                    "typeString": "contract ICarToken"
                  },
                  "typeName": {
                    "id": 25041,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25040,
                      "name": "ICarToken",
                      "nameLocations": [
                        "3607:9:16"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25242,
                      "src": "3607:9:16"
                    },
                    "referencedDeclaration": 25242,
                    "src": "3607:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICarToken_$25242",
                      "typeString": "contract ICarToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3606:11:16"
            },
            "scope": 25101,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25060,
            "nodeType": "FunctionDefinition",
            "src": "3728:115:16",
            "body": {
              "id": 25059,
              "nodeType": "Block",
              "src": "3800:43:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 25055,
                      "name": "carCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24903,
                      "src": "3817:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25057,
                    "indexExpression": {
                      "id": 25056,
                      "name": "_carOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25050,
                      "src": "3826:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3817:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25054,
                  "id": 25058,
                  "nodeType": "Return",
                  "src": "3810:26:16"
                }
              ]
            },
            "documentation": {
              "id": 25048,
              "nodeType": "StructuredDocumentation",
              "src": "3656:67:16",
              "text": " @dev Returns the amount of cars a car owner has."
            },
            "functionSelector": "3a2deef3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCarCount",
            "nameLocation": "3737:11:16",
            "parameters": {
              "id": 25051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25050,
                  "mutability": "mutable",
                  "name": "_carOwner",
                  "nameLocation": "3757:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25060,
                  "src": "3749:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3748:19:16"
            },
            "returnParameters": {
              "id": 25054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25060,
                  "src": "3791:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3790:9:16"
            },
            "scope": 25101,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25100,
            "nodeType": "FunctionDefinition",
            "src": "3935:259:16",
            "body": {
              "id": 25099,
              "nodeType": "Block",
              "src": "3955:239:16",
              "statements": [
                {
                  "expression": {
                    "id": 25071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25064,
                      "name": "carMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24889,
                      "src": "3965:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarMarket_$25232",
                        "typeString": "contract ICarMarket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25068,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3996:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CarMarket_$25101",
                                "typeString": "contract CarMarket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CarMarket_$25101",
                                "typeString": "contract CarMarket"
                              }
                            ],
                            "id": 25067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3988:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25066,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3988:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3988:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25065,
                        "name": "ICarMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25232,
                        "src": "3977:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICarMarket_$25232_$",
                          "typeString": "type(contract ICarMarket)"
                        }
                      },
                      "id": 25070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3977:25:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICarMarket_$25232",
                        "typeString": "contract ICarMarket"
                      }
                    },
                    "src": "3965:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICarMarket_$25232",
                      "typeString": "contract ICarMarket"
                    }
                  },
                  "id": 25072,
                  "nodeType": "ExpressionStatement",
                  "src": "3965:37:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25076,
                        "name": "carFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24883,
                        "src": "4029:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25081,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4068:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CarMarket_$25101",
                                  "typeString": "contract CarMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CarMarket_$25101",
                                  "typeString": "contract CarMarket"
                                }
                              ],
                              "id": 25080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4060:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25079,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4060:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4060:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25077,
                            "name": "carToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24886,
                            "src": "4041:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICarToken_$25242",
                              "typeString": "contract ICarToken"
                            }
                          },
                          "id": 25078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4050:9:16",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23961,
                          "src": "4041:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4041:33:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25073,
                        "name": "carToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24886,
                        "src": "4012:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICarToken_$25242",
                          "typeString": "contract ICarToken"
                        }
                      },
                      "id": 25075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4021:7:16",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23991,
                      "src": "4012:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:63:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25085,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:63:16"
                },
                {
                  "assignments": [
                    25087,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25087,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4091:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25099,
                      "src": "4086:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25086,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4086:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 25093,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25090,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4128:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4132:4:16",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "4128:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 25088,
                        "name": "carFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24883,
                        "src": "4104:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 25089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4115:12:16",
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "4104:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 25092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4104:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4085:52:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25095,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25087,
                        "src": "4155:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656c65676174652063616c6c206661696c6564",
                        "id": 25096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4164:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a403a17604eb4300f809aca8656136029e5674515f063b2844b12b0f3205703",
                          "typeString": "literal_string \"Delegate call failed\""
                        },
                        "value": "Delegate call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a403a17604eb4300f809aca8656136029e5674515f063b2844b12b0f3205703",
                          "typeString": "literal_string \"Delegate call failed\""
                        }
                      ],
                      "id": 25094,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4147:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4147:40:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25098,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:40:16"
                }
              ]
            },
            "documentation": {
              "id": 25061,
              "nodeType": "StructuredDocumentation",
              "src": "3849:81:16",
              "text": " @dev A fallback function that delegates call to the CarFactory"
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3943:2:16"
            },
            "returnParameters": {
              "id": 25063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3955:0:16"
            },
            "scope": 25101,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24880,
              "name": "Ownable",
              "nameLocations": [
                "776:7:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23339,
              "src": "776:7:16"
            },
            "id": 24881,
            "nodeType": "InheritanceSpecifier",
            "src": "776:7:16"
          }
        ],
        "canonicalName": "CarMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 24879,
          "nodeType": "StructuredDocumentation",
          "src": "199:554:16",
          "text": " @title CarMarket\n @author Jelo\n @notice CarMarket is a marketplace where people interested in cars can buy directly from the company.\n         To grow her userbase, the company allows first time users to purchase cars for free.\n         Getting a free car involves, using the company's tokens which is given to first timers for free.\n         There is a problem however, malicious users have discovered how to get a second car for free.\n         Your job is to figure out how to purchase a second car in a clever and ingenious way."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25101,
          23339,
          24051
        ],
        "name": "CarMarket",
        "nameLocation": "763:9:16",
        "scope": 25102,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 16
}
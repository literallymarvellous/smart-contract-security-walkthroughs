{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_player",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "player",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405262000014426312cc030062000219565b6005553480156200002457600080fd5b5060405162000e4038038062000e40833981016040819052620000479162000235565b6040518060400160405280600a8152602001692730bab3b43a21b7b4b760b11b8152506040518060400160405280600381526020016203078360ec1b81525081600390816200009791906200030b565b506004620000a682826200030b565b5050600780546001600160a01b0319166001600160a01b03841617905550620000cd601290565b620000dd9060ff16600a620004d4565b620000ec90620f4240620004e2565b60068190556007546200010b916001600160a01b039091169062000149565b6007546006546040519081526001600160a01b039091169060009060008051602062000e208339815191529060200160405180910390a350620004fc565b6001600160a01b038216620001a45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001b8919062000219565b90915550506001600160a01b0382166000818152602081815260408083208054860190555184815260008051602062000e20833981519152910160405180910390a35050565b505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156200022f576200022f62000203565b92915050565b6000602082840312156200024857600080fd5b81516001600160a01b03811681146200026057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029257607f821691505b602082108103620002b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fe57600081815260208120601f850160051c81016020861015620002e25750805b601f850160051c820191505b818110156200030357828155600101620002ee565b505050505050565b81516001600160401b0381111562000327576200032762000267565b6200033f816200033884546200027d565b84620002b9565b602080601f8311600181146200037757600084156200035e5750858301515b600019600386901b1c1916600185901b17855562000303565b600085815260208120601f198616915b82811015620003a85788860151825594840194600190910190840162000387565b5085821015620003c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600181815b8085111562000418578160001904821115620003fc57620003fc62000203565b808516156200040a57918102915b93841c9390800290620003dc565b509250929050565b60008262000431575060016200022f565b8162000440575060006200022f565b8160018114620004595760028114620004645762000484565b60019150506200022f565b60ff84111562000478576200047862000203565b50506001821b6200022f565b5060208310610133831016604e8410600b8410161715620004a9575081810a6200022f565b620004b58383620003d7565b8060001904821115620004cc57620004cc62000203565b029392505050565b600062000260838362000420565b80820281158282048414176200022f576200022f62000203565b610914806200050c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806348db5f891161008c578063a457c2d711610066578063a457c2d7146101dc578063a9059cbb146101ef578063d085835a14610202578063dd62ed3e1461020b57600080fd5b806348db5f891461018057806370a08231146101ab57806395d89b41146101d457600080fd5b806323b872dd116100c857806323b872dd146101425780632ff2e9dc14610155578063313ce5671461015e578063395093511461016d57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021e565b604051610104919061075e565b60405180910390f35b61012061011b3660046107c8565b6102b0565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046107f2565b6102ca565b61013460065481565b60405160128152602001610104565b61012061017b3660046107c8565b6102ee565b600754610193906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6101346101b936600461082e565b6001600160a01b031660009081526020819052604090205490565b6100f7610310565b6101206101ea3660046107c8565b61031f565b6101206101fd3660046107c8565b61039f565b61013460055481565b610134610219366004610850565b6103e3565b60606003805461022d90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461025990610883565b80156102a65780601f1061027b576101008083540402835291602001916102a6565b820191906000526020600020905b81548152906001019060200180831161028957829003601f168201915b5050505050905090565b6000336102be81858561040e565b60019150505b92915050565b6000336102d8858285610532565b6102e38585856105ac565b506001949350505050565b6000336102be81858561030183836103e3565b61030b91906108bd565b61040e565b60606004805461022d90610883565b6000338161032d82866103e3565b9050838110156103925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e3828686840361040e565b6007546000906001600160a01b031633036103d25760055442116103c257600080fd5b6103cc8383610750565b506102c4565b6103dc8383610750565b5092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610389565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610389565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061053e84846103e3565b905060001981146105a657818110156105995760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610389565b6105a6848484840361040e565b50505050565b6001600160a01b0383166106105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610389565b6001600160a01b0382166106725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610389565b6001600160a01b038316600090815260208190526040902054818110156106ea5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610389565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a6565b6000336102be8185856105ac565b600060208083528351808285015260005b8181101561078b5785810183015185820160400152820161076f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107c357600080fd5b919050565b600080604083850312156107db57600080fd5b6107e4836107ac565b946020939093013593505050565b60008060006060848603121561080757600080fd5b610810846107ac565b925061081e602085016107ac565b9150604084013590509250925092565b60006020828403121561084057600080fd5b610849826107ac565b9392505050565b6000806040838503121561086357600080fd5b61086c836107ac565b915061087a602084016107ac565b90509250929050565b600181811c9082168061089757607f821691505b6020821081036108b757634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102c457634e487b7160e01b600052601160045260246000fdfea2646970667358221220e24a4a20f8d2de99d0da8febca3499278c3bbff2a982e5d7558962483670363364736f6c63430008110033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
    "sourceMap": "114:1047:48:-:0;;;315:31;:15;333:13;315:31;:::i;:::-;289:57;;415:340;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:16;;;;;;;;;;;;;-1:-1:-1;;;1976:113:16;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:16;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:16;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;481:6:48::1;:16:::0;;-1:-1:-1;;;;;;481:16:48::1;-1:-1:-1::0;;;;;481:16:48;::::1;;::::0;;-1:-1:-1;549:10:48::1;3173:2:16::0;;3091:91;549:10:48::1;535:25;::::0;541:19:::1;;535:2;:25;:::i;:::-;524:37;::::0;:7:::1;:37;:::i;:::-;507:14;:54:::0;;;666:6:::1;::::0;660:29:::1;::::0;-1:-1:-1;;;;;666:6:48;;::::1;::::0;660:5:::1;:29::i;:::-;725:6;::::0;733:14:::1;::::0;704:44:::1;::::0;4985:25:126;;;-1:-1:-1;;;;;725:6:48;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;;;;;704:44:48;4973:2:126;4958:18;704:44:48::1;;;;;;;415:340:::0;114:1047;;8567:535:16;-1:-1:-1;;;;;8650:21:16;;8642:65;;;;-1:-1:-1;;;8642:65:16;;5223:2:126;8642:65:16;;;5205:21:126;5262:2;5242:18;;;5235:30;5301:33;5281:18;;;5274:61;5352:18;;8642:65:16;;;;;;;;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:16;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;4985:25:126;;;-1:-1:-1;;;;;;;;;;;8999:37:16;4958:18:126;8999:37:16;;;;;;;8567:535;;:::o;12180:121::-;;;;:::o;14:127:126:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;211:9;;;232:10;;;229:36;;;245:18;;:::i;:::-;146:125;;;;:::o;276:290::-;346:6;399:2;387:9;378:7;374:23;370:32;367:52;;;415:1;412;405:12;367:52;441:16;;-1:-1:-1;;;;;486:31:126;;476:42;;466:70;;532:1;529;522:12;466:70;555:5;276:290;-1:-1:-1;;;276:290:126:o;571:127::-;632:10;627:3;623:20;620:1;613:31;663:4;660:1;653:15;687:4;684:1;677:15;703:380;782:1;778:12;;;;825;;;846:61;;900:4;892:6;888:17;878:27;;846:61;953:2;945:6;942:14;922:18;919:38;916:161;;999:10;994:3;990:20;987:1;980:31;1034:4;1031:1;1024:15;1062:4;1059:1;1052:15;916:161;;703:380;;;:::o;1214:545::-;1316:2;1311:3;1308:11;1305:448;;;1352:1;1377:5;1373:2;1366:17;1422:4;1418:2;1408:19;1492:2;1480:10;1476:19;1473:1;1469:27;1463:4;1459:38;1528:4;1516:10;1513:20;1510:47;;;-1:-1:-1;1551:4:126;1510:47;1606:2;1601:3;1597:12;1594:1;1590:20;1584:4;1580:31;1570:41;;1661:82;1679:2;1672:5;1669:13;1661:82;;;1724:17;;;1705:1;1694:13;1661:82;;;1665:3;;;1214:545;;;:::o;1935:1352::-;2055:10;;-1:-1:-1;;;;;2077:30:126;;2074:56;;;2110:18;;:::i;:::-;2139:97;2229:6;2189:38;2221:4;2215:11;2189:38;:::i;:::-;2183:4;2139:97;:::i;:::-;2291:4;;2355:2;2344:14;;2372:1;2367:663;;;;3074:1;3091:6;3088:89;;;-1:-1:-1;3143:19:126;;;3137:26;3088:89;-1:-1:-1;;1892:1:126;1888:11;;;1884:24;1880:29;1870:40;1916:1;1912:11;;;1867:57;3190:81;;2337:944;;2367:663;1161:1;1154:14;;;1198:4;1185:18;;-1:-1:-1;;2403:20:126;;;2521:236;2535:7;2532:1;2529:14;2521:236;;;2624:19;;;2618:26;2603:42;;2716:27;;;;2684:1;2672:14;;;;2551:19;;2521:236;;;2525:3;2785:6;2776:7;2773:19;2770:201;;;2846:19;;;2840:26;-1:-1:-1;;2929:1:126;2925:14;;;2941:3;2921:24;2917:37;2913:42;2898:58;2883:74;;2770:201;-1:-1:-1;;;;;3017:1:126;3001:14;;;2997:22;2984:36;;-1:-1:-1;1935:1352:126:o;3292:422::-;3381:1;3424:5;3381:1;3438:270;3459:7;3449:8;3446:21;3438:270;;;3518:4;3514:1;3510:6;3506:17;3500:4;3497:27;3494:53;;;3527:18;;:::i;:::-;3577:7;3567:8;3563:22;3560:55;;;3597:16;;;;3560:55;3676:22;;;;3636:15;;;;3438:270;;;3442:3;3292:422;;;;;:::o;3719:806::-;3768:5;3798:8;3788:80;;-1:-1:-1;3839:1:126;3853:5;;3788:80;3887:4;3877:76;;-1:-1:-1;3924:1:126;3938:5;;3877:76;3969:4;3987:1;3982:59;;;;4055:1;4050:130;;;;3962:218;;3982:59;4012:1;4003:10;;4026:5;;;4050:130;4087:3;4077:8;4074:17;4071:43;;;4094:18;;:::i;:::-;-1:-1:-1;;4150:1:126;4136:16;;4165:5;;3962:218;;4264:2;4254:8;4251:16;4245:3;4239:4;4236:13;4232:36;4226:2;4216:8;4213:16;4208:2;4202:4;4199:12;4195:35;4192:77;4189:159;;;-1:-1:-1;4301:19:126;;;4333:5;;4189:159;4380:34;4405:8;4399:4;4380:34;:::i;:::-;4450:6;4446:1;4442:6;4438:19;4429:7;4426:32;4423:58;;;4461:18;;:::i;:::-;4499:20;;3719:806;-1:-1:-1;;;3719:806:126:o;4530:131::-;4590:5;4619:36;4646:8;4640:4;4619:36;:::i;4666:168::-;4739:9;;;4770;;4787:15;;;4781:22;;4767:37;4757:71;;4808:18;;:::i;5021:355::-;114:1047:48;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806348db5f891161008c578063a457c2d711610066578063a457c2d7146101dc578063a9059cbb146101ef578063d085835a14610202578063dd62ed3e1461020b57600080fd5b806348db5f891461018057806370a08231146101ab57806395d89b41146101d457600080fd5b806323b872dd116100c857806323b872dd146101425780632ff2e9dc14610155578063313ce5671461015e578063395093511461016d57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021e565b604051610104919061075e565b60405180910390f35b61012061011b3660046107c8565b6102b0565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046107f2565b6102ca565b61013460065481565b60405160128152602001610104565b61012061017b3660046107c8565b6102ee565b600754610193906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6101346101b936600461082e565b6001600160a01b031660009081526020819052604090205490565b6100f7610310565b6101206101ea3660046107c8565b61031f565b6101206101fd3660046107c8565b61039f565b61013460055481565b610134610219366004610850565b6103e3565b60606003805461022d90610883565b80601f016020809104026020016040519081016040528092919081815260200182805461025990610883565b80156102a65780601f1061027b576101008083540402835291602001916102a6565b820191906000526020600020905b81548152906001019060200180831161028957829003601f168201915b5050505050905090565b6000336102be81858561040e565b60019150505b92915050565b6000336102d8858285610532565b6102e38585856105ac565b506001949350505050565b6000336102be81858561030183836103e3565b61030b91906108bd565b61040e565b60606004805461022d90610883565b6000338161032d82866103e3565b9050838110156103925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102e3828686840361040e565b6007546000906001600160a01b031633036103d25760055442116103c257600080fd5b6103cc8383610750565b506102c4565b6103dc8383610750565b5092915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610389565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610389565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061053e84846103e3565b905060001981146105a657818110156105995760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610389565b6105a6848484840361040e565b50505050565b6001600160a01b0383166106105760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610389565b6001600160a01b0382166106725760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610389565b6001600160a01b038316600090815260208190526040902054818110156106ea5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610389565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a6565b6000336102be8185856105ac565b600060208083528351808285015260005b8181101561078b5785810183015185820160400152820161076f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107c357600080fd5b919050565b600080604083850312156107db57600080fd5b6107e4836107ac565b946020939093013593505050565b60008060006060848603121561080757600080fd5b610810846107ac565b925061081e602085016107ac565b9150604084013590509250925092565b60006020828403121561084057600080fd5b610849826107ac565b9392505050565b6000806040838503121561086357600080fd5b61086c836107ac565b915061087a602084016107ac565b90509250929050565b600181811c9082168061089757607f821691505b6020821081036108b757634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102c457634e487b7160e01b600052601160045260246000fdfea2646970667358221220e24a4a20f8d2de99d0da8febca3499278c3bbff2a982e5d7558962483670363364736f6c63430008110033",
    "sourceMap": "114:1047:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:126;;1162:22;1144:41;;1132:2;1117:18;4431:197:16;1004:187:126;3242:106:16;3329:12;;3242:106;;;1342:25:126;;;1330:2;1315:18;3242:106:16;1196:177:126;5190:286:16;;;;;;:::i;:::-;;:::i;352:29:48:-;;;;;;3091:91:16;;;3173:2;1853:36:126;;1841:2;1826:18;3091:91:16;1711:184:126;5871:234:16;;;;;;:::i;:::-;;:::i;387:21:48:-;;;;;-1:-1:-1;;;;;387:21:48;;;;;;-1:-1:-1;;;;;2064:32:126;;;2046:51;;2034:2;2019:18;387:21:48;1900:203:126;3406:125:16;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:16;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;761:133:48:-;;;;;;:::i;:::-;;:::i;289:57::-;;;;;;3974:149:16;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:27;4568:32:16;719:10:27;4584:7:16;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:27;5373:38:16;5389:4;719:10:27;5404:6:16;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:16;;5190:286;-1:-1:-1;;;;5190:286:16:o;5871:234::-;5959:4;719:10:27;6013:64:16;719:10:27;6029:7:16;6066:10;6038:25;719:10:27;6029:7:16;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:27;6685:4:16;6766:25;719:10:27;6783:7:16;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:16;;3378:2:126;6801:85:16;;;3360:21:126;3417:2;3397:18;;;3390:30;3456:34;3436:18;;;3429:62;-1:-1:-1;;;3507:18:126;;;3500:35;3552:19;;6801:85:16;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;761:133:48:-;1038:6;;844:4;;-1:-1:-1;;;;;1038:6:48;1024:10;:20;1020:133;;1086:8;;1068:15;:26;1060:35;;;;;;860:27:::1;875:3;880:6;860:14;:27::i;:::-;;1020:133:::0;;;860:27:::1;875:3;880:6;860:14;:27::i;:::-;;761:133:::0;;;;:::o;3974:149:16:-;-1:-1:-1;;;;;4089:18:16;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:16;;10627:68;;;;-1:-1:-1;;;10627:68:16;;3784:2:126;10627:68:16;;;3766:21:126;3823:2;3803:18;;;3796:30;3862:34;3842:18;;;3835:62;-1:-1:-1;;;3913:18:126;;;3906:34;3957:19;;10627:68:16;3582:400:126;10627:68:16;-1:-1:-1;;;;;10713:21:16;;10705:68;;;;-1:-1:-1;;;10705:68:16;;4189:2:126;10705:68:16;;;4171:21:126;4228:2;4208:18;;;4201:30;4267:34;4247:18;;;4240:62;-1:-1:-1;;;4318:18:126;;;4311:32;4360:19;;10705:68:16;3987:398:126;10705:68:16;-1:-1:-1;;;;;10784:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:126;;;10835:32:16;;1315:18:126;10835:32:16;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:16;;4592:2:126;11404:68:16;;;4574:21:126;4631:2;4611:18;;;4604:30;4670:31;4650:18;;;4643:59;4719:18;;11404:68:16;4390:353:126;11404:68:16;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:16;;7591:68;;;;-1:-1:-1;;;7591:68:16;;4950:2:126;7591:68:16;;;4932:21:126;4989:2;4969:18;;;4962:30;5028:34;5008:18;;;5001:62;-1:-1:-1;;;5079:18:126;;;5072:35;5124:19;;7591:68:16;4748:401:126;7591:68:16;-1:-1:-1;;;;;7677:16:16;;7669:64;;;;-1:-1:-1;;;7669:64:16;;5356:2:126;7669:64:16;;;5338:21:126;5395:2;5375:18;;;5368:30;5434:34;5414:18;;;5407:62;-1:-1:-1;;;5485:18:126;;;5478:33;5528:19;;7669:64:16;5154:399:126;7669:64:16;-1:-1:-1;;;;;7815:15:16;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:16;;5760:2:126;7840:72:16;;;5742:21:126;5799:2;5779:18;;;5772:30;5838:34;5818:18;;;5811:62;-1:-1:-1;;;5889:18:126;;;5882:36;5935:19;;7840:72:16;5558:402:126;7840:72:16;-1:-1:-1;;;;;7946:15:16;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1342:25:126;;;8161:13:16;;8210:26;;1315:18:126;8210:26:16;;;;;;;8247:37;12180:121;3727:189;3806:4;719:10:27;3860:28:16;719:10:27;3877:2:16;3881:6;3860:9;:28::i;14:548:126:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:126;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:126:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:126:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:222::-;3014:9;;;3035:10;;;3032:133;;;3087:10;3082:3;3078:20;3075:1;3068:31;3122:4;3119:1;3112:15;3150:4;3147:1;3140:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "INITIAL_SUPPLY()": "2ff2e9dc",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "player()": "48db5f89",
    "symbol()": "95d89b41",
    "timeLock()": "d085835a",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ethernaut/level_15/NaughtCoin.sol\":\"NaughtCoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ethernaut/level_15/NaughtCoin.sol\":{\"keccak256\":\"0x61c1b435489f3a6e20cccf88c6197f3ecabc82eac624371391b9a8d77bf983f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8787d396beda2777ea12b9df901eb70aab55a6961cf8c1a668587fa5c5c620c6\",\"dweb:/ipfs/QmTADZqgpKLi9MJVPyWJuqiQ1Qr21xpSdeyUso7h3bJCD1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_player",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "INITIAL_SUPPLY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "player",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timeLock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ethernaut/level_15/NaughtCoin.sol": "NaughtCoin"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/ethernaut/level_15/NaughtCoin.sol": {
        "keccak256": "0x61c1b435489f3a6e20cccf88c6197f3ecabc82eac624371391b9a8d77bf983f4",
        "urls": [
          "bzz-raw://8787d396beda2777ea12b9df901eb70aab55a6961cf8c1a668587fa5c5c620c6",
          "dweb:/ipfs/QmTADZqgpKLi9MJVPyWJuqiQ1Qr21xpSdeyUso7h3bJCD1"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ethernaut/level_15/NaughtCoin.sol",
    "id": 38208,
    "exportedSymbols": {
      "Context": [
        34671
      ],
      "ERC20": [
        32858
      ],
      "IERC20": [
        32936
      ],
      "IERC20Metadata": [
        33005
      ],
      "NaughtCoin": [
        38207
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1130:48",
    "nodes": [
      {
        "id": 38111,
        "nodeType": "PragmaDirective",
        "src": "32:23:48",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 38112,
        "nodeType": "ImportDirective",
        "src": "57:55:48",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38208,
        "sourceUnit": 32859,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38207,
        "nodeType": "ContractDefinition",
        "src": "114:1047:48",
        "nodes": [
          {
            "id": 38122,
            "nodeType": "VariableDeclaration",
            "src": "289:57:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "d085835a",
            "mutability": "mutable",
            "name": "timeLock",
            "nameLocation": "304:8:48",
            "scope": 38207,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38115,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 38121,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "expression": {
                  "id": 38116,
                  "name": "block",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -4,
                  "src": "315:5:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_block",
                    "typeString": "block"
                  }
                },
                "id": 38117,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "321:9:48",
                "memberName": "timestamp",
                "nodeType": "MemberAccess",
                "src": "315:15:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_315360000_by_1",
                  "typeString": "int_const 315360000"
                },
                "id": 38120,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 38118,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "333:2:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "333635",
                  "id": 38119,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "338:8:48",
                  "subdenomination": "days",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_31536000_by_1",
                    "typeString": "int_const 31536000"
                  },
                  "value": "365"
                },
                "src": "333:13:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_315360000_by_1",
                  "typeString": "int_const 315360000"
                }
              },
              "src": "315:31:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38124,
            "nodeType": "VariableDeclaration",
            "src": "352:29:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "2ff2e9dc",
            "mutability": "mutable",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "367:14:48",
            "scope": 38207,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38123,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "352:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38126,
            "nodeType": "VariableDeclaration",
            "src": "387:21:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "48db5f89",
            "mutability": "mutable",
            "name": "player",
            "nameLocation": "402:6:48",
            "scope": 38207,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38125,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "387:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38167,
            "nodeType": "FunctionDefinition",
            "src": "415:340:48",
            "nodes": [],
            "body": {
              "id": 38166,
              "nodeType": "Block",
              "src": "471:284:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38135,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38126,
                      "src": "481:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38136,
                      "name": "_player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38128,
                      "src": "490:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "481:16:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38138,
                  "nodeType": "ExpressionStatement",
                  "src": "481:16:48"
                },
                {
                  "expression": {
                    "id": 38150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38139,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38124,
                      "src": "507:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 38149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31303030303030",
                        "id": 38140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "524:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 38147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 38141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "535:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 38144,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32346,
                                    "src": "549:8:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 38145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "549:10:48",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 38143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "541:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 38142,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "541:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "541:19:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "535:25:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 38148,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "534:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "524:37:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "507:54:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38151,
                  "nodeType": "ExpressionStatement",
                  "src": "507:54:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38153,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38126,
                        "src": "666:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38154,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38124,
                        "src": "674:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38152,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32675,
                      "src": "660:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 38155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:29:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38156,
                  "nodeType": "ExpressionStatement",
                  "src": "660:29:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 38160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "721:1:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 38159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "713:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "713:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:10:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38162,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38126,
                        "src": "725:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38163,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38124,
                        "src": "733:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38157,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32870,
                      "src": "704:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 38164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:44:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38165,
                  "nodeType": "EmitStatement",
                  "src": "699:49:48"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4e6175676874436f696e",
                    "id": 38131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "450:12:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4afc39a1c0cce09bb97a850a1428ae64f67913cc9defe3d11f67b29861baf4b9",
                      "typeString": "literal_string \"NaughtCoin\""
                    },
                    "value": "NaughtCoin"
                  },
                  {
                    "hexValue": "307830",
                    "id": 38132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "464:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
                      "typeString": "literal_string \"0x0\""
                    },
                    "value": "0x0"
                  }
                ],
                "id": 38133,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38130,
                  "name": "ERC20",
                  "nameLocations": [
                    "444:5:48"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32858,
                  "src": "444:5:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "444:26:48"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38128,
                  "mutability": "mutable",
                  "name": "_player",
                  "nameLocation": "435:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 38167,
                  "src": "427:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "426:17:48"
            },
            "returnParameters": {
              "id": 38134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:48"
            },
            "scope": 38207,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38187,
            "nodeType": "FunctionDefinition",
            "src": "761:133:48",
            "nodes": [],
            "body": {
              "id": 38186,
              "nodeType": "Block",
              "src": "850:44:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38182,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38169,
                        "src": "875:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38183,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38171,
                        "src": "880:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38179,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "860:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NaughtCoin_$38207_$",
                          "typeString": "type(contract super NaughtCoin)"
                        }
                      },
                      "id": 38181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "866:8:48",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32395,
                      "src": "860:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 38184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:27:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38185,
                  "nodeType": "ExpressionStatement",
                  "src": "860:27:48"
                }
              ]
            },
            "baseFunctions": [
              32395
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38174,
                  "name": "lockTokens",
                  "nameLocations": [
                    "824:10:48"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38206,
                  "src": "824:10:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "824:10:48"
              }
            ],
            "name": "transfer",
            "nameLocation": "770:8:48",
            "overrides": {
              "id": 38173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "815:8:48"
            },
            "parameters": {
              "id": 38172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38169,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "787:3:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 38187,
                  "src": "779:11:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38171,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "800:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 38187,
                  "src": "792:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:29:48"
            },
            "returnParameters": {
              "id": 38178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38187,
                  "src": "844:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:6:48"
            },
            "scope": 38207,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38206,
            "nodeType": "ModifierDefinition",
            "src": "988:171:48",
            "nodes": [],
            "body": {
              "id": 38205,
              "nodeType": "Block",
              "src": "1010:149:48",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 38189,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1024:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1028:6:48",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1024:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 38191,
                      "name": "player",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38126,
                      "src": "1038:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1024:20:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38203,
                    "nodeType": "Block",
                    "src": "1127:26:48",
                    "statements": [
                      {
                        "id": 38202,
                        "nodeType": "PlaceholderStatement",
                        "src": "1141:1:48"
                      }
                    ]
                  },
                  "id": 38204,
                  "nodeType": "IfStatement",
                  "src": "1020:133:48",
                  "trueBody": {
                    "id": 38201,
                    "nodeType": "Block",
                    "src": "1046:75:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 38197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 38194,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1068:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 38195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1074:9:48",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1068:15:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 38196,
                                "name": "timeLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38122,
                                "src": "1086:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1068:26:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 38193,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1060:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 38198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1060:35:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38199,
                        "nodeType": "ExpressionStatement",
                        "src": "1060:35:48"
                      },
                      {
                        "id": 38200,
                        "nodeType": "PlaceholderStatement",
                        "src": "1109:1:48"
                      }
                    ]
                  }
                }
              ]
            },
            "name": "lockTokens",
            "nameLocation": "997:10:48",
            "parameters": {
              "id": 38188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:2:48"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38113,
              "name": "ERC20",
              "nameLocations": [
                "137:5:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32858,
              "src": "137:5:48"
            },
            "id": 38114,
            "nodeType": "InheritanceSpecifier",
            "src": "137:5:48"
          }
        ],
        "canonicalName": "NaughtCoin",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38207,
          32858,
          33005,
          32936,
          34671
        ],
        "name": "NaughtCoin",
        "nameLocation": "123:10:48",
        "scope": 38208,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 48
}